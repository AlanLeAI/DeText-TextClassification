node {
  name: "Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9255
          }
        }
        string_val: "[PAD]"
        string_val: "[UNK]"
        string_val: "want"
        string_val: "to"
        string_val: "bring"
        string_val: "antoinette"
        string_val: "christine"
        string_val: "and"
        string_val: "caitlin"
        string_val: "get"
        string_val: "bread"
        string_val: "at"
        string_val: "restaurant"
        string_val: "in"
        string_val: "faraway"
        string_val: "connecticut"
        string_val: "book"
        string_val: "reservation"
        string_val: "for"
        string_val: "bar"
        string_val: "serving"
        string_val: "corn"
        string_val: "relish"
        string_val: "show"
        string_val: "the"
        string_val: "ancient"
        string_val: "art"
        string_val: "of"
        string_val: "war"
        string_val: "picture"
        string_val: "bullfeathers"
        string_val: "spot"
        string_val: "six"
        string_val: "on"
        string_val: "october"
        string_val: "fifth"
        string_val: "mineola"
        string_val: "give"
        string_val: "main"
        string_val: "travelled"
        string_val: "roads"
        string_val: "series"
        string_val: "points"
        string_val: "out"
        string_val: "please"
        string_val: "me"
        string_val: "seating"
        string_val: "tavern"
        string_val: "red"
        string_val: "lick"
        string_val: "michigan"
        string_val: "look"
        string_val: "movie"
        string_val: "darkness"
        string_val: "come"
        string_val: "alive"
        string_val: "is"
        string_val: "there"
        string_val: "blizzard"
        string_val: "coming"
        string_val: "tomorrow"
        string_val: "methuen"
        string_val: "uganda"
        string_val: "my"
        string_val: "timeless"
        string_val: "love"
        string_val: "songs"
        string_val: "playlist"
        string_val: "should"
        string_val: "include"
        string_val: "viderunt"
        string_val: "omnes"
        string_val: "film"
        string_val: "goodrich"
        string_val: "quality"
        string_val: "theaters"
        string_val: "playing"
        string_val: "12"
        string_val: "26"
        string_val: "am"
        string_val: "weather"
        string_val: "knierim"
        string_val: "kansas"
        string_val: "twelve"
        string_val: "weeks"
        string_val: "half"
        string_val: "from"
        string_val: "now"
        string_val: "find"
        string_val: "framing"
        string_val: "early"
        string_val: "middle"
        string_val: "ages"
        string_val: "game"
        string_val: "what"
        string_val: "films"
        string_val: "are"
        string_val: "showing"
        string_val: "neighborhood"
        string_val: "forecast"
        string_val: "latvia"
        string_val: "strasburg"
        string_val: "rate"
        string_val: "hard"
        string_val: "life"
        string_val: "stars"
        string_val: "will"
        string_val: "be"
        string_val: "snowstorm"
        string_val: "eight"
        string_val: "months"
        string_val: "chattahoochee"
        string_val: "river"
        string_val: "national"
        string_val: "recreation"
        string_val: "area"
        string_val: "add"
        string_val: "list"
        string_val: "rush"
        string_val: "instrumentals"
        string_val: "this"
        string_val: "lady"
        string_val: "antebellum"
        string_val: "can"
        string_val: "you"
        string_val: "let"
        string_val: "know"
        string_val: "where"
        string_val: "watch"
        string_val: "nest"
        string_val: "ricardo"
        string_val: "villalobos"
        string_val: "track"
        string_val: "under"
        string_val: "surface"
        string_val: "schedules"
        string_val: "table"
        string_val: "cayman"
        string_val: "islands"
        string_val: "two"
        string_val: "hundred"
        string_val: "ninety"
        string_val: "days"
        string_val: "pub"
        string_val: "with"
        string_val: "internet"
        string_val: "people"
        string_val: "song"
        string_val: "top"
        string_val: "100"
        string_val: "indie"
        string_val: "tracks"
        string_val: "spotify"
        string_val: "far"
        string_val: "away"
        string_val: "estonia"
        string_val: "when"
        string_val: "spyforce"
        string_val: "it"
        string_val: "windy"
        string_val: "ocean"
        string_val: "breeze"
        string_val: "park"
        string_val: "hotter"
        string_val: "around"
        string_val: "elevenses"
        string_val: "ks"
        string_val: "animated"
        string_val: "movies"
        string_val: "closest"
        string_val: "theatre"
        string_val: "local"
        string_val: "times"
        string_val: "current"
        string_val: "album"
        string_val: "nearby"
        string_val: "put"
        string_val: "live"
        string_val: "rare"
        string_val: "into"
        string_val: "dancehall"
        string_val: "official"
        string_val: "world"
        string_val: "warcraft"
        string_val: "tides"
        string_val: "turbulent"
        string_val: "term"
        string_val: "tyke"
        string_val: "tiler"
        string_val: "creative"
        string_val: "elements"
        string_val: "remixed"
        string_val: "need"
        string_val: "san"
        string_val: "martin"
        string_val: "search"
        string_val: "frog"
        string_val: "birdsong"
        string_val: "jovanotti"
        string_val: "punk"
        string_val: "espa\303\261ol"
        string_val: "creativity"
        string_val: "everything"
        string_val: "once"
        string_val: "work"
        string_val: "titled"
        string_val: "perfect"
        string_val: "gentleman"
        string_val: "which"
        string_val: "jacob"
        string_val: "wirth"
        string_val: "tell"
        string_val: "close"
        string_val: "by"
        string_val: "brown"
        string_val: "county"
        string_val: "state"
        string_val: "meal"
        string_val: "time"
        string_val: "malaysia"
        string_val: "zero"
        string_val: "rating"
        string_val: "deed"
        string_val: "paksenarrion"
        string_val: "beat"
        string_val: "devil"
        string_val: "mann"
        string_val: "theatres"
        string_val: "novel"
        string_val: "see"
        string_val: "schedule"
        string_val: "north"
        string_val: "american"
        string_val: "cinemas"
        string_val: "marta"
        string_val: "endorphin"
        string_val: "giving"
        string_val: "trailer"
        string_val: "real"
        string_val: "men"
        string_val: "cry"
        string_val: "called"
        string_val: "greatest"
        string_val: "year"
        string_val: "indietronic"
        string_val: "needs"
        string_val: "until"
        string_val: "end"
        string_val: "added"
        string_val: "clowns"
        string_val: "nearest"
        string_val: "cinema"
        string_val: "burger"
        string_val: "joint"
        string_val: "choate"
        string_val: "july"
        string_val: "16th"
        string_val: "2022"
        string_val: "steve"
        string_val: "albini"
        string_val: "psychedelic"
        string_val: "rock"
        string_val: "fifty"
        string_val: "years"
        string_val: "hunter"
        string_val: "trapper"
        string_val: "video"
        string_val: "tomb"
        string_val: "scott"
        string_val: "putesky"
        string_val: "concentraci\303\263n"
        string_val: "do"
        string_val: "build"
        string_val: "snowman"
        string_val: "hip"
        string_val: "hop"
        string_val: "2017"
        string_val: "new"
        string_val: "school"
        string_val: "pesterminator"
        string_val: "western"
        string_val: "exterminator"
        string_val: "maschi"
        string_val: "altri"
        string_val: "john"
        string_val: "williams"
        string_val: "listen"
        string_val: "dragon"
        string_val: "ball"
        string_val: "music"
        string_val: "collection"
        string_val: "kitchin"
        string_val: "13th"
        string_val: "2039"
        string_val: "photograph"
        string_val: "wish"
        string_val: "one"
        string_val: "judging"
        string_val: "house"
        string_val: "george"
        string_val: "washington"
        string_val: "slept"
        string_val: "here"
        string_val: "gave"
        string_val: "wondering"
        string_val: "peters"
        string_val: "baby"
        string_val: "monique"
        string_val: "stewart"
        string_val: "arlene"
        string_val: "jami"
        string_val: "would"
        string_val: "like"
        string_val: "mar"
        string_val: "2020"
        string_val: "that"
        string_val: "broadway"
        string_val: "lafayette"
        string_val: "st"
        string_val: "daughters"
        string_val: "late"
        string_val: "great"
        string_val: "townes"
        string_val: "van"
        string_val: "zandt"
        string_val: "another"
        string_val: "tune"
        string_val: "soft"
        string_val: "tv"
        string_val: "all"
        string_val: "neighbourhood"
        string_val: "play"
        string_val: "lineage"
        string_val: "grace"
        string_val: "executive"
        string_val: "power"
        string_val: "four"
        string_val: "best"
        string_val: "essay"
        string_val: "secret"
        string_val: "weapon"
        string_val: "nine"
        string_val: "pm"
        string_val: "ma"
        string_val: "name"
        string_val: "blues"
        string_val: "west"
        string_val: "rides"
        string_val: "again"
        string_val: "nathan"
        string_val: "wise"
        string_val: "david"
        string_val: "henry"
        string_val: "hwang"
        string_val: "nicky"
        string_val: "jam"
        string_val: "liberty"
        string_val: "forever"
        string_val: "road"
        string_val: "trip"
        string_val: "neighboring"
        string_val: "our"
        string_val: "apartment"
        string_val: "journal"
        string_val: "economics"
        string_val: "sociology"
        string_val: "place"
        string_val: "iran"
        string_val: "neva"
        string_val: "alice"
        string_val: "maggie"
        string_val: "parker"
        string_val: "jamaica"
        string_val: "say"
        string_val: "metal"
        string_val: "ulterior"
        string_val: "motive"
        string_val: "memorial"
        string_val: "anson"
        string_val: "hu"
        string_val: "conexiones"
        string_val: "rakim"
        string_val: "ken"
        string_val: "gold"
        string_val: "edition"
        string_val: "supposed"
        string_val: "sunny"
        string_val: "window"
        string_val: "display"
        string_val: "manager"
        string_val: "story"
        string_val: "wa"
        string_val: "totsuzen"
        string_val: "ni"
        string_val: "garrix"
        string_val: "freezing"
        string_val: "jun"
        string_val: "21st"
        string_val: "apshawa"
        string_val: "south"
        string_val: "africa"
        string_val: "something"
        string_val: "faultline"
        string_val: "jannie"
        string_val: "strength"
        string_val: "street"
        string_val: "knowledge"
        string_val: "chilly"
        string_val: "oregonia"
        string_val: "terrible"
        string_val: "ratings"
        string_val: "training"
        string_val: "thirteenth"
        string_val: "2026"
        string_val: "party"
        string_val: "laos"
        string_val: "theme"
        string_val: "has"
        string_val: "chicken"
        string_val: "fried"
        string_val: "bacon"
        string_val: "vermont"
        string_val: "amco"
        string_val: "entertainment"
        string_val: "minute"
        string_val: "painting"
        string_val: "thunder"
        string_val: "sky"
        string_val: "amc"
        string_val: "colder"
        string_val: "costa"
        string_val: "rica"
        string_val: "not"
        string_val: "culdesac"
        string_val: "matt"
        string_val: "bachand"
        string_val: "pure"
        string_val: "roll"
        string_val: "chillier"
        string_val: "la"
        string_val: "mesa"
        string_val: "type"
        string_val: "houston"
        string_val: "press"
        string_val: "walt"
        string_val: "man"
        string_val: "behind"
        string_val: "myth"
        string_val: "textbook"
        string_val: "lease"
        string_val: "death"
        string_val: "don"
        string_val: "moye"
        string_val: "pop"
        string_val: "verano"
        string_val: "tale"
        string_val: "mr"
        string_val: "jeremy"
        string_val: "fisher"
        string_val: "seat"
        string_val: "10"
        string_val: "ottumwa"
        string_val: "serves"
        string_val: "osteria"
        string_val: "ranch"
        string_val: "dressing"
        string_val: "china"
        string_val: "kokomo"
        string_val: "fall"
        string_val: "venezuela"
        string_val: "joe"
        string_val: "hickerson"
        string_val: "jazz"
        string_val: "classical"
        string_val: "crossings"
        string_val: "robot"
        string_val: "winger"
        string_val: "good"
        string_val: "evil"
        string_val: "loews"
        string_val: "cineplex"
        string_val: "hail"
        string_val: "hale"
        string_val: "center"
        string_val: "22"
        string_val: "2030"
        string_val: "up"
        string_val: "holy"
        string_val: "water"
        string_val: "dunbrody"
        string_val: "country"
        string_val: "hotel"
        string_val: "serbia"
        string_val: "pipe"
        string_val: "spring"
        string_val: "monument"
        string_val: "batman"
        string_val: "return"
        string_val: "bruce"
        string_val: "wayne"
        string_val: "special"
        string_val: "assignments"
        string_val: "spanish"
        string_val: "rice"
        string_val: "cafeteria"
        string_val: "ten"
        string_val: "today"
        string_val: "fog"
        string_val: "nebraska"
        string_val: "feed"
        string_val: "kitty"
        string_val: "girl"
        string_val: "general"
        string_val: "maldeamores"
        string_val: "saga"
        string_val: "wisconsin"
        string_val: "cameroon"
        string_val: "sirivantha"
        string_val: "lualualei"
        string_val: "tim"
        string_val: "wright"
        string_val: "onto"
        string_val: "queen"
        string_val: "popular"
        string_val: "tyrolean"
        string_val: "steakhouse"
        string_val: "madison"
        string_val: "hour"
        string_val: "minutes"
        string_val: "second"
        string_val: "soundtrack"
        string_val: "om"
        string_val: "napoleon"
        string_val: "xiv"
        string_val: "sharlene"
        string_val: "transatlantic"
        string_val: "lullaby"
        string_val: "port"
        string_val: "vue"
        string_val: "chas"
        string_val: "chandler"
        string_val: "aux"
        string_val: "cord"
        string_val: "privileges"
        string_val: "boyish"
        string_val: "storm"
        string_val: "sioux"
        string_val: "city"
        string_val: "al"
        string_val: "saviour"
        string_val: "irv"
        string_val: "gotti"
        string_val: "presents"
        string_val: "murderers"
        string_val: "seats"
        string_val: "ak"
        string_val: "hours"
        string_val: "malin"
        string_val: "ky"
        string_val: "wilma"
        string_val: "gay"
        string_val: "gowanus"
        string_val: "yacht"
        string_val: "club"
        string_val: "montenegro"
        string_val: "maine"
        string_val: "silver"
        string_val: "chalice"
        string_val: "we"
        string_val: "gaming"
        string_val: "feb"
        string_val: "sixth"
        string_val: "2024"
        string_val: "blanco"
        string_val: "humid"
        string_val: "kuwait"
        string_val: "go"
        string_val: "venetian"
        string_val: "gabon"
        string_val: "seven"
        string_val: "romance"
        string_val: "range"
        string_val: "yet"
        string_val: "memoir"
        string_val: "living"
        string_val: "almost"
        string_val: "dying"
        string_val: "was"
        string_val: "have"
        string_val: "southeastern"
        string_val: "brazilian"
        string_val: "dominica"
        string_val: "ups"
        string_val: "as"
        string_val: "tears"
        string_val: "next"
        string_val: "friday"
        string_val: "tn"
        string_val: "lets"
        string_val: "before"
        string_val: "pool"
        string_val: "brian"
        string_val: "may"
        string_val: "reggae"
        string_val: "infusions"
        string_val: "sombrero"
        string_val: "fallout"
        string_val: "japanese"
        string_val: "artist"
        string_val: "phunkadelic"
        string_val: "previous"
        string_val: "speakeasy"
        string_val: "fish"
        string_val: "express"
        string_val: "andrews"
        string_val: "university"
        string_val: "seminary"
        string_val: "studies"
        string_val: "framed"
        string_val: "ntc"
        string_val: "studio"
        string_val: "sounds"
        string_val: "carolina"
        string_val: "2037"
        string_val: "hicks"
        string_val: "hot"
        string_val: "saint"
        string_val: "jo"
        string_val: "alaska"
        string_val: "escapada"
        string_val: "royal"
        string_val: "astronomy"
        string_val: "manxman"
        string_val: "snowfall"
        string_val: "areas"
        string_val: "an"
        string_val: "week"
        string_val: "comes"
        string_val: "dukes"
        string_val: "district"
        string_val: "columbia"
        string_val: "fine"
        string_val: "meast"
        string_val: "tea"
        string_val: "21"
        string_val: "northern"
        string_val: "mariana"
        string_val: "boyce"
        string_val: "hart"
        string_val: "urban"
        string_val: "hits"
        string_val: "railway"
        string_val: "children"
        string_val: "within"
        string_val: "walking"
        string_val: "distance"
        string_val: "magic"
        string_val: "johnson"
        string_val: "plitt"
        string_val: "mckenna"
        string_val: "shakira"
        string_val: "stripes"
        string_val: "soulful"
        string_val: "disco"
        string_val: "codebreakers"
        string_val: "value"
        string_val: "moments"
        string_val: "eminence"
        string_val: "dolls"
        string_val: "three"
        string_val: "move"
        string_val: "selektor"
        string_val: "conditions"
        string_val: "camp"
        string_val: "bird"
        string_val: "deserves"
        string_val: "possible"
        string_val: "reserve"
        string_val: "andouillettes"
        string_val: "same"
        string_val: "marino"
        string_val: "cyprus"
        string_val: "lanta"
        string_val: "albania"
        string_val: "annette"
        string_val: "darlene"
        string_val: "barbara"
        string_val: "james"
        string_val: "honduras"
        string_val: "any"
        string_val: "outlaw"
        string_val: "gor"
        string_val: "atmospheric"
        string_val: "black"
        string_val: "caribbean"
        string_val: "warm"
        string_val: "eat"
        string_val: "escondida"
        string_val: "sister"
        string_val: "clafoutis"
        string_val: "location"
        string_val: "union"
        string_val: "auto"
        string_val: "company"
        string_val: "make"
        string_val: "sicilian"
        string_val: "only"
        string_val: "midnight"
        string_val: "rated"
        string_val: "brasserie"
        string_val: "pakistan"
        string_val: "alex"
        string_val: "gaudino"
        string_val: "waltz"
        string_val: "total"
        string_val: "dirt"
        string_val: "farmer"
        string_val: "colorado"
        string_val: "pitch"
        string_val: "brigade"
        string_val: "autumn"
        string_val: "azerbaijan"
        string_val: "how"
        string_val: "cold"
        string_val: "princeton"
        string_val: "junction"
        string_val: "casting"
        string_val: "crowns"
        string_val: "discography"
        string_val: "five"
        string_val: "access"
        string_val: "rising"
        string_val: "currently"
        string_val: "brotherly"
        string_val: "showtimes"
        string_val: "unleashed"
        string_val: "ii"
        string_val: "view"
        string_val: "workin"
        string_val: "miles"
        string_val: "davis"
        string_val: "quintet"
        string_val: "foundation"
        string_val: "overcast"
        string_val: "lunch"
        string_val: "vincent"
        string_val: "grenadines"
        string_val: "douglas"
        string_val: "help"
        string_val: "neuroscience"
        string_val: "research"
        string_val: "cleo"
        string_val: "laine"
        string_val: "high"
        string_val: "noon"
        string_val: "food"
        string_val: "plays"
        string_val: "cloudy"
        string_val: "if"
        string_val: "ll"
        string_val: "papua"
        string_val: "guinea"
        string_val: "larsen"
        string_val: "cardio"
        string_val: "arkansas"
        string_val: "morrison"
        string_val: "hohenfriedberger"
        string_val: "marsch"
        string_val: "novedades"
        string_val: "tsubasa"
        string_val: "imai"
        string_val: "glass"
        string_val: "sin"
        string_val: "ti"
        string_val: "bronco"
        string_val: "billy"
        string_val: "sligo"
        string_val: "named"
        string_val: "kirk"
        string_val: "hammett"
        string_val: "los"
        string_val: "40"
        string_val: "radio"
        string_val: "\303\251xitos"
        string_val: "suwannee"
        string_val: "fresh"
        string_val: "finds"
        string_val: "through"
        string_val: "distant"
        string_val: "worlds"
        string_val: "gears"
        string_val: "mortal"
        string_val: "hands"
        string_val: "expected"
        string_val: "beckley"
        string_val: "memories"
        string_val: "witness"
        string_val: "too"
        string_val: "young"
        string_val: "marry"
        string_val: "curacao"
        string_val: "lesotho"
        string_val: "starting"
        string_val: "treeful"
        string_val: "starling"
        string_val: "watauga"
        string_val: "aunt"
        string_val: "consolidated"
        string_val: "russia"
        string_val: "2036"
        string_val: "reason"
        string_val: "bachelor"
        string_val: "highly"
        string_val: "northeastern"
        string_val: "satanta"
        string_val: "latin"
        string_val: "rocketeer"
        string_val: "georgia"
        string_val: "nephew"
        string_val: "kids"
        string_val: "plylist"
        string_val: "mix"
        string_val: "guru"
        string_val: "november"
        string_val: "19"
        string_val: "position"
        string_val: "uncharted"
        string_val: "drake"
        string_val: "frl"
        string_val: "menke"
        string_val: "comedy"
        string_val: "cut"
        string_val: "rope"
        string_val: "ray"
        string_val: "noble"
        string_val: "chill"
        string_val: "vibes"
        string_val: "ny"
        string_val: "skillman"
        string_val: "francisco"
        string_val: "netherlands"
        string_val: "antilles"
        string_val: "eleven"
        string_val: "diner"
        string_val: "fort"
        string_val: "loudon"
        string_val: "guadeloupe"
        string_val: "oasis"
        string_val: "drive"
        string_val: "beach"
        string_val: "105th"
        string_val: "temperate"
        string_val: "dinner"
        string_val: "jamie"
        string_val: "hallie"
        string_val: "winter"
        string_val: "chemistry"
        string_val: "european"
        string_val: "botna"
        string_val: "blue"
        string_val: "ribbon"
        string_val: "barbecue"
        string_val: "plutonium"
        string_val: "files"
        string_val: "nicaragua"
        string_val: "spa"
        string_val: "metropolitan"
        string_val: "borough"
        string_val: "lambeth"
        string_val: "portrait"
        string_val: "countess"
        string_val: "karoly"
        string_val: "feel"
        string_val: "adventure"
        string_val: "yellow"
        string_val: "curl"
        string_val: "papers"
        string_val: "looking"
        string_val: "jack"
        string_val: "shadows"
        string_val: "waxhaw"
        string_val: "baotianman"
        string_val: "nature"
        string_val: "unite"
        string_val: "win"
        string_val: "night"
        string_val: "falkland"
        string_val: "kool"
        string_val: "keith"
        string_val: "pull"
        string_val: "channel"
        string_val: "news"
        string_val: "outer"
        string_val: "space"
        string_val: "megaplex"
        string_val: "truck"
        string_val: "tuscan"
        string_val: "adela"
        string_val: "hallam"
        string_val: "indiana"
        string_val: "dj"
        string_val: "kay"
        string_val: "slay"
        string_val: "2010"
        string_val: "decade"
        string_val: "first"
        string_val: "leche"
        string_val: "con"
        string_val: "chocolate"
        string_val: "svalbard"
        string_val: "jan"
        string_val: "mayen"
        string_val: "marshall"
        string_val: "every"
        string_val: "little"
        string_val: "crook"
        string_val: "nanny"
        string_val: "elderton"
        string_val: "global"
        string_val: "funk"
        string_val: "downtown"
        string_val: "luisa"
        string_val: "robyn"
        string_val: "martinez"
        string_val: "maude"
        string_val: "their"
        string_val: "pa"
        string_val: "old"
        string_val: "orchard"
        string_val: "open"
        string_val: "acoustic"
        string_val: "concentration"
        string_val: "entire"
        string_val: "pickled"
        string_val: "cucumber"
        string_val: "wild"
        string_val: "co"
        string_val: "operative"
        string_val: "block"
        string_val: "building"
        string_val: "nd"
        string_val: "wifi"
        string_val: "frybread"
        string_val: "cowboy"
        string_val: "troy"
        string_val: "piano"
        string_val: "background"
        string_val: "megon"
        string_val: "mcdonough"
        string_val: "slackers"
        string_val: "pizzeria"
        string_val: "hampshire"
        string_val: "parking"
        string_val: "souvlaki"
        string_val: "hadar"
        string_val: "mount"
        string_val: "victory"
        string_val: "delaware"
        string_val: "generation"
        string_val: "ce"
        string_val: "cher"
        string_val: "intrus"
        string_val: "imax"
        string_val: "corporation"
        string_val: "challenge"
        string_val: "boss"
        string_val: "glassy"
        string_val: "turkey"
        string_val: "metabolights"
        string_val: "castle"
        string_val: "daily"
        string_val: "lift"
        string_val: "point"
        string_val: "cooler"
        string_val: "climate"
        string_val: "starts"
        string_val: "purchase"
        string_val: "dancing"
        string_val: "dark"
        string_val: "ferret"
        string_val: "evening"
        string_val: "groove"
        string_val: "playcanvas"
        string_val: "shangri"
        string_val: "african"
        string_val: "heat"
        string_val: "clinton"
        string_val: "baking"
        string_val: "folly"
        string_val: "rex"
        string_val: "osierfield"
        string_val: "salami"
        string_val: "bastian"
        string_val: "buy"
        string_val: "teahouse"
        string_val: "fire"
        string_val: "canciones"
        string_val: "que"
        string_val: "lo"
        string_val: "petar"
        string_val: "family"
        string_val: "plot"
        string_val: "creature"
        string_val: "teacher"
        string_val: "ca"
        string_val: "monty"
        string_val: "secunderabad"
        string_val: "bhutan"
        string_val: "singing"
        string_val: "nun"
        string_val: "regal"
        string_val: "group"
        string_val: "reservations"
        string_val: "newtown"
        string_val: "hitchita"
        string_val: "or"
        string_val: "li"
        string_val: "yuchun"
        string_val: "kickass"
        string_val: "intersections"
        string_val: "so"
        string_val: "right"
        string_val: "lora"
        string_val: "80s"
        string_val: "classic"
        string_val: "call"
        string_val: "julian"
        string_val: "taylor"
        string_val: "dance"
        string_val: "civil"
        string_val: "army"
        string_val: "vs"
        string_val: "navy"
        string_val: "taste"
        string_val: "blackberries"
        string_val: "wrigley"
        string_val: "carlisle"
        string_val: "gardens"
        string_val: "born"
        string_val: "america"
        string_val: "mustoe"
        string_val: "iceland"
        string_val: "marva"
        string_val: "burundi"
        string_val: "bach"
        string_val: "te"
        string_val: "quiero"
        string_val: "unborn"
        string_val: "but"
        string_val: "forgotten"
        string_val: "pavarotti"
        string_val: "boon"
        string_val: "brick"
        string_val: "store"
        string_val: "information"
        string_val: "star"
        string_val: "fear"
        string_val: "loathing"
        string_val: "campaign"
        string_val: "trail"
        string_val: "72"
        string_val: "sherri"
        string_val: "meditate"
        string_val: "step"
        string_val: "adam"
        string_val: "clayton"
        string_val: "sxsw"
        string_val: "following"
        string_val: "zen"
        string_val: "focus"
        string_val: "hardest"
        string_val: "part"
        string_val: "bret"
        string_val: "mckenzie"
        string_val: "commute"
        string_val: "southern"
        string_val: "gothic"
        string_val: "glade"
        string_val: "twenty"
        string_val: "2033"
        string_val: "brad"
        string_val: "kane"
        string_val: "pumping"
        string_val: "iron"
        string_val: "woodport"
        string_val: "culture"
        string_val: "psychology"
        string_val: "birthday"
        string_val: "secrets"
        string_val: "alibi"
        string_val: "keep"
        string_val: "calm"
        string_val: "westernport"
        string_val: "smith"
        string_val: "il"
        string_val: "sturgis"
        string_val: "2006"
        string_val: "clock"
        string_val: "armistead"
        string_val: "burwell"
        string_val: "iv"
        string_val: "masters"
        string_val: "jeff"
        string_val: "burrows"
        string_val: "iene"
        string_val: "miene"
        string_val: "mutte"
        string_val: "women"
        string_val: "your"
        string_val: "heart"
        string_val: "stops"
        string_val: "beating"
        string_val: "tonight"
        string_val: "rajasthani"
        string_val: "bermuda"
        string_val: "lemonheads"
        string_val: "salsa"
        string_val: "classics"
        string_val: "colony"
        string_val: "dickinson"
        string_val: "month"
        string_val: "apple"
        string_val: "grove"
        string_val: "dc"
        string_val: "de"
        string_val: "camino"
        string_val: "beatmania"
        string_val: "iidx"
        string_val: "10th"
        string_val: "style"
        string_val: "somiedo"
        string_val: "natural"
        string_val: "office"
        string_val: "california"
        string_val: "glorious"
        string_val: "way"
        string_val: "die"
        string_val: "blood"
        string_val: "others"
        string_val: "borrowed"
        string_val: "prediction"
        string_val: "camdeboo"
        string_val: "nationalpark"
        string_val: "eleventh"
        string_val: "todo"
        string_val: "latino"
        string_val: "absolutely"
        string_val: "sweet"
        string_val: "marie"
        string_val: "harry"
        string_val: "connick"
        string_val: "jr"
        string_val: "brasileiro"
        string_val: "places"
        string_val: "stacy"
        string_val: "vanuatu"
        string_val: "lamentable"
        string_val: "journey"
        string_val: "omaha"
        string_val: "bigelow"
        string_val: "impenetrable"
        string_val: "loisaida"
        string_val: "jungle"
        string_val: "television"
        string_val: "chips"
        string_val: "italy"
        string_val: "awakened"
        string_val: "qatar"
        string_val: "boys"
        string_val: "band"
        string_val: "big"
        string_val: "question"
        string_val: "golden"
        string_val: "sandie"
        string_val: "shaw"
        string_val: "martinique"
        string_val: "york"
        string_val: "melody"
        string_val: "pesotum"
        string_val: "jennie"
        string_val: "pot"
        string_val: "doughnuts"
        string_val: "gd"
        string_val: "dishyum"
        string_val: "mama"
        string_val: "thornton"
        string_val: "trabajo"
        string_val: "relax"
        string_val: "moroccan"
        string_val: "east"
        string_val: "greenville"
        string_val: "nyoil"
        string_val: "prince"
        string_val: "nice"
        string_val: "operation"
        string_val: "oyster"
        string_val: "season"
        string_val: "fi"
        string_val: "william"
        string_val: "boone"
        string_val: "short"
        string_val: "fast"
        string_val: "maid"
        string_val: "amsterdam"
        string_val: "smash"
        string_val: "canal"
        string_val: "fulton"
        string_val: "ar"
        string_val: "indoor"
        string_val: "accommodate"
        string_val: "also"
        string_val: "cheat"
        string_val: "fair"
        string_val: "maxwell"
        string_val: "bistro"
        string_val: "pasta"
        string_val: "salad"
        string_val: "brazil"
        string_val: "earth"
        string_val: "intruders"
        string_val: "whisperer"
        string_val: "curse"
        string_val: "guest"
        string_val: "engadget"
        string_val: "no"
        string_val: "floor"
        string_val: "snow"
        string_val: "adventures"
        string_val: "lolo"
        string_val: "dovre"
        string_val: "going"
        string_val: "belarus"
        string_val: "future"
        string_val: "sugar"
        string_val: "bush"
        string_val: "edge"
        string_val: "soul"
        string_val: "venedig"
        string_val: "im"
        string_val: "regen"
        string_val: "juan"
        string_val: "capistrano"
        string_val: "wahhabi"
        string_val: "islam"
        string_val: "revival"
        string_val: "reform"
        string_val: "jihad"
        string_val: "outlaws"
        string_val: "sherwood"
        string_val: "marcus"
        string_val: "shame"
        string_val: "boyertown"
        string_val: "zealand"
        string_val: "eighteen"
        string_val: "showings"
        string_val: "vigus"
        string_val: "might"
        string_val: "well"
        string_val: "crate"
        string_val: "diggers"
        string_val: "anonymous"
        string_val: "madman"
        string_val: "trap"
        string_val: "land"
        string_val: "april"
        string_val: "2nd"
        string_val: "coney"
        string_val: "island"
        string_val: "nv"
        string_val: "unbeatable"
        string_val: "harold"
        string_val: "century"
        string_val: "scheduled"
        string_val: "bondage"
        string_val: "freedom"
        string_val: "upon"
        string_val: "some"
        string_val: "midnights"
        string_val: "clear"
        string_val: "chronicle"
        string_val: "performance"
        string_val: "horse"
        string_val: "weekly"
        string_val: "xyy"
        string_val: "beautiful"
        string_val: "ironing"
        string_val: "booking"
        string_val: "indian"
        string_val: "climax"
        string_val: "springs"
        string_val: "mexico"
        string_val: "flash"
        string_val: "stop"
        string_val: "motion"
        string_val: "sri"
        string_val: "lanka"
        string_val: "who"
        string_val: "seconds"
        string_val: "dakota"
        string_val: "migration"
        string_val: "person"
        string_val: "jansen"
        string_val: "english"
        string_val: "wauregan"
        string_val: "michael"
        string_val: "hayvoronsky"
        string_val: "suena"
        string_val: "angeles"
        string_val: "gets"
        string_val: "laundry"
        string_val: "diary"
        string_val: "anne"
        string_val: "frank"
        string_val: "mystery"
        string_val: "essentials"
        string_val: "broken"
        string_val: "sahara"
        string_val: "13"
        string_val: "symphony"
        string_val: "solo"
        string_val: "cummings"
        string_val: "mississippi"
        string_val: "pet"
        string_val: "cairo"
        string_val: "zoo"
        string_val: "reno"
        string_val: "indiespain"
        string_val: "locate"
        string_val: "master"
        string_val: "ballantrae"
        string_val: "volume"
        string_val: "naomi"
        string_val: "schemer"
        string_val: "hanging"
        string_val: "relaxing"
        string_val: "tenth"
        string_val: "nosh"
        string_val: "bakery"
        string_val: "magnifico"
        string_val: "michele"
        string_val: "88"
        string_val: "keys"
        string_val: "invisible"
        string_val: "kipp"
        string_val: "rhode"
        string_val: "chart"
        string_val: "throb"
        string_val: "peter"
        string_val: "iwers"
        string_val: "gym"
        string_val: "strong"
        string_val: "faith"
        string_val: "chaos"
        string_val: "snowy"
        string_val: "pillow"
        string_val: "original"
        string_val: "pies"
        string_val: "plandome"
        string_val: "manor"
        string_val: "award"
        string_val: "tables"
        string_val: "hear"
        string_val: "sit"
        string_val: "down"
        string_val: "talk"
        string_val: "oman"
        string_val: "medical"
        string_val: "dead"
        string_val: "dallas"
        string_val: "manual"
        string_val: "taverna"
        string_val: "cousin"
        string_val: "check"
        string_val: "being"
        string_val: "aired"
        string_val: "halls"
        string_val: "avalon"
        string_val: "ariston"
        string_val: "cafe"
        string_val: "resurrection"
        string_val: "scorpion"
        string_val: "cuts"
        string_val: "both"
        string_val: "ways"
        string_val: "green"
        string_val: "mellowed"
        string_val: "belle"
        string_val: "yukon"
        string_val: "gregory"
        string_val: "douglass"
        string_val: "whm"
        string_val: "naked"
        string_val: "lisa"
        string_val: "dalbello"
        string_val: "2015"
        string_val: "cma"
        string_val: "awards"
        string_val: "nominees"
        string_val: "niece"
        string_val: "somewhere"
        string_val: "hopatcong"
        string_val: "lonely"
        string_val: "hearts"
        string_val: "dipson"
        string_val: "chinese"
        string_val: "wikipedia"
        string_val: "long"
        string_val: "lake"
        string_val: "wildlife"
        string_val: "refuge"
        string_val: "harkins"
        string_val: "sudan"
        string_val: "cuban"
        string_val: "horatio"
        string_val: "touch"
        string_val: "eva"
        string_val: "doctor"
        string_val: "theater"
        string_val: "near"
        string_val: "crossroad"
        string_val: "maliau"
        string_val: "basin"
        string_val: "conservation"
        string_val: "compiled"
        string_val: "fragments"
        string_val: "1997"
        string_val: "2003"
        string_val: "icewind"
        string_val: "dale"
        string_val: "does"
        string_val: "mexican"
        string_val: "werewolf"
        string_val: "start"
        string_val: "schooltool"
        string_val: "seduction"
        string_val: "playlists"
        string_val: "court"
        string_val: "craig"
        string_val: "mountain"
        string_val: "management"
        string_val: "muppet"
        string_val: "christmas"
        string_val: "carol"
        string_val: "cotton"
        string_val: "mission"
        string_val: "bay"
        string_val: "cars"
        string_val: "sensations"
        string_val: "1945"
        string_val: "marci"
        string_val: "marylou"
        string_val: "amelia"
        string_val: "korea"
        string_val: "halloween"
        string_val: "livonia"
        string_val: "av"
        string_val: "republican"
        string_val: "brain"
        string_val: "jasmund"
        string_val: "mediterranean"
        string_val: "klute"
        string_val: "winifred"
        string_val: "clase"
        string_val: "bedroom"
        string_val: "jams"
        string_val: "11"
        string_val: "36"
        string_val: "48"
        string_val: "tal"
        string_val: "chhapar"
        string_val: "sanctuary"
        string_val: "amusements"
        string_val: "arclight"
        string_val: "hollywood"
        string_val: "orthodox"
        string_val: "ad"
        string_val: "mailroom"
        string_val: "history"
        string_val: "bottom"
        string_val: "stracciatella"
        string_val: "oakdale"
        string_val: "ok"
        string_val: "gn"
        string_val: "activists"
        string_val: "wars"
        string_val: "dream"
        string_val: "sunrise"
        string_val: "pizzette"
        string_val: "duxbury"
        string_val: "kaltag"
        string_val: "ila"
        string_val: "mi"
        string_val: "manera"
        string_val: "recopilatorio"
        string_val: "stood"
        string_val: "still"
        string_val: "candlelight"
        string_val: "afterwork"
        string_val: "glory"
        string_val: "contact"
        string_val: "nu"
        string_val: "16"
        string_val: "jordan"
        string_val: "beardyman"
        string_val: "memoirs"
        string_val: "issue"
        string_val: "haunted"
        string_val: "spooks"
        string_val: "jeanne"
        string_val: "collins"
        string_val: "amy"
        string_val: "balkan"
        string_val: "rhapsodies"
        string_val: "78"
        string_val: "measures"
        string_val: "malco"
        string_val: "datil"
        string_val: "todd"
        string_val: "snider"
        string_val: "electro"
        string_val: "diamond"
        string_val: "chariot"
        string_val: "flower"
        string_val: "eighth"
        string_val: "day"
        string_val: "holiday"
        string_val: "nations"
        string_val: "hipster"
        string_val: "advocate"
        string_val: "origins"
        string_val: "jenifer"
        string_val: "2000"
        string_val: "lower"
        string_val: "sep"
        string_val: "2038"
        string_val: "whole"
        string_val: "richard"
        string_val: "carvel"
        string_val: "jones"
        string_val: "blind"
        string_val: "cope"
        string_val: "woman"
        string_val: "crying"
        string_val: "birds"
        string_val: "stroll"
        string_val: "pork"
        string_val: "kes"
        string_val: "dinnertime"
        string_val: "acoustics"
        string_val: "summer"
        string_val: "nation"
        string_val: "bones"
        string_val: "read"
        string_val: "bombay"
        string_val: "society"
        string_val: "playist"
        string_val: "gear"
        string_val: "sonja"
        string_val: "otsego"
        string_val: "r\303\251union"
        string_val: "morganville"
        string_val: "vampires"
        string_val: "selinsgrove"
        string_val: "shirley"
        string_val: "aviatrice"
        string_val: "chile"
        string_val: "ho"
        string_val: "arcola"
        string_val: "yury"
        string_val: "chernavsky"
        string_val: "alternative"
        string_val: "route"
        string_val: "javanese"
        string_val: "entfesselt"
        string_val: "try"
        string_val: "vermicelli"
        string_val: "free"
        string_val: "universe"
        string_val: "musgrave"
        string_val: "barnard"
        string_val: "ora"
        string_val: "workout"
        string_val: "ambient"
        string_val: "edesville"
        string_val: "mn"
        string_val: "25"
        string_val: "ridge"
        string_val: "farm"
        string_val: "hardinsburg"
        string_val: "20"
        string_val: "wannabe"
        string_val: "spice"
        string_val: "girls"
        string_val: "reinvented"
        string_val: "fame"
        string_val: "kd"
        string_val: "lang"
        string_val: "deep"
        string_val: "noreen"
        string_val: "strings"
        string_val: "israel"
        string_val: "undressed"
        string_val: "icon"
        string_val: "smoking"
        string_val: "room"
        string_val: "hell"
        string_val: "cuisine"
        string_val: "germany"
        string_val: "chieko"
        string_val: "ochi"
        string_val: "drum"
        string_val: "breaks"
        string_val: "temperature"
        string_val: "after"
        string_val: "attic"
        string_val: "delicatessen"
        string_val: "prosser"
        string_val: "18th"
        string_val: "grandfather"
        string_val: "booker"
        string_val: "shahrum"
        string_val: "kashani"
        string_val: "salt"
        string_val: "50"
        string_val: "words"
        string_val: "harrison"
        string_val: "crawford"
        string_val: "forest"
        string_val: "hitman"
        string_val: "rat"
        string_val: "owen"
        string_val: "biddle"
        string_val: "tooth"
        string_val: "contemporary"
        string_val: "religious"
        string_val: "satanism"
        string_val: "allenwood"
        string_val: "favorite"
        string_val: "slaughterhouse"
        string_val: "racing"
        string_val: "rain"
        string_val: "kebab"
        string_val: "connection"
        string_val: "kaakai"
        string_val: "newspaper"
        string_val: "ghost"
        string_val: "town"
        string_val: "prophecy"
        string_val: "adaptive"
        string_val: "coloration"
        string_val: "animals"
        string_val: "oak"
        string_val: "heavy"
        string_val: "gamer"
        string_val: "irish"
        string_val: "az"
        string_val: "chain"
        string_val: "events"
        string_val: "stormy"
        string_val: "afternoon"
        string_val: "maryland"
        string_val: "thai"
        string_val: "paraguay"
        string_val: "saturday"
        string_val: "ashes"
        string_val: "buddy"
        string_val: "tate"
        string_val: "just"
        string_val: "aftercluv"
        string_val: "wandering"
        string_val: "detective"
        string_val: "wind"
        string_val: "harbor"
        string_val: "cinemark"
        string_val: "ringside"
        string_val: "hurricane"
        string_val: "jersey"
        string_val: "cloud"
        string_val: "175"
        string_val: "golconda"
        string_val: "vt"
        string_val: "tajikistan"
        string_val: "dec"
        string_val: "twentieth"
        string_val: "sea"
        string_val: "cabinet"
        string_val: "angola"
        string_val: "keke"
        string_val: "wyatt"
        string_val: "uetoaya"
        string_val: "nov"
        string_val: "fifteenth"
        string_val: "purcell"
        string_val: "odeon"
        string_val: "charming"
        string_val: "worldly"
        string_val: "goods"
        string_val: "chirping"
        string_val: "crickets"
        string_val: "father"
        string_val: "law"
        string_val: "gratin"
        string_val: "roadrunner"
        string_val: "rec"
        string_val: "releases"
        string_val: "jade"
        string_val: "faced"
        string_val: "assassin"
        string_val: "carry"
        string_val: "dreams"
        string_val: "croissant"
        string_val: "barbary"
        string_val: "coast"
        string_val: "pierre"
        string_val: "miquelon"
        string_val: "loves"
        string_val: "she"
        string_val: "danny"
        string_val: "carey"
        string_val: "argentina"
        string_val: "joseph"
        string_val: "meyer"
        string_val: "mad"
        string_val: "cool"
        string_val: "festival"
        string_val: "jessie"
        string_val: "lupe"
        string_val: "2040"
        string_val: "9am"
        string_val: "smart"
        string_val: "spenard"
        string_val: "gu"
        string_val: "8th"
        string_val: "nj"
        string_val: "british"
        string_val: "edda"
        string_val: "concert"
        string_val: "1981"
        string_val: "without"
        string_val: "condition"
        string_val: "indonesian"
        string_val: "ia"
        string_val: "greenland"
        string_val: "scarlet"
        string_val: "portugal"
        string_val: "grandes"
        string_val: "unplugged"
        string_val: "potato"
        string_val: "alabama"
        string_val: "fourth"
        string_val: "virgin"
        string_val: "pocket"
        string_val: "full"
        string_val: "kryptonite"
        string_val: "wee"
        string_val: "pamela"
        string_val: "stress"
        string_val: "relief"
        string_val: "beaver"
        string_val: "towers"
        string_val: "15"
        string_val: "guernsey"
        string_val: "literary"
        string_val: "peel"
        string_val: "pie"
        string_val: "brokeback"
        string_val: "post"
        string_val: "inferno"
        string_val: "whats"
        string_val: "palmview"
        string_val: "canaich"
        string_val: "bad"
        string_val: "branch"
        string_val: "falls"
        string_val: "preserve"
        string_val: "14"
        string_val: "tennessee"
        string_val: "baker"
        string_val: "keyboard"
        string_val: "lounge"
        string_val: "crucible"
        string_val: "wicked"
        string_val: "endless"
        string_val: "horizons"
        string_val: "06"
        string_val: "made"
        string_val: "edit"
        string_val: "adding"
        string_val: "smokefree"
        string_val: "rockquest"
        string_val: "2005"
        string_val: "facility"
        string_val: "triumph"
        string_val: "could"
        string_val: "warmer"
        string_val: "lothian"
        string_val: "smoke"
        string_val: "universum"
        string_val: "september"
        string_val: "17"
        string_val: "situation"
        string_val: "december"
        string_val: "worms"
        string_val: "clan"
        string_val: "wheeler"
        string_val: "4th"
        string_val: "2019"
        string_val: "duett"
        string_val: "grandson"
        string_val: "tabloid"
        string_val: "andrew"
        string_val: "hurley"
        string_val: "workweek"
        string_val: "spain"
        string_val: "2023"
        string_val: "mashable"
        string_val: "crisis"
        string_val: "final"
        string_val: "fantasy"
        string_val: "vii"
        string_val: "sashimi"
        string_val: "80"
        string_val: "bill"
        string_val: "frisell"
        string_val: "sofia"
        string_val: "phillips"
        string_val: "walker"
        string_val: "dine"
        string_val: "mughlai"
        string_val: "1st"
        string_val: "practice"
        string_val: "deceive"
        string_val: "silly"
        string_val: "windows"
        string_val: "barbados"
        string_val: "creole"
        string_val: "deception"
        string_val: "outpost"
        string_val: "firewall"
        string_val: "pro"
        string_val: "intensity"
        string_val: "sundown"
        string_val: "vampire"
        string_val: "retreat"
        string_val: "alberton"
        string_val: "mother"
        string_val: "austria"
        string_val: "maker"
        string_val: "trips"
        string_val: "destination"
        string_val: "prague"
        string_val: "vi"
        string_val: "keytesville"
        string_val: "shambaugh"
        string_val: "md"
        string_val: "dr"
        string_val: "honigberger"
        string_val: "coxs"
        string_val: "mills"
        string_val: "vatican"
        string_val: "melva"
        string_val: "heidi"
        string_val: "mondamin"
        string_val: "2021"
        string_val: "polish"
        string_val: "assault"
        string_val: "indiespensables"
        string_val: "indonesia"
        string_val: "august"
        string_val: "nineteenth"
        string_val: "sanilac"
        string_val: "petroglyphs"
        string_val: "historic"
        string_val: "tiny"
        string_val: "dancer"
        string_val: "miss"
        string_val: "sloane"
        string_val: "decoding"
        string_val: "reality"
        string_val: "saurials"
        string_val: "ideas"
        string_val: "instrumental"
        string_val: "directions"
        string_val: "girlfriend"
        string_val: "experience"
        string_val: "famous"
        string_val: "thursday"
        string_val: "image"
        string_val: "harveysburg"
        string_val: "vickie"
        string_val: "february"
        string_val: "2018"
        string_val: "creola"
        string_val: "throwback"
        string_val: "count"
        string_val: "predicted"
        string_val: "travel"
        string_val: "crimson"
        string_val: "provincial"
        string_val: "myanmar"
        string_val: "arthur"
        string_val: "rhames"
        string_val: "poet"
        string_val: "foot"
        string_val: "drink"
        string_val: "passage"
        string_val: "goshenville"
        string_val: "pr"
        string_val: "stretch"
        string_val: "axelrod"
        string_val: "futuros"
        string_val: "andy"
        string_val: "sings"
        string_val: "allen"
        string_val: "nurse"
        string_val: "last"
        string_val: "stories"
        string_val: "scottish"
        string_val: "ballads"
        string_val: "eleele"
        string_val: "ebony"
        string_val: "yolanda"
        string_val: "god"
        string_val: "must"
        string_val: "spent"
        string_val: "more"
        string_val: "ruskin"
        string_val: "cobb"
        string_val: "07"
        string_val: "08"
        string_val: "00"
        string_val: "review"
        string_val: "sterling"
        string_val: "run"
        string_val: "geminism"
        string_val: "his"
        string_val: "wife"
        string_val: "take"
        string_val: "croatia"
        string_val: "jul"
        string_val: "25th"
        string_val: "nightmare"
        string_val: "leasburg"
        string_val: "algeria"
        string_val: "maksim"
        string_val: "trad"
        string_val: "folk"
        string_val: "krypto"
        string_val: "superdog"
        string_val: "uncle"
        string_val: "malta"
        string_val: "missouri"
        string_val: "20th"
        string_val: "korean"
        string_val: "osts"
        string_val: "kentuckians"
        string_val: "estelle"
        string_val: "shoot"
        string_val: "elephant"
        string_val: "over"
        string_val: "geraldine"
        string_val: "powerhouses"
        string_val: "siesta"
        string_val: "nothing"
        string_val: "fancy"
        string_val: "sunday"
        string_val: "morning"
        string_val: "played"
        string_val: "mckinley"
        string_val: "body"
        string_val: "above"
        string_val: "chasing"
        string_val: "feeling"
        string_val: "blobby"
        string_val: "moore"
        string_val: "fat"
        string_val: "stupid"
        string_val: "white"
        string_val: "blini"
        string_val: "loving"
        string_val: "spirit"
        string_val: "wimpy"
        string_val: "kid"
        string_val: "creek"
        string_val: "pursuit"
        string_val: "radical"
        string_val: "rhapsody"
        string_val: "pacific"
        string_val: "camille"
        string_val: "wilderness"
        string_val: "furious"
        string_val: "grand"
        string_val: "traverse"
        string_val: "bottomland"
        string_val: "doi"
        string_val: "inthanon"
        string_val: "mark"
        string_val: "shoots"
        string_val: "00s"
        string_val: "wilson"
        string_val: "childs"
        string_val: "restaurants"
        string_val: "brunei"
        string_val: "lovers"
        string_val: "bump"
        string_val: "off"
        string_val: "lover"
        string_val: "tranquility"
        string_val: "pugu"
        string_val: "hills"
        string_val: "308"
        string_val: "fm"
        string_val: "servec"
        string_val: "quiche"
        string_val: "monika"
        string_val: "jets"
        string_val: "gonna"
        string_val: "serenada"
        string_val: "jigs"
        string_val: "reels"
        string_val: "atomic"
        string_val: "edith"
        string_val: "coventry"
        string_val: "schuyler"
        string_val: "geschwisterliebe"
        string_val: "string"
        string_val: "theory"
        string_val: "about"
        string_val: "coaldale"
        string_val: "muncie"
        string_val: "science"
        string_val: "fiction"
        string_val: "mutation"
        string_val: "duetos"
        string_val: "heroes"
        string_val: "waubay"
        string_val: "back"
        string_val: "tallgrass"
        string_val: "prairie"
        string_val: "recordings"
        string_val: "desire"
        string_val: "pimp"
        string_val: "remix"
        string_val: "score"
        string_val: "allenton"
        string_val: "zapata"
        string_val: "needing"
        string_val: "ilo"
        string_val: "elise"
        string_val: "alma"
        string_val: "ravensdale"
        string_val: "mh"
        string_val: "marine"
        string_val: "gate"
        string_val: "bloodstained"
        string_val: "mirrors"
        string_val: "feelin"
        string_val: "zone"
        string_val: "opa"
        string_val: "beauty"
        string_val: "sebastien"
        string_val: "grainger"
        string_val: "mountains"
        string_val: "atlas"
        string_val: "towel"
        string_val: "pat"
        string_val: "alger"
        string_val: "placed"
        string_val: "spotlight"
        string_val: "2016"
        string_val: "depression"
        string_val: "cyber"
        string_val: "monday"
        string_val: "uncommon"
        string_val: "grounds"
        string_val: "coffeehouse"
        string_val: "small"
        string_val: "lee"
        string_val: "seventh"
        string_val: "salinas"
        string_val: "premiere"
        string_val: "loyalhanna"
        string_val: "nour"
        string_val: "mhanna"
        string_val: "workday"
        string_val: "voice"
        string_val: "satanas"
        string_val: "legions"
        string_val: "rates"
        string_val: "hesston"
        string_val: "nc"
        string_val: "found"
        string_val: "them"
        string_val: "portales"
        string_val: "gambia"
        string_val: "humidity"
        string_val: "index"
        string_val: "elizabethville"
        string_val: "333"
        string_val: "caplinger"
        string_val: "florida"
        string_val: "cocktail"
        string_val: "kings"
        string_val: "australian"
        string_val: "ugliness"
        string_val: "basic"
        string_val: "battle"
        string_val: "skills"
        string_val: "georgetown"
        string_val: "mater"
        string_val: "seamus"
        string_val: "heaney"
        string_val: "collected"
        string_val: "poems"
        string_val: "among"
        string_val: "walter"
        string_val: "savoy"
        string_val: "grill"
        string_val: "midday"
        string_val: "grainola"
        string_val: "viernes"
        string_val: "sudam\303\251rica"
        string_val: "xplorer"
        string_val: "lexington"
        string_val: "fayette"
        string_val: "coronado"
        string_val: "lords"
        string_val: "rim"
        string_val: "much"
        string_val: "namibia"
        string_val: "welcome"
        string_val: "cruel"
        string_val: "selections"
        string_val: "belgium"
        string_val: "bow"
        string_val: "tie"
        string_val: "rise"
        string_val: "infidels"
        string_val: "90s"
        string_val: "french"
        string_val: "polynesia"
        string_val: "goof"
        string_val: "pershing"
        string_val: "square"
        string_val: "manhattan"
        string_val: "third"
        string_val: "eye"
        string_val: "rebirth"
        string_val: "franklin"
        string_val: "fiesta"
        string_val: "knocked"
        string_val: "loaded"
        string_val: "mjr"
        string_val: "panama"
        string_val: "custar"
        string_val: "kentucky"
        string_val: "cardinal"
        string_val: "treasures"
        string_val: "complete"
        string_val: "singles"
        string_val: "electronics"
        string_val: "cooper"
        string_val: "saison"
        string_val: "met"
        string_val: "temps"
        string_val: "redby"
        string_val: "wather"
        string_val: "philippines"
        string_val: "monsters"
        string_val: "bother"
        string_val: "swamp"
        string_val: "prentice"
        string_val: "armenia"
        string_val: "dummy"
        string_val: "ice"
        string_val: "cream"
        string_val: "trilogie"
        string_val: "sundanese"
        string_val: "bonaire"
        string_val: "sun"
        string_val: "lacassine"
        string_val: "brave"
        string_val: "true"
        string_val: "eyes"
        string_val: "beginning"
        string_val: "shirts"
        string_val: "mapa"
        string_val: "m\303\241s"
        string_val: "amigos"
        string_val: "holly"
        string_val: "bandas"
        string_val: "sonoras"
        string_val: "sonning"
        string_val: "gun"
        string_val: "hill"
        string_val: "rd"
        string_val: "metalblood"
        string_val: "gastropub"
        string_val: "bonnie"
        string_val: "mirror"
        string_val: "tartinery"
        string_val: "home"
        string_val: "elk"
        string_val: "rapids"
        string_val: "digster"
        string_val: "pigs"
        string_val: "pray"
        string_val: "seafood"
        string_val: "le"
        string_val: "roy"
        string_val: "tameka"
        string_val: "90"
        string_val: "mirrored"
        string_val: "heavens"
        string_val: "possiable"
        string_val: "wreck"
        string_val: "gravy"
        string_val: "train"
        string_val: "wave"
        string_val: "push"
        string_val: "button"
        string_val: "hamilton"
        string_val: "shell"
        string_val: "breakfast"
        string_val: "certification"
        string_val: "28"
        string_val: "copy"
        string_val: "bury"
        string_val: "january"
        string_val: "2028"
        string_val: "sing"
        string_val: "re"
        string_val: "winning"
        string_val: "church"
        string_val: "savage"
        string_val: "showcase"
        string_val: "thirteen"
        string_val: "boggs"
        string_val: "demonstration"
        string_val: "orange"
        string_val: "michel"
        string_val: "strogoff"
        string_val: "hand"
        string_val: "foggy"
        string_val: "songimvelo"
        string_val: "earls"
        string_val: "lucille"
        string_val: "marina"
        string_val: "ava"
        string_val: "leigh"
        string_val: "grime"
        string_val: "puglia"
        string_val: "very"
        string_val: "gyrls"
        string_val: "holla"
        string_val: "duson"
        string_val: "mohammad"
        string_val: "reza"
        string_val: "shadjarian"
        string_val: "chillin"
        string_val: "falling"
        string_val: "upstairs"
        string_val: "liberalism"
        string_val: "limits"
        string_val: "justice"
        string_val: "tiffany"
        string_val: "sondra"
        string_val: "ms"
        string_val: "udupi"
        string_val: "noah"
        string_val: "wuv"
        string_val: "bernardo"
        string_val: "humor"
        string_val: "scaramouche"
        string_val: "eifel"
        string_val: "tropical"
        string_val: "velvet"
        string_val: "apr"
        string_val: "manack"
        string_val: "montana"
        string_val: "shack"
        string_val: "101"
        string_val: "waiting"
        string_val: "mahatma"
        string_val: "kylie"
        string_val: "minogue"
        string_val: "jaula"
        string_val: "oro"
        string_val: "hit"
        string_val: "las"
        string_val: "aventuras"
        string_val: "zachary"
        string_val: "choclair"
        string_val: "mejor"
        string_val: "m\303\272sica"
        string_val: "bso"
        string_val: "cholame"
        string_val: "guys"
        string_val: "chalkyitsik"
        string_val: "palestine"
        string_val: "whitehouse"
        string_val: "beloved"
        string_val: "kingsley"
        string_val: "common"
        string_val: "atticus"
        string_val: "ross"
        string_val: "electrosafari"
        string_val: "doris"
        string_val: "tulsa"
        string_val: "rough"
        string_val: "guide"
        string_val: "eastern"
        string_val: "europe"
        string_val: "philip"
        string_val: "rolls"
        string_val: "18"
        string_val: "hopeful"
        string_val: "enrique"
        string_val: "iglesias"
        string_val: "kind"
        string_val: "goiano"
        string_val: "bitten"
        string_val: "twice"
        string_val: "pulse"
        string_val: "americana"
        string_val: "47"
        string_val: "52"
        string_val: "mahwah"
        string_val: "2025"
        string_val: "knife"
        string_val: "killed"
        string_val: "ecola"
        string_val: "lebanese"
        string_val: "arizona"
        string_val: "exit"
        string_val: "brooklyn"
        string_val: "sting"
        string_val: "pearblossom"
        string_val: "wanna"
        string_val: "sex"
        string_val: "nike"
        string_val: "running"
        string_val: "tempo"
        string_val: "chapter"
        string_val: "bosnia"
        string_val: "herzegovina"
        string_val: "patti"
        string_val: "hester"
        string_val: "richardson"
        string_val: "trauma"
        string_val: "monkeys"
        string_val: "stripped"
        string_val: "kill"
        string_val: "hi"
        string_val: "brixton"
        string_val: "academy"
        string_val: "kb"
        string_val: "thieving"
        string_val: "magpie"
        string_val: "angela"
        string_val: "au"
        string_val: "radar"
        string_val: "timings"
        string_val: "cracked"
        string_val: "nuts"
        string_val: "caledonian"
        string_val: "record"
        string_val: "then"
        string_val: "came"
        string_val: "abbott"
        string_val: "costello"
        string_val: "meet"
        string_val: "keystone"
        string_val: "kops"
        string_val: "04"
        string_val: "monterey"
        string_val: "mouth"
        string_val: "escape"
        string_val: "godlike"
        string_val: "genius"
        string_val: "fairy"
        string_val: "tales"
        string_val: "curious"
        string_val: "lost"
        string_val: "why"
        string_val: "sons"
        string_val: "turn"
        string_val: "violent"
        string_val: "save"
        string_val: "reverie"
        string_val: "craving"
        string_val: "mac"
        string_val: "cheese"
        string_val: "portland"
        string_val: "lomas"
        string_val: "maalaea"
        string_val: "beyond"
        string_val: "worthy"
        string_val: "izuna"
        string_val: "unemployed"
        string_val: "ninja"
        string_val: "returns"
        string_val: "rage"
        string_val: "ford"
        string_val: "administration"
        string_val: "feather"
        string_val: "noise"
        string_val: "friesland"
        string_val: "ghana"
        string_val: "spooning"
        string_val: "sreekumar"
        string_val: "laidback"
        string_val: "getaway"
        string_val: "tree"
        string_val: "tremont"
        string_val: "nadine"
        string_val: "sherrie"
        string_val: "fl"
        string_val: "lochearn"
        string_val: "son"
        string_val: "apocalisse"
        string_val: "against"
        string_val: "leviathan"
        string_val: "carmella"
        string_val: "illness"
        string_val: "metaphor"
        string_val: "essential"
        string_val: "jacksons"
        string_val: "swine"
        string_val: "alien"
        string_val: "breed"
        string_val: "horror"
        string_val: "continues"
        string_val: "thy"
        string_val: "stethoscope"
        string_val: "walk"
        string_val: "bradner"
        string_val: "other"
        string_val: "least"
        string_val: "scale"
        string_val: "wizardry"
        string_val: "touches"
        string_val: "ground"
        string_val: "cityzen"
        string_val: "arista"
        string_val: "reaching"
        string_val: "als"
        string_val: "het"
        string_val: "liefde"
        string_val: "gaat"
        string_val: "handel"
        string_val: "trey"
        string_val: "gunn"
        string_val: "sacred"
        string_val: "deeth"
        string_val: "growth"
        string_val: "fetish"
        string_val: "giants"
        string_val: "frost"
        string_val: "penermon"
        string_val: "title"
        string_val: "champagne"
        string_val: "showers"
        string_val: "brilliant"
        string_val: "tragic"
        string_val: "echo"
        string_val: "talbot"
        string_val: "mundy"
        string_val: "messenger"
        string_val: "destiny"
        string_val: "stuffed"
        string_val: "peppers"
        string_val: "woodsfield"
        string_val: "lilly"
        string_val: "witch"
        string_val: "257"
        string_val: "cannon"
        string_val: "equatorial"
        string_val: "rillettes"
        string_val: "box"
        string_val: "moon"
        string_val: "light"
        string_val: "kernersville"
        string_val: "greece"
        string_val: "mai"
        string_val: "selim"
        string_val: "us"
        string_val: "suffer"
        string_val: "cross"
        string_val: "uzbekistan"
        string_val: "side"
        string_val: "balko"
        string_val: "fox"
        string_val: "modern"
        string_val: "age"
        string_val: "electric"
        string_val: "boogaloo"
        string_val: "random"
        string_val: "twisted"
        string_val: "searves"
        string_val: "kouglof"
        string_val: "organ"
        string_val: "cactus"
        string_val: "lonergan"
        string_val: "bean"
        string_val: "courts"
        string_val: "natalie"
        string_val: "macmaster"
        string_val: "viajes"
        string_val: "nijinsky"
        string_val: "churrascaria"
        string_val: "talking"
        string_val: "heaven"
        string_val: "doors"
        string_val: "perception"
        string_val: "games"
        string_val: "balinese"
        string_val: "comunas"
        string_val: "ripper"
        string_val: "lifelong"
        string_val: "ambitions"
        string_val: "wi"
        string_val: "centenary"
        string_val: "rugrats"
        string_val: "tmpgenc"
        string_val: "hurts"
        string_val: "pruntytown"
        string_val: "grandparents"
        string_val: "helens"
        string_val: "softly"
        string_val: "kerasotes"
        string_val: "adams"
        string_val: "laurie"
        string_val: "listas"
        string_val: "meredith"
        string_val: "betty"
        string_val: "erika"
        string_val: "fran"
        string_val: "saudi"
        string_val: "arabia"
        string_val: "brunswick"
        string_val: "botanical"
        string_val: "garden"
        string_val: "gie"
        string_val: "tequesta"
        string_val: "print"
        string_val: "legend"
        string_val: "willow"
        string_val: "nona"
        string_val: "gray"
        string_val: "myrtle"
        string_val: "alison"
        string_val: "ouzeri"
        string_val: "fro"
        string_val: "chamberlain"
        string_val: "waits"
        string_val: "picnic"
        string_val: "meze"
        string_val: "roseville"
        string_val: "louisa"
        string_val: "corrine"
        string_val: "selected"
        string_val: "letters"
        string_val: "lovecraft"
        string_val: "sushi"
        string_val: "brucetown"
        string_val: "whistler"
        string_val: "03"
        string_val: "01"
        string_val: "reproductions"
        string_val: "child"
        string_val: "floors"
        string_val: "mighty"
        string_val: "moss"
        string_val: "bobcat"
        string_val: "bite"
        string_val: "isle"
        string_val: "harding"
        string_val: "41"
        string_val: "51"
        string_val: "sixteen"
        string_val: "mill"
        string_val: "bluff"
        string_val: "smit"
        string_val: "radnor"
        string_val: "township"
        string_val: "wv"
        string_val: "ponsonby"
        string_val: "programming"
        string_val: "average"
        string_val: "beer"
        string_val: "lynn"
        string_val: "shore"
        string_val: "randy"
        string_val: "travis"
        string_val: "grass"
        string_val: "farian"
        string_val: "lydia"
        string_val: "mixtape"
        string_val: "1967"
        string_val: "1975"
        string_val: "terrors"
        string_val: "nh"
        string_val: "hat"
        string_val: "ga"
        string_val: "faces"
        string_val: "lao"
        string_val: "united"
        string_val: "paramount"
        string_val: "bank"
        string_val: "forecase"
        string_val: "inverness"
        string_val: "5th"
        string_val: "2031"
        string_val: "tartine"
        string_val: "tunnel"
        string_val: "rats"
        string_val: "rhythm"
        string_val: "reserved"
        string_val: "prefect"
        string_val: "having"
        string_val: "seeley"
        string_val: "fourteenth"
        string_val: "mariah"
        string_val: "elusive"
        string_val: "chanteuse"
        string_val: "oct"
        string_val: "cuyabeno"
        string_val: "experienced"
        string_val: "embrace"
        string_val: "tour"
        string_val: "2013"
        string_val: "budokan"
        string_val: "70s"
        string_val: "preaching"
        string_val: "perverted"
        string_val: "wynonna"
        string_val: "bridge"
        string_val: "starcross"
        string_val: "teenager"
        string_val: "college"
        string_val: "wonderful"
        string_val: "eylem"
        string_val: "yameen"
        string_val: "showstopper"
        string_val: "mary"
        string_val: "jane"
        string_val: "plague"
        string_val: "deepwater"
        string_val: "glue"
        string_val: "lewis"
        string_val: "clark"
        string_val: "russian"
        string_val: "shari"
        string_val: "urbanette"
        string_val: "rabbit"
        string_val: "via"
        string_val: "dolorosa"
        string_val: "redemption"
        string_val: "samurai"
        string_val: "ninth"
        string_val: "oh"
        string_val: "leonville"
        string_val: "sugarville"
        string_val: "janeane"
        string_val: "des"
        string_val: "moines"
        string_val: "bernie"
        string_val: "id"
        string_val: "ironbound"
        string_val: "looney"
        string_val: "tunes"
        string_val: "platinum"
        string_val: "strongest"
        string_val: "instinct"
        string_val: "tera"
        string_val: "exiled"
        string_val: "realm"
        string_val: "arborea"
        string_val: "kitlope"
        string_val: "heritage"
        string_val: "conservancy"
        string_val: "harlem"
        string_val: "hadon"
        string_val: "opar"
        string_val: "sailor"
        string_val: "supers"
        string_val: "died"
        string_val: "paedophilia"
        string_val: "case"
        string_val: "timor"
        string_val: "narodowy"
        string_val: "kushiro"
        string_val: "shitsugen"
        string_val: "haystack"
        string_val: "knight"
        string_val: "newts"
        string_val: "horrible"
        string_val: "bahamas"
        string_val: "swain"
        string_val: "kavanaughs"
        string_val: "gilgamesh"
        string_val: "king"
        string_val: "deli"
        string_val: "steak"
        string_val: "riverfront"
        string_val: "na\303\247\303\243o"
        string_val: "jefferson"
        string_val: "expansion"
        string_val: "belinda"
        string_val: "dena"
        string_val: "syria"
        string_val: "unpleasantness"
        string_val: "bellona"
        string_val: "totally"
        string_val: "paul"
        string_val: "whiteman"
        string_val: "chillout"
        string_val: "diamondville"
        string_val: "most"
        string_val: "necessary"
        string_val: "noveskey"
        string_val: "shot"
        string_val: "understanding"
        string_val: "physics"
        string_val: "bulgaria"
        string_val: "numbers"
        string_val: "saxophone"
        string_val: "supremacy"
        string_val: "ofelia"
        string_val: "think"
        string_val: "freak"
        string_val: "melcher"
        string_val: "madwoman"
        string_val: "enemy"
        string_val: "screened"
        string_val: "fourteen"
        string_val: "robbie"
        string_val: "hostel"
        string_val: "chandra"
        string_val: "noelle"
        string_val: "underneath"
        string_val: "engine"
        string_val: "hog"
        string_val: "fry"
        string_val: "interview"
        string_val: "documentary"
        string_val: "conspiracy"
        string_val: "louisiana"
        string_val: "300"
        string_val: "march"
        string_val: "cluster"
        string_val: "computing"
        string_val: "fallen"
        string_val: "milagros"
        string_val: "pocono"
        string_val: "dean"
        string_val: "tailor"
        string_val: "london"
        string_val: "amor"
        string_val: "wheatley"
        string_val: "bang"
        string_val: "lot"
        string_val: "pediatric"
        string_val: "oncology"
        string_val: "nursing"
        string_val: "croix"
        string_val: "horses"
        string_val: "dubstep"
        string_val: "dangles"
        string_val: "dirty"
        string_val: "rainy"
        string_val: "wren"
        string_val: "riddim"
        string_val: "driven"
        string_val: "54"
        string_val: "humanity"
        string_val: "letha"
        string_val: "things"
        string_val: "farmingdale"
        string_val: "entitled"
        string_val: "period"
        string_val: "cyborg"
        string_val: "teide"
        string_val: "viroqua"
        string_val: "fernwood"
        string_val: "mt"
        string_val: "geese"
        string_val: "sensation"
        string_val: "morgan"
        string_val: "primitive"
        string_val: "santikos"
        string_val: "jungo"
        string_val: "toxic"
        string_val: "avenger"
        string_val: "comfort"
        string_val: "friends"
        string_val: "players"
        string_val: "pilgrims"
        string_val: "rayne"
        string_val: "taiwan"
        string_val: "rainfall"
        string_val: "willimantic"
        string_val: "kurious"
        string_val: "jorge"
        string_val: "synth"
        string_val: "illinois"
        string_val: "lakes"
        string_val: "turkmenistan"
        string_val: "bon"
        string_val: "grunge"
        string_val: "\303\245land"
        string_val: "dock"
        string_val: "norman"
        string_val: "conway"
        string_val: "twitty"
        string_val: "tchaikovsky"
        string_val: "occasional"
        string_val: "bpm"
        string_val: "cat"
        string_val: "walks"
        string_val: "walls"
        string_val: "stumble"
        string_val: "repeat"
        string_val: "burnout"
        string_val: "ultimate"
        string_val: "drag"
        string_val: "race"
        string_val: "alamo"
        string_val: "drafthouse"
        string_val: "cassie"
        string_val: "eyota"
        string_val: "hawaii"
        string_val: "desert"
        string_val: "column"
        string_val: "42"
        string_val: "oregon"
        string_val: "rosana"
        string_val: "canteen"
        string_val: "alley"
        string_val: "samoa"
        string_val: "montserrat"
        string_val: "79"
        string_val: "policemen"
        string_val: "sanibel"
        string_val: "manadonese"
        string_val: "brunch"
        string_val: "alejandro"
        string_val: "fern\303\241ndez"
        string_val: "chamber"
        string_val: "lest"
        string_val: "forget"
        string_val: "guitar"
        string_val: "cajah"
        string_val: "coffee"
        string_val: "sleeps"
        string_val: "sonya"
        string_val: "rebekah"
        string_val: "taneyamagahara"
        string_val: "sword"
        string_val: "lictor"
        string_val: "diann"
        string_val: "smile"
        string_val: "suitcase"
        string_val: "roses"
        string_val: "agua"
        string_val: "sal"
        string_val: "uproar"
        string_val: "milas"
        string_val: "poli"
        string_val: "bluegrass"
        string_val: "masala"
        string_val: "2034"
        string_val: "casey"
        string_val: "chavez"
        string_val: "lucinda"
        string_val: "karina"
        string_val: "7th"
        string_val: "burst"
        string_val: "outside"
        string_val: "syndicate"
        string_val: "millicent"
        string_val: "electronic"
        string_val: "economic"
        string_val: "association"
        string_val: "deeds"
        string_val: "finn"
        string_val: "maccool"
        string_val: "robin"
        string_val: "trower"
        string_val: "feminist"
        string_val: "wyoming"
        string_val: "presskopf"
        string_val: "nattbuss"
        string_val: "807"
        string_val: "el"
        string_val: "en"
        string_val: "emo"
        string_val: "sugarfoot"
        string_val: "epleys"
        string_val: "sandwich"
        string_val: "dared"
        string_val: "flag"
        string_val: "brass"
        string_val: "bound"
        string_val: "trunk"
        string_val: "experiment"
        string_val: "decaturville"
        string_val: "castolon"
        string_val: "territories"
        string_val: "melba"
        string_val: "anderson"
        string_val: "haugan"
        string_val: "justified"
        string_val: "astonishing"
        string_val: "octavian"
        string_val: "traitor"
        string_val: "kingdom"
        string_val: "waves"
        string_val: "afdlin"
        string_val: "shauki"
        string_val: "timerider"
        string_val: "lyle"
        string_val: "swann"
        string_val: "kan"
        string_val: "mikami"
        string_val: "pre"
        string_val: "junkies"
        string_val: "suu"
        string_val: "complex"
        string_val: "between"
        string_val: "forecasted"
        string_val: "epiphany"
        string_val: "pizza"
        string_val: "astor"
        string_val: "massachusetts"
        string_val: "molly"
        string_val: "mcguire"
        string_val: "talks"
        string_val: "kreator"
        string_val: "enemies"
        string_val: "frontier"
        string_val: "marshal"
        string_val: "souls"
        string_val: "temperance"
        string_val: "tortured"
        string_val: "berville"
        string_val: "political"
        string_val: "pw"
        string_val: "gill"
        string_val: "deacon"
        string_val: "chichi"
        string_val: "mysterious"
        string_val: "carpathians"
        string_val: "bride"
        string_val: "elida"
        string_val: "vega"
        string_val: "alta"
        string_val: "smear"
        string_val: "montverde"
        string_val: "trop\303\251zienne"
        string_val: "shopping"
        string_val: "spree"
        string_val: "prejudice"
        string_val: "bearmouth"
        string_val: "hellboy"
        string_val: "troll"
        string_val: "mcmurray"
        string_val: "seventeenth"
        string_val: "marjorie"
        string_val: "vasquez"
        string_val: "martina"
        string_val: "ludden"
        string_val: "apothecary"
        string_val: "rx"
        string_val: "pagosa"
        string_val: "romanian"
        string_val: "stle"
        string_val: "cusine"
        string_val: "trussville"
        string_val: "scholarmate"
        string_val: "immortals"
        string_val: "bullets"
        string_val: "assign"
        string_val: "yale"
        string_val: "ramble"
        string_val: "teens"
        string_val: "23"
        string_val: "fimd"
        string_val: "bhoot"
        string_val: "eric"
        string_val: "refugee"
        string_val: "sleeping"
        string_val: "sc"
        string_val: "chrome"
        string_val: "alloway"
        string_val: "opening"
        string_val: "bible"
        string_val: "niger"
        string_val: "surf"
        string_val: "taco"
        string_val: "uniontown"
        string_val: "beast"
        string_val: "shouted"
        string_val: "signals"
        string_val: "belief"
        string_val: "england"
        string_val: "wallington"
        string_val: "swaziland"
        string_val: "polymer"
        string_val: "jain"
        string_val: "goodbye"
        string_val: "tetsuya"
        string_val: "komuro"
        string_val: "hide"
        string_val: "benin"
        string_val: "upbuilding"
        string_val: "discourses"
        string_val: "1844"
        string_val: "supper"
        string_val: "ours"
        string_val: "phinally"
        string_val: "phamous"
        string_val: "gamblers"
        string_val: "plaid"
        string_val: "retina"
        string_val: "castles"
        string_val: "clay"
        string_val: "remains"
        string_val: "favorites"
        string_val: "willie"
        string_val: "nelson"
        string_val: "spinnin"
        string_val: "records"
        string_val: "taking"
        string_val: "flight"
        string_val: "847"
        string_val: "uli"
        string_val: "derickson"
        string_val: "thornville"
        string_val: "link"
        string_val: "tempunauts"
        string_val: "microsoft"
        string_val: "safety"
        string_val: "scanner"
        string_val: "poplar"
        string_val: "unholy"
        string_val: "coverage"
        string_val: "minami"
        string_val: "alps"
        string_val: "koma"
        string_val: "prefectural"
        string_val: "lock"
        string_val: "inniswold"
        string_val: "blackbox"
        string_val: "paper"
        string_val: "doll"
        string_val: "historical"
        string_val: "aransas"
        string_val: "pass"
        string_val: "seventeen"
        string_val: "international"
        string_val: "bilingualism"
        string_val: "online"
        string_val: "drowning"
        string_val: "anjo"
        string_val: "hollidaysburg"
        string_val: "twinkie"
        string_val: "squad"
        string_val: "budayeen"
        string_val: "nights"
        string_val: "parents"
        string_val: "thousand"
        string_val: "lies"
        string_val: "keyes"
        string_val: "summit"
        string_val: "rustic"
        string_val: "inn"
        string_val: "members"
        string_val: "nappanee"
        string_val: "zambia"
        string_val: "emanuel"
        string_val: "kiriakou"
        string_val: "llegando"
        string_val: "casa"
        string_val: "rileys"
        string_val: "crabfish"
        string_val: "sleep"
        string_val: "machine"
        string_val: "rainforest"
        string_val: "mickey"
        string_val: "birth"
        string_val: "emre"
        string_val: "aydin"
        string_val: "happy"
        string_val: "lunacy"
        string_val: "latest"
        string_val: "episode"
        string_val: "chu"
        string_val: "philly"
        string_val: "clam"
        string_val: "cake"
        string_val: "ginestrata"
        string_val: "shenandoah"
        string_val: "heights"
        string_val: "cookie"
        string_val: "selena"
        string_val: "atop"
        string_val: "underwood"
        string_val: "writings"
        string_val: "mercedes"
        string_val: "cimarron"
        string_val: "lpaying"
        string_val: "bryan"
        string_val: "emily"
        string_val: "soulblighter"
        string_val: "partners"
        string_val: "action"
        string_val: "connie"
        string_val: "madeline"
        string_val: "shadow"
        string_val: "shake"
        string_val: "beef"
        string_val: "indestructible"
        string_val: "nozomi"
        string_val: "tsuji"
        string_val: "ritchie"
        string_val: "valens"
        string_val: "virales"
        string_val: "siempre"
        string_val: "polite"
        string_val: "scrapple"
        string_val: "harriett"
        string_val: "deanne"
        string_val: "14th"
        string_val: "hridaynath"
        string_val: "mangeshkar"
        string_val: "stone"
        string_val: "cierra"
        string_val: "puerta"
        string_val: "claudine"
        string_val: "longet"
        string_val: "palylist"
        string_val: "isn"
        string_val: "engadine"
        string_val: "joy"
        string_val: "division"
        string_val: "bbc"
        string_val: "mclaurin"
        string_val: "key"
        string_val: "word"
        string_val: "mysteries"
        string_val: "nightbirds"
        string_val: "nantucket"
        string_val: "crocus"
        string_val: "ian"
        string_val: "mandaean"
        string_val: "sudden"
        string_val: "rainstorm"
        string_val: "merry"
        string_val: "sisters"
        string_val: "fate"
        string_val: "wand"
        string_val: "wagner"
        string_val: "todays"
        string_val: "flic"
        string_val: "beverly"
        string_val: "kurt"
        string_val: "aguila"
        string_val: "patetown"
        string_val: "economy"
        string_val: "silence"
        string_val: "lambs"
        string_val: "playmaker"
        string_val: "football"
        string_val: "acquacotta"
        string_val: "central"
        string_val: "republic"
        string_val: "baraga"
        string_val: "bright"
        string_val: "elvis"
        string_val: "lemonade"
        string_val: "poetry"
        string_val: "own"
        string_val: "voices"
        string_val: "landmark"
        string_val: "were"
        string_val: "tear"
        string_val: "apart"
        string_val: "deborah"
        string_val: "bertha"
        string_val: "screamplay"
        string_val: "manning"
        string_val: "ukraine"
        string_val: "egypt"
        string_val: "treasury"
        string_val: "2027"
        string_val: "iowa"
        string_val: "applied"
        string_val: "linguistics"
        string_val: "picks"
        string_val: "bowling"
        string_val: "dana"
        string_val: "caddo"
        string_val: "bock"
        string_val: "unicorn"
        string_val: "ncaa"
        string_val: "2k3"
        string_val: "breath"
        string_val: "outdoor"
        string_val: "papeton"
        string_val: "cenizo"
        string_val: "captain"
        string_val: "kronos"
        string_val: "air"
        string_val: "cuan"
        string_val: "dubh"
        string_val: "drilseach"
        string_val: "emma"
        string_val: "wood"
        string_val: "friona"
        string_val: "brewing"
        string_val: "puerto"
        string_val: "rico"
        string_val: "zez\303\251"
        string_val: "di"
        string_val: "camargo"
        string_val: "luciano"
        string_val: "valley"
        string_val: "covenant"
        string_val: "fusion"
        string_val: "fest"
        string_val: "overton"
        string_val: "palisades"
        string_val: "testing"
        string_val: "anywhere"
        string_val: "decades"
        string_val: "imposter"
        string_val: "russell"
        string_val: "econfina"
        string_val: "ri"
        string_val: "innocence"
        string_val: "2008"
        string_val: "louis"
        string_val: "wolfe"
        string_val: "gilbert"
        string_val: "cleaning"
        string_val: "loveday"
        string_val: "trials"
        string_val: "trying"
        string_val: "solution"
        string_val: "business"
        string_val: "ethics"
        string_val: "kosovo"
        string_val: "mon"
        string_val: "monster"
        string_val: "mash"
        string_val: "than"
        string_val: "counting"
        string_val: "rosaries"
        string_val: "flies"
        string_val: "1994"
        string_val: "2009"
        string_val: "jazzy"
        string_val: "president"
        string_val: "empanada"
        string_val: "jemez"
        string_val: "rila"
        string_val: "elinor"
        string_val: "crystal"
        string_val: "turner"
        string_val: "nita"
        string_val: "german"
        string_val: "torrey"
        string_val: "pines"
        string_val: "sixteenth"
        string_val: "pillar"
        string_val: "education"
        string_val: "chemical"
        string_val: "engineers"
        string_val: "del"
        string_val: "espa\303\261a"
        string_val: "known"
        string_val: "better"
        string_val: "bb"
        string_val: "bunce"
        string_val: "lafe"
        string_val: "wing"
        string_val: "cappella"
        string_val: "angry"
        string_val: "bulat"
        string_val: "schalwowitsch"
        string_val: "okudschawa"
        string_val: "retro"
        string_val: "quebeck"
        string_val: "removers"
        string_val: "tesh"
        string_val: "friendesemana"
        string_val: "32"
        string_val: "fenton"
        string_val: "change"
        string_val: "lapponia"
        string_val: "flamenco"
        string_val: "madagascar"
        string_val: "scouse"
        string_val: "git"
        string_val: "speed"
        string_val: "thrills"
        string_val: "mojave"
        string_val: "phone"
        string_val: "booth"
        string_val: "rattus"
        string_val: "roundhouse"
        string_val: "t\303\251"
        string_val: "para"
        string_val: "tres"
        string_val: "crazy"
        string_val: "hostile"
        string_val: "waters"
        string_val: "harper"
        string_val: "order"
        string_val: "wings"
        string_val: "zena"
        string_val: "passover"
        string_val: "hurry"
        string_val: "garrison"
        string_val: "emoji"
        string_val: "retrovisor"
        string_val: "188"
        string_val: "zimbabwe"
        string_val: "wallis"
        string_val: "futuna"
        string_val: "inwood"
        string_val: "207th"
        string_val: "gisela"
        string_val: "watcher"
        string_val: "rivers"
        string_val: "religion"
        string_val: "sexy"
        string_val: "d\303\255as"
        string_val: "felices"
        string_val: "reggaeton"
        string_val: "lambertville"
        string_val: "india"
        string_val: "mason"
        string_val: "dixon"
        string_val: "tsidii"
        string_val: "loka"
        string_val: "drumline"
        string_val: "texas"
        string_val: "receipt"
        string_val: "ep"
        string_val: "aubrey"
        string_val: "did"
        string_val: "highs"
        string_val: "mid"
        string_val: "sixties"
        string_val: "bigger"
        string_val: "endangered"
        string_val: "species"
        string_val: "reverse"
        string_val: "medal"
        string_val: "tokelau"
        string_val: "valarie"
        string_val: "caroline"
        string_val: "56"
        string_val: "soldier"
        string_val: "pond"
        string_val: "stunt"
        string_val: "santa"
        string_val: "monica"
        string_val: "hannah"
        string_val: "miley"
        string_val: "cyrus"
        string_val: "twitches"
        string_val: "simon"
        string_val: "schuster"
        string_val: "encyclopedia"
        string_val: "dinosaurs"
        string_val: "prehistoric"
        string_val: "creatures"
        string_val: "nick"
        string_val: "sylvia"
        string_val: "plath"
        string_val: "steps"
        string_val: "independent"
        string_val: "clue"
        string_val: "super"
        string_val: "dave"
        string_val: "bickler"
        string_val: "warren"
        string_val: "freund"
        string_val: "luis"
        string_val: "fonsi"
        string_val: "lamy"
        string_val: "fe"
        string_val: "hero"
        string_val: "halifax"
        string_val: "disaster"
        string_val: "mummy"
        string_val: "cortelyou"
        string_val: "barberville"
        string_val: "99"
        string_val: "mongolia"
        string_val: "archivist"
        string_val: "logic"
        string_val: "sense"
        string_val: "crew"
        string_val: "piqua"
        string_val: "pearl"
        string_val: "remembrance"
        string_val: "rio"
        string_val: "idaho"
        string_val: "dekalb"
        string_val: "indifferent"
        string_val: "aria"
        string_val: "mascotte"
        string_val: "prospect"
        string_val: "whitby"
        string_val: "blaine"
        string_val: "bugs"
        string_val: "bunny"
        string_val: "nips"
        string_val: "nigeria"
        string_val: "seed"
        string_val: "chucky"
        string_val: "josefina"
        string_val: "pla"
        string_val: "isabelle"
        string_val: "gamesradar"
        string_val: "nevada"
        string_val: "hahnville"
        string_val: "tuvalu"
        string_val: "woodchuck"
        string_val: "chuck"
        string_val: "matters"
        string_val: "comer"
        string_val: "many"
        string_val: "germania"
        string_val: "movietimes"
        string_val: "ochopee"
        string_val: "pelican"
        string_val: "blandings"
        string_val: "inlet"
        string_val: "lebanon"
        string_val: "2035"
        string_val: "seeing"
        string_val: "shown"
        string_val: "yauch"
        string_val: "biggest"
        string_val: "loser"
        string_val: "granbury"
        string_val: "chronicles"
        string_val: "druss"
        string_val: "roman"
        string_val: "tkk"
        string_val: "betances"
        string_val: "tamagotchi"
        string_val: "64"
        string_val: "minna"
        string_val: "those"
        string_val: "gods"
        string_val: "virginia"
        string_val: "technicolor"
        string_val: "czech"
        string_val: "everytime"
        string_val: "doolittle"
        string_val: "whispers"
        string_val: "graveyard"
        string_val: "visual"
        string_val: "audio"
        string_val: "sensory"
        string_val: "sherlock"
        string_val: "holmes"
        string_val: "wayside"
        string_val: "targeted"
        string_val: "clapton"
        string_val: "round"
        string_val: "gena"
        string_val: "woodcliff"
        string_val: "murray"
        string_val: "hut"
        string_val: "mirrorshades"
        string_val: "pot\303\251e"
        string_val: "solitude"
        string_val: "hello"
        string_val: "cats"
        string_val: "luck"
        string_val: "expressive"
        string_val: "processing"
        string_val: "mis"
        string_val: "ni\303\261os"
        string_val: "30"
        string_val: "iii"
        string_val: "carnik"
        string_val: "boreas"
        string_val: "mayotte"
        string_val: "tembe"
        string_val: "jacinto"
        string_val: "scheudle"
        string_val: "palacio"
        string_val: "grisly"
        string_val: "flesh"
        string_val: "bone"
        string_val: "underground"
        string_val: "attell"
        string_val: "nuclear"
        string_val: "blast"
        string_val: "novelties"
        string_val: "slimm"
        string_val: "cutta"
        string_val: "calhoun"
        string_val: "heroquest"
        string_val: "legacy"
        string_val: "sorasil"
        string_val: "tanintharyi"
        string_val: "deus"
        string_val: "deceptor"
        string_val: "resource"
        string_val: "harris"
        string_val: "uruguay"
        string_val: "213"
        string_val: "scratchy"
        string_val: "porch"
        string_val: "cohocton"
        string_val: "wy"
        string_val: "sunil"
        string_val: "santha"
        string_val: "grant"
        string_val: "osmanthus"
        string_val: "rejoicing"
        string_val: "tonopah"
        string_val: "hillary"
        string_val: "banks"
        string_val: "spears"
        string_val: "butterfly"
        string_val: "fabes"
        string_val: "vl"
        string_val: "mike"
        string_val: "dcode2016"
        string_val: "marcie"
        string_val: "clink"
        string_val: "senegal"
        string_val: "juliff"
        string_val: "bucatini"
        string_val: "tomohisa"
        string_val: "yamashita"
        string_val: "village"
        string_val: "japan"
        string_val: "rimsky"
        string_val: "korsakoffee"
        string_val: "aug"
        string_val: "3rd"
        string_val: "guts"
        string_val: "chopin"
        string_val: "niceville"
        string_val: "francisville"
        string_val: "italian"
        string_val: "hutchings"
        string_val: "single"
        string_val: "branton"
        string_val: "mellow"
        string_val: "fly"
        string_val: "roadhouse"
        string_val: "antarctica"
        string_val: "calakmul"
        string_val: "biosphere"
        string_val: "angel"
        string_val: "sweeney"
        string_val: "goethe"
        string_val: "culver"
        string_val: "thyme"
        string_val: "brothers"
        string_val: "karamazov"
        string_val: "hoping"
        string_val: "2029"
        string_val: "feature"
        string_val: "aflame"
        string_val: "crowd"
        string_val: "study"
        string_val: "mind"
        string_val: "tenor"
        string_val: "wore"
        string_val: "tapshoes"
        string_val: "halley"
        string_val: "mrs"
        string_val: "ry\305\215"
        string_val: "yamazaki"
        string_val: "clem"
        string_val: "burke"
        string_val: "macedonia"
        string_val: "cape"
        string_val: "unit"
        string_val: "burrito"
        string_val: "chad"
        string_val: "landing"
        string_val: "proof"
        string_val: "nam"
        string_val: "kading"
        string_val: "protected"
        string_val: "minestrone"
        string_val: "griffin"
        string_val: "ne"
        string_val: "according"
        string_val: "paris"
        string_val: "robinson"
        string_val: "02"
        string_val: "39"
        string_val: "jarbidge"
        string_val: "tx"
        string_val: "cashel"
        string_val: "palace"
        string_val: "funtime"
        string_val: "activity"
        string_val: "odessa"
        string_val: "05"
        string_val: "shelter"
        string_val: "glimpses"
        string_val: "elisabeth"
        string_val: "gainesville"
        string_val: "register"
        string_val: "claudia"
        string_val: "imelda"
        string_val: "rainelle"
        string_val: "druid"
        string_val: "regional"
        string_val: "thing"
        string_val: "smelt"
        string_val: "solomon"
        string_val: "embers"
        string_val: "darkest"
        string_val: "jennifer"
        string_val: "lopez"
        string_val: "lilacs"
        string_val: "worth"
        string_val: "inheritors"
        string_val: "niue"
        string_val: "balloon"
        string_val: "sencha"
        string_val: "soupe"
        string_val: "variation"
        string_val: "plants"
        string_val: "domestication"
        string_val: "polygon"
        string_val: "shores"
        string_val: "together"
        string_val: "deadly"
        string_val: "skies"
        string_val: "drift"
        string_val: "unmooring"
        string_val: "military"
        string_val: "limit"
        string_val: "umizaru"
        string_val: "princess"
        string_val: "biology"
        string_val: "issues"
        string_val: "approach"
        string_val: "fertile"
        string_val: "sure"
        string_val: "thirayum"
        string_val: "theeravum"
        string_val: "nathaniel"
        string_val: "fludd"
        string_val: "beastologist"
        string_val: "monks"
        string_val: "thelema"
        string_val: "charles"
        string_val: "trifecta"
        string_val: "scandinavian"
        string_val: "grenada"
        string_val: "lidell"
        string_val: "townsell"
        string_val: "esenciales"
        string_val: "set"
        string_val: "thames"
        string_val: "coleslaw"
        string_val: "44"
        string_val: "58"
        string_val: "pirates"
        string_val: "vengeance"
        string_val: "chowchilla"
        string_val: "bullet"
        string_val: "target"
        string_val: "kin"
        string_val: "splendido"
        string_val: "occoquan"
        string_val: "sign"
        string_val: "saturn"
        string_val: "highlands"
        string_val: "paisley"
        string_val: "yemen"
        string_val: "antisleep"
        string_val: "persian"
        string_val: "ex"
        string_val: "husband"
        string_val: "projections"
        string_val: "allardt"
        string_val: "canada"
        string_val: "meets"
        string_val: "movement"
        string_val: "jolley"
        string_val: "macclenny"
        string_val: "lavender"
        string_val: "lace"
        string_val: "entre"
        string_val: "um"
        string_val: "coco"
        string_val: "adeus"
        string_val: "kenneth"
        string_val: "jethro"
        string_val: "burns"
        string_val: "soundscapes"
        string_val: "pimpernel"
        string_val: "rosemary"
        string_val: "schultz"
        string_val: "maldives"
        string_val: "sichuan"
        string_val: "avant"
        string_val: "sessions"
        string_val: "wine"
        string_val: "fernley"
        string_val: "princesas"
        string_val: "cienega"
        string_val: "section"
        string_val: "blag"
        string_val: "dahlia"
        string_val: "pura"
        string_val: "vida"
        string_val: "strayhorn"
        string_val: "riley"
        string_val: "anston"
        string_val: "shine"
        string_val: "gillan"
        string_val: "creeper"
        string_val: "colic"
        string_val: "jim"
        string_val: "peace"
        string_val: "thirty"
        string_val: "moores"
        string_val: "robinette"
        string_val: "crime"
        string_val: "punishment"
        string_val: "suburbia"
        string_val: "beijing"
        string_val: "huanying"
        string_val: "moment"
        string_val: "lousy"
        string_val: "slice"
        string_val: "choclo"
        string_val: "awful"
        string_val: "afghanistan"
        string_val: "kiss"
        string_val: "hironobu"
        string_val: "kageyama"
        string_val: "baila"
        string_val: "westfield"
        string_val: "moron"
        string_val: "ace"
        string_val: "spades"
        string_val: "beatmaster"
        string_val: "given"
        string_val: "unbelievable"
        string_val: "botswana"
        string_val: "troubles"
        string_val: "catch"
        string_val: "em"
        string_val: "doctors"
        string_val: "cia"
        string_val: "factbook"
        string_val: "persecution"
        string_val: "jews"
        string_val: "1933"
        string_val: "45"
        string_val: "tokyo"
        string_val: "detroit"
        string_val: "peaceful"
        string_val: "geographic"
        string_val: "howling"
        string_val: "mir"
        string_val: "trinidad"
        string_val: "tobago"
        string_val: "owl"
        string_val: "eve"
        string_val: "olution"
        string_val: "clean"
        string_val: "sober"
        string_val: "france"
        string_val: "paducah"
        string_val: "irving"
        string_val: "berlin"
        string_val: "dishwashing"
        string_val: "unraveling"
        string_val: "gary"
        string_val: "harsh"
        string_val: "tarass"
        string_val: "boulba"
        string_val: "path"
        string_val: "aurora"
        string_val: "federated"
        string_val: "states"
        string_val: "micronesia"
        string_val: "sunshine"
        string_val: "monkey"
        string_val: "tiger"
        string_val: "javine"
        string_val: "hylton"
        string_val: "suicide"
        string_val: "pok\303\251mon"
        string_val: "victini"
        string_val: "reshiram"
        string_val: "zekrom"
        string_val: "garrett"
        string_val: "animal"
        string_val: "maryanne"
        string_val: "per"
        string_val: "yngve"
        string_val: "ohlin"
        string_val: "somalia"
        string_val: "killing"
        string_val: "fields"
        string_val: "providence"
        string_val: "provide"
        string_val: "dawn"
        string_val: "tira"
        string_val: "pax"
        string_val: "warrior"
        string_val: "kenmore"
        string_val: "nineteen"
        string_val: "argusville"
        string_val: "burkina"
        string_val: "glades"
        string_val: "myths"
        string_val: "hindus"
        string_val: "buddhists"
        string_val: "timeline"
        string_val: "lime"
        string_val: "caledonia"
        string_val: "rotem"
        string_val: "singers"
        string_val: "artifacts"
        string_val: "liechtenstein"
        string_val: "artani"
        string_val: "continued"
        string_val: "sealed"
        string_val: "swan"
        string_val: "aragon"
        string_val: "offroad"
        string_val: "legends"
        string_val: "fever"
        string_val: "friend"
        string_val: "isabella"
        string_val: "hahntown"
        string_val: "turf"
        string_val: "alfred"
        string_val: "cradle"
        string_val: "robbers"
        string_val: "fruit"
        string_val: "politics"
        string_val: "share"
        string_val: "epic"
        string_val: "wall"
        string_val: "sound"
        string_val: "grim"
        string_val: "skunk"
        string_val: "tun"
        string_val: "shawna"
        string_val: "michelle"
        string_val: "lizzie"
        string_val: "maro"
        string_val: "kim"
        string_val: "hyun"
        string_val: "joong"
        string_val: "seek"
        string_val: "destroy"
        string_val: "coulee"
        string_val: "rose"
        string_val: "bobby"
        string_val: "dwele"
        string_val: "marguerite"
        string_val: "eurovision"
        string_val: "naches"
        string_val: "sierra"
        string_val: "leone"
        string_val: "greek"
        string_val: "banana"
        string_val: "puccini"
        string_val: "jacqueline"
        string_val: "deanna"
        string_val: "carpenter"
        string_val: "uncas"
        string_val: "stream"
        string_val: "drugs"
        string_val: "jesus"
        string_val: "christ"
        string_val: "nails"
        string_val: "whitewater"
        string_val: "ellen"
        string_val: "lentil"
        string_val: "anything"
        string_val: "skatepark"
        string_val: "punks"
        string_val: "sunset"
        string_val: "truly"
        string_val: "warped"
        string_val: "download"
        string_val: "eagle"
        string_val: "hallwood"
        string_val: "jean"
        string_val: "lafitte"
        string_val: "blackberry"
        string_val: "chan"
        string_val: "whee"
        string_val: "macao"
        string_val: "secretary"
        string_val: "colour"
        string_val: "romain"
        string_val: "mcgill"
        string_val: "snuffy"
        string_val: "walden"
        string_val: "billboard"
        string_val: "finalists"
        string_val: "prefer"
        string_val: "teh"
        string_val: "opus"
        string_val: "butcher"
        string_val: "boy"
        string_val: "anchor"
        string_val: "low"
        string_val: "tide"
        string_val: "enid"
        string_val: "rom\303\241ntica"
        string_val: "due"
        string_val: "homo"
        string_val: "handbook"
        string_val: "carlos"
        string_val: "refugio"
        string_val: "cherry"
        string_val: "treatment"
        string_val: "fork"
        string_val: "mari"
        string_val: "jailbird"
        string_val: "terror"
        string_val: "visit"
        string_val: "got"
        string_val: "bag"
        string_val: "buick"
        string_val: "roars"
        string_val: "powersville"
        string_val: "guam"
        string_val: "working"
        string_val: "homer"
        string_val: "beethoven"
        string_val: "lives"
        string_val: "blythewood"
        string_val: "bouchon"
        string_val: "dynamite"
        string_val: "elegant"
        string_val: "rumyantsev"
        string_val: "telepathic"
        string_val: "experiences"
        string_val: "baladas"
        string_val: "rom\303\241nticas"
        string_val: "stu"
        string_val: "rak"
        string_val: "biszewilo"
        string_val: "airi"
        string_val: "suzuki"
        string_val: "dough"
        string_val: "boden"
        string_val: "11th"
        string_val: "mommy"
        string_val: "teddy"
        string_val: "screen"
        string_val: "souvenirs"
        string_val: "romania"
        string_val: "christian"
        string_val: "susana"
        string_val: "abby"
        string_val: "zaleski"
        string_val: "careless"
        string_val: "administrative"
        string_val: "behavior"
        string_val: "immortal"
        string_val: "prix"
        string_val: "searchlights"
        string_val: "belhaven"
        string_val: "galactic"
        string_val: "healer"
        string_val: "tribeca"
        string_val: "wilda"
        string_val: "jacklyn"
        string_val: "rupee"
        string_val: "ultra"
        string_val: "crown"
        string_val: "burgers"
        string_val: "compton"
        string_val: "millions"
        string_val: "langdon"
        string_val: "francesco"
        string_val: "gregori"
        string_val: "mole"
        string_val: "roxy"
        string_val: "onnaam"
        string_val: "muhurtham"
        string_val: "elsmore"
        string_val: "luxembourg"
        string_val: "cure"
        string_val: "lightning"
        string_val: "johto"
        string_val: "journeys"
        string_val: "lloyd"
        string_val: "anthems"
        string_val: "makers"
        string_val: "verdi"
        string_val: "seabrook"
        string_val: "blonde"
        string_val: "peking"
        string_val: "viktor"
        string_val: "merjanov"
        string_val: "wylliesburg"
        string_val: "returned"
        string_val: "operaci\303\263n"
        string_val: "bikini"
        string_val: "paradise"
        string_val: "heavenly"
        string_val: "spiderman"
        string_val: "rings"
        string_val: "postman"
        string_val: "amityville"
        string_val: "mu"
        string_val: "ko"
        string_val: "phetra"
        string_val: "professionals"
        string_val: "dora"
        string_val: "rainbow"
        string_val: "written"
        string_val: "natsu"
        string_val: "mini"
        string_val: "berryz"
        string_val: "phishing"
        string_val: "leoti"
        string_val: "pillars"
        string_val: "wisdom"
        string_val: "hiphop"
        string_val: "loco"
        string_val: "sailing"
        string_val: "seas"
        string_val: "nile"
        string_val: "shawn"
        string_val: "lane"
        string_val: "moved"
        string_val: "cena"
        string_val: "dumping"
        string_val: "survival"
        string_val: "primavera"
        string_val: "barcelona"
        string_val: "anna"
        string_val: "semenovich"
        string_val: "olive"
        string_val: "herkimer"
        string_val: "liver"
        string_val: "onions"
        string_val: "bessie"
        string_val: "antonia"
        string_val: "eighteenth"
        string_val: "ut"
        string_val: "elma"
        string_val: "hocking"
        string_val: "premiering"
        string_val: "pachangueo"
        string_val: "irma"
        string_val: "pig"
        string_val: "scrolls"
        string_val: "clinchco"
        string_val: "shawnna"
        string_val: "eletro"
        string_val: "br"
        string_val: "austin"
        string_val: "09"
        string_val: "funny"
        string_val: "split"
        string_val: "difference"
        string_val: "lit"
        string_val: "lights"
        string_val: "richfield"
        string_val: "cock"
        string_val: "bull"
        string_val: "caravan"
        string_val: "across"
        string_val: "line"
        string_val: "municipal"
        string_val: "ealing"
        string_val: "archie"
        string_val: "da"
        string_val: "ghetto"
        string_val: "hardcastle"
        string_val: "sulle"
        string_val: "sathya"
        string_val: "xandee"
        string_val: "georgiev"
        string_val: "kalica"
        string_val: "gillespie"
        string_val: "gayle"
        string_val: "fisn"
        string_val: "licorice"
        string_val: "mckechnie"
        string_val: "wanda"
        string_val: "honor"
        string_val: "carnot"
        string_val: "finland"
        string_val: "dangers"
        string_val: "canadian"
        string_val: "mounted"
        string_val: "hiptronix"
        string_val: "polka"
        string_val: "medley"
        string_val: "cuba"
        string_val: "jency"
        string_val: "anthony"
        string_val: "mozart"
        string_val: "todesfalle"
        string_val: "cosby"
        string_val: "cosnarati"
        string_val: "emergency"
        string_val: "lea"
        string_val: "chair"
        string_val: "bg"
        string_val: "knocc"
        string_val: "rapcaviar"
        string_val: "tioga"
        string_val: "albino"
        string_val: "blacksheep"
        string_val: "yuna"
        string_val: "ito"
        string_val: "rods"
        string_val: "shows"
        string_val: "jonny"
        string_val: "buckland"
        string_val: "buzz"
        string_val: "koontz"
        string_val: "passion"
        string_val: "foucault"
        string_val: "alok"
        string_val: "walpole"
        string_val: "flow"
        string_val: "faroe"
        string_val: "hound"
        string_val: "dog"
        string_val: "miami"
        string_val: "covered"
        string_val: "wagon"
        string_val: "personality"
        string_val: "social"
        string_val: "berry"
        string_val: "elrow"
        string_val: "carmen"
        string_val: "monson"
        string_val: "minor"
        string_val: "outlying"
        string_val: "milladore"
        string_val: "dolly"
        string_val: "parton"
        string_val: "heyy"
        string_val: "babyy"
        string_val: "gackt"
        string_val: "camui"
        string_val: "almighty"
        string_val: "johnsons"
        string_val: "bernard"
        string_val: "force"
        string_val: "phalcon"
        string_val: "marble"
        string_val: "cliffs"
        string_val: "hillview"
        string_val: "mineiro"
        string_val: "metalcore"
        string_val: "ek"
        string_val: "boond"
        string_val: "ishq"
        string_val: "occult"
        string_val: "saved"
        string_val: "johnnie"
        string_val: "shorty"
        string_val: "door"
        string_val: "release"
        string_val: "ties"
        string_val: "bind"
        string_val: "touchdown"
        string_val: "wenham"
        string_val: "chisholm"
        string_val: "inca"
        string_val: "weekend"
        string_val: "petit"
        string_val: "manan"
        string_val: "mascoutah"
        string_val: "tanzania"
        string_val: "38"
        string_val: "favoretta"
        string_val: "questions"
        string_val: "answers"
        string_val: "deathcore"
        string_val: "ik"
        string_val: "tara"
        string_val: "nova"
        string_val: "scotia"
        string_val: "speculative"
        string_val: "shangha\303\257"
        string_val: "milligan"
        string_val: "charenton"
        string_val: "umbrellas"
        string_val: "cherbourg"
        string_val: "merle"
        string_val: "haggard"
        string_val: "30th"
        string_val: "mamaroneck"
        string_val: "wwe"
        string_val: "od"
        string_val: "mene"
        string_val: "se"
        string_val: "odvikavaj"
        string_val: "freud"
        string_val: "moralist"
        string_val: "scorching"
        string_val: "sd"
        string_val: "roselle"
        string_val: "kaanapali"
        string_val: "widows"
        string_val: "ever"
        string_val: "farristown"
        string_val: "vol"
        string_val: "rss"
        string_val: "tracking"
        string_val: "brit"
        string_val: "unconscious"
        string_val: "tibetan"
        string_val: "montreal"
        string_val: "char"
        string_val: "colombia"
        string_val: "lands"
        string_val: "midongy"
        string_val: "du"
        string_val: "sud"
        string_val: "deersville"
        string_val: "exploits"
        string_val: "cormorant"
        string_val: "slippery"
        string_val: "noodle"
        string_val: "gober"
        string_val: "osage"
        string_val: "parempi"
        string_val: "mies"
        string_val: "caf\303\251"
        string_val: "daughter"
        string_val: "baeckeoffe"
        string_val: "control"
        string_val: "gem"
        string_val: "dazey"
        string_val: "reverence"
        string_val: "johnny"
        string_val: "kunnon"
        string_val: "syy"
        string_val: "ship"
        string_val: "lollipop"
        string_val: "arch"
        string_val: "edm"
        string_val: "branded"
        string_val: "loveless"
        string_val: "requests"
        string_val: "unarchigal"
        string_val: "marlene"
        string_val: "6th"
        string_val: "winnebago"
        string_val: "charlotte"
        string_val: "grisdale"
        string_val: "bangladesh"
        string_val: "monte"
        string_val: "sereno"
        string_val: "cl\303\241sicos"
        string_val: "robert"
        string_val: "chuckys"
        string_val: "malawi"
        string_val: "sarah"
        string_val: "teen"
        string_val: "carterville"
        string_val: "gryphon"
        string_val: "rewind"
        string_val: "ballachulish"
        string_val: "rebbe"
        string_val: "teachings"
        string_val: "menachem"
        string_val: "schneerson"
        string_val: "influential"
        string_val: "rabbi"
        string_val: "yoakum"
        string_val: "shasha"
        string_val: "43"
        string_val: "eddie"
        string_val: "mathematical"
        string_val: "decisions"
        string_val: "colorless"
        string_val: "tsukuru"
        string_val: "tazaki"
        string_val: "pilgrimage"
        string_val: "olmitz"
        string_val: "wash"
        string_val: "manifesto"
        string_val: "nevermore"
        string_val: "petersville"
        string_val: "bert"
        string_val: "mccracken"
        string_val: "purple"
        string_val: "alan"
        string_val: "abacus"
        string_val: "rochelle"
        string_val: "dick"
        string_val: "sand"
        string_val: "fifteen"
        string_val: "highway"
        string_val: "lincoln"
        string_val: "gettysburg"
        string_val: "hong"
        string_val: "kong"
        string_val: "idledale"
        string_val: "scoop"
        string_val: "swat"
        string_val: "icac"
        string_val: "investigators"
        string_val: "2014"
        string_val: "espen"
        string_val: "lind"
        string_val: "face"
        string_val: "heartland"
        string_val: "wheesung"
        string_val: "callicoon"
        string_val: "doomsters"
        string_val: "firehouse"
        string_val: "bees"
        string_val: "luambe"
        string_val: "thor"
        string_val: "ludowici"
        string_val: "ready"
        string_val: "head"
        string_val: "shout"
        string_val: "gaslight"
        string_val: "reader"
        string_val: "warned"
        string_val: "chant"
        string_val: "leeds"
        string_val: "lidia"
        string_val: "latasha"
        string_val: "journeyman"
        string_val: "pixley"
        string_val: "kitchen"
        string_val: "toto"
        string_val: "ennis"
        string_val: "cie\305\204"
        string_val: "caseya"
        string_val: "somis"
        string_val: "cocos"
        string_val: "kyrgyzstan"
        string_val: "tschaikovsky"
        string_val: "cheapest"
        string_val: "price"
        string_val: "instincts"
        string_val: "dreamstone"
        string_val: "audra"
        string_val: "reviews"
        string_val: "genetics"
        string_val: "swords"
        string_val: "mortem"
        string_val: "wipers"
        string_val: "org\303\241nica"
        string_val: "oil"
        string_val: "endgame"
        string_val: "banker"
        string_val: "strabane"
        string_val: "chen"
        string_val: "jiafeng"
        string_val: "keeling"
        string_val: "fury"
        string_val: "hopes"
        string_val: "heartbreak"
        string_val: "krystal"
        string_val: "bernardsville"
        string_val: "act"
        string_val: "ronnie"
        string_val: "dio"
        string_val: "selection"
        string_val: "hulmeville"
        string_val: "tape"
        string_val: "topock"
        string_val: "making"
        string_val: "milwaukee"
        string_val: "yangtze"
        string_val: "vikku"
        string_val: "vinayakram"
        string_val: "comics"
        string_val: "loved"
        string_val: "self"
        string_val: "leopard"
        string_val: "winfield"
        string_val: "porphyry"
        string_val: "sam"
        string_val: "noxubee"
        string_val: "restaurantin"
        string_val: "perrytown"
        string_val: "candice"
        string_val: "jeannie"
        string_val: "nichole"
        string_val: "agent"
        string_val: "concerns"
        string_val: "minority"
        string_val: "report"
        string_val: "kosher"
        string_val: "confusion"
        string_val: "mistborn"
        string_val: "ascension"
        string_val: "woodston"
        string_val: "mountainair"
        string_val: "theodore"
        string_val: "roosevelt"
        string_val: "inaugural"
        string_val: "site"
        string_val: "pero"
        string_val: "dungeons"
        string_val: "dragons"
        string_val: "mystara"
        string_val: "ruel"
        string_val: "woods"
        string_val: "hole"
        string_val: "oklahoma"
        string_val: "miso"
        string_val: "soup"
        string_val: "paula"
        string_val: "abdul"
        string_val: "musica"
        string_val: "espa\303\261ola"
        string_val: "fashion"
        string_val: "oxford"
        string_val: "em4jay"
        string_val: "shoe"
        string_val: "tristan"
        string_val: "betrayal"
        string_val: "whiteside"
        string_val: "elder"
        string_val: "dive"
        string_val: "bomber"
        string_val: "during"
        string_val: "thailand"
        string_val: "ct"
        string_val: "idols"
        string_val: "paranormal"
        string_val: "dimension"
        string_val: "keeneland"
        string_val: "plaine"
        string_val: "anatomy"
        string_val: "melancholy"
        string_val: "kiley"
        string_val: "couples"
        string_val: "heaton"
        string_val: "boating"
        string_val: "epte"
        string_val: "these"
        string_val: "phantom"
        string_val: "sometimes"
        string_val: "passing"
        string_val: "naseer"
        string_val: "shamma"
        string_val: "minnesota"
        string_val: "recent"
        string_val: "fleetwood"
        string_val: "lakeisha"
        string_val: "dancepop"
        string_val: "muffuletta"
        string_val: "testaroli"
        string_val: "cd"
        string_val: "overload"
        string_val: "starship"
        string_val: "litchfield"
        string_val: "extended"
        string_val: "dancefloor"
        string_val: "bajo"
        string_val: "estrellas"
        string_val: "matter"
        string_val: "mystical"
        string_val: "owens"
        string_val: "graduates"
        string_val: "malibu"
        string_val: "shohola"
        string_val: "tenderfoot"
        string_val: "49"
        string_val: "salvador"
        string_val: "truth"
        string_val: "carpathian"
        string_val: "calipuy"
        string_val: "minnie"
        string_val: "riperton"
        string_val: "cabi"
        string_val: "philosophy"
        string_val: "phenomenological"
        string_val: "collision"
        string_val: "system"
        string_val: "bloodhounds"
        string_val: "spirituals"
        string_val: "wakefield"
        string_val: "freckled"
        string_val: "hydration"
        string_val: "he"
        string_val: "fears"
        string_val: "wolf"
        string_val: "somwhere"
        string_val: "sungmin"
        string_val: "fiji"
        string_val: "outta"
        string_val: "miller"
        string_val: "badmeaningood"
        string_val: "volume4"
        string_val: "jaime"
        string_val: "unwind"
        string_val: "kelsey"
        string_val: "shelley"
        string_val: "cascading"
        string_val: "waterfall"
        string_val: "tropic"
        string_val: "scandalous"
        string_val: "lachman"
        string_val: "hungarian"
        string_val: "55"
        string_val: "gareth"
        string_val: "gates"
        string_val: "pollock"
        string_val: "crossing"
        string_val: "muddy"
        string_val: "bok"
        string_val: "preparedness"
        string_val: "zombie"
        string_val: "apocalypse"
        string_val: "puppet"
        string_val: "axis"
        string_val: "been"
        string_val: "cancelled"
        string_val: "crawlspace"
        string_val: "mim"
        string_val: "cawker"
        string_val: "bougatsa"
        string_val: "pelham"
        string_val: "student"
        string_val: "leticia"
        string_val: "twila"
        string_val: "edwards"
        string_val: "secondary"
        string_val: "residence"
        string_val: "mosses"
        string_val: "manse"
        string_val: "lamar"
        string_val: "bell"
        string_val: "curve"
        string_val: "indocumentado"
        string_val: "bridle"
        string_val: "trails"
        string_val: "24"
        string_val: "lauren"
        string_val: "schenker"
        string_val: "ina"
        string_val: "hermann"
        string_val: "baumann"
        string_val: "parent"
        string_val: "hawaiian"
        string_val: "honeymoon"
        string_val: "1999"
        string_val: "novels"
        string_val: "iris"
        string_val: "2032"
        string_val: "warriors"
        string_val: "avatar"
        string_val: "moose"
        string_val: "message"
        string_val: "szahram"
        string_val: "nazeri"
        string_val: "hold"
        string_val: "liquor"
        string_val: "electronow"
        string_val: "kenya"
        string_val: "afterlife"
        string_val: "palm"
        string_val: "tennyson"
        string_val: "wagener"
        string_val: "delanson"
        string_val: "brownfield"
        string_val: "breaux"
        string_val: "turks"
        string_val: "caicos"
        string_val: "hoyt"
        string_val: "niagara"
        string_val: "thrash"
        string_val: "attack"
        string_val: "chymical"
        string_val: "wedding"
        string_val: "carne"
        string_val: "pizzaiola"
        string_val: "tamra"
        string_val: "viola"
        string_val: "dorothea"
        string_val: "slut"
        string_val: "27"
        string_val: "always"
        string_val: "trouble"
        string_val: "ward"
        string_val: "stuck"
        string_val: "sax"
        string_val: "joni"
        string_val: "sanders"
        string_val: "53"
        string_val: "arctic"
        string_val: "flowers"
        string_val: "max"
        string_val: "richter"
        string_val: "61"
        string_val: "exiles"
        string_val: "farallon"
        string_val: "fight"
        string_val: "anarchy"
        string_val: "elba"
        string_val: "corina"
        string_val: "technical"
        string_val: "brutal"
        string_val: "straight"
        string_val: "eckstine"
        string_val: "emotron"
        string_val: "varieties"
        string_val: "scientific"
        string_val: "telemark"
        string_val: "exploring"
        string_val: "reef"
        string_val: "active"
        string_val: "traffic"
        string_val: "policeman"
        string_val: "hattiesburg"
        string_val: "caucasian"
        string_val: "jboss"
        string_val: "enterprise"
        string_val: "soa"
        string_val: "platform"
        string_val: "halfway"
        string_val: "shall"
        string_val: "armenian"
        string_val: "steel"
        string_val: "rag"
        string_val: "covers"
        string_val: "recite"
        string_val: "glennie"
        string_val: "mulawin"
        string_val: "drums"
        string_val: "along"
        string_val: "brenda"
        string_val: "turk"
        string_val: "fourche"
        string_val: "itch"
        string_val: "spectres"
        string_val: "meaning"
        string_val: "slinger"
        string_val: "operetta"
        string_val: "dolores"
        string_val: "coastal"
        string_val: "landscape"
        string_val: "vinci"
        string_val: "code"
        string_val: "vanishing"
        string_val: "thieves"
        string_val: "brubeck"
        string_val: "goldimouse"
        string_val: "intimate"
        string_val: "por"
        string_val: "una"
        string_val: "cabeza"
        string_val: "reading"
        string_val: "invades"
        string_val: "everyday"
        string_val: "beats"
        string_val: "palau"
        string_val: "whether"
        string_val: "bahrain"
        string_val: "uncut"
        string_val: "sadface"
        string_val: "beard"
        string_val: "chelsea"
        string_val: "lunchtime"
        string_val: "vegan"
        string_val: "enfield"
        string_val: "willits"
        string_val: "olpe"
        string_val: "mp"
        string_val: "lighthouse"
        string_val: "jackass"
        string_val: "investing"
        string_val: "maple"
        string_val: "glen"
        string_val: "meatballs"
        string_val: "gibassier"
        string_val: "ricky"
        string_val: "skaggs"
        string_val: "hendley"
        string_val: "catahoula"
        string_val: "entrevistas"
        string_val: "metallica"
        string_val: "never"
        string_val: "stranger"
        string_val: "addo"
        string_val: "elefanten"
        string_val: "coon"
        string_val: "clarice"
        string_val: "debbie"
        string_val: "flame"
        string_val: "wielding"
        string_val: "winnfield"
        string_val: "no\303\253l"
        string_val: "forcast"
        string_val: "private"
        string_val: "patient"
        string_val: "feast"
        string_val: "cornelia"
        string_val: "bettie"
        string_val: "tyrant"
        string_val: "dschiwan"
        string_val: "gasparjan"
        string_val: "beth"
        string_val: "tatico"
        string_val: "henriquez"
        string_val: "bleeps"
        string_val: "bloops"
        string_val: "schlitt"
        string_val: "chris"
        string_val: "frantz"
        string_val: "niobrara"
        string_val: "licence"
        string_val: "renewed"
        string_val: "web"
        string_val: "signed"
        string_val: "xoxo"
        string_val: "divorce"
        string_val: "togo"
        string_val: "24th"
        string_val: "released"
        string_val: "whitney"
        string_val: "deathsmiles"
        string_val: "mile"
        string_val: "shoes"
        string_val: "tha"
        string_val: "funkee"
        string_val: "homosapien"
        string_val: "wenn"
        string_val: "lucy"
        string_val: "springt"
        string_val: "saintly"
        string_val: "switch"
        string_val: "vinyl"
        string_val: "notebooks"
        string_val: "winterheart"
        string_val: "guild"
        string_val: "corinne"
        string_val: "tisha"
        string_val: "billion"
        string_val: "dollar"
        string_val: "ransom"
        string_val: "paulette"
        string_val: "piece"
        string_val: "orchestra"
        string_val: "cello"
        string_val: "colors"
        string_val: "taskcracker"
        string_val: "outlook"
        string_val: "sport"
        string_val: "pastime"
        string_val: "solid"
        string_val: "gina"
        string_val: "schock"
        string_val: "twerkout"
        string_val: "neutral"
        string_val: "xiang"
        string_val: "madden"
        string_val: "nfl"
        string_val: "nana"
        string_val: "kitade"
        string_val: "psychedelia"
        string_val: "angelita"
        string_val: "susan"
        string_val: "reed"
        string_val: "ashlee"
        string_val: "watson"
        string_val: "currituck"
        string_val: "adelaide"
        string_val: "gateau"
        string_val: "everywhere"
        string_val: "magnificent"
        string_val: "thomas"
        string_val: "hynes"
        string_val: "recovery"
        string_val: "dame"
        string_val: "anatone"
        string_val: "incorporate"
        string_val: "ayumi"
        string_val: "hamasaki"
        string_val: "arena"
        string_val: "level"
        string_val: "libre"
        string_val: "ucolo"
        string_val: "headed"
        string_val: "vineyard"
        string_val: "haven"
        string_val: "candace"
        string_val: "mcgee"
        string_val: "bodyguard"
        string_val: "montchanin"
        string_val: "fuzzy"
        string_val: "charlie"
        string_val: "rumba"
        string_val: "verde"
        string_val: "lopeno"
        string_val: "dorchester"
        string_val: "filthy"
        string_val: "lucre"
        string_val: "fabri"
        string_val: "fibra"
        string_val: "princes"
        string_val: "treasure"
        string_val: "dyke"
        string_val: "terminator"
        string_val: "furano"
        string_val: "ashibetsu"
        string_val: "ate"
        string_val: "rocky"
        string_val: "mound"
        string_val: "sweden"
        string_val: "pause"
        string_val: "fr\303\255o"
        string_val: "somewhee"
        string_val: "hollenberg"
        string_val: "ruth"
        string_val: "seeger"
        string_val: "007"
        string_val: "cleopatra"
        string_val: "stratan"
        string_val: "masterworks"
        string_val: "teenagers"
        string_val: "merlin"
        string_val: "effect"
        string_val: "pinto"
        string_val: "soon"
        string_val: "grey"
        string_val: "alone"
        string_val: "faint"
        string_val: "benedict"
        string_val: "slick"
        string_val: "rick"
        string_val: "furnace"
        string_val: "adrenaline"
        string_val: "mabel"
        string_val: "dramatic"
        string_val: "career"
        string_val: "tony"
        string_val: "kakko"
        string_val: "exmore"
        string_val: "tom"
        string_val: "baxter"
        string_val: "kelso"
        string_val: "camden"
        string_val: "warning"
        string_val: "enough"
        string_val: "darth"
        string_val: "maul"
        string_val: "ruud"
        string_val: "jolie"
        string_val: "zamiast"
        string_val: "burzy"
        string_val: "belles"
        string_val: "clements"
        string_val: "nancy"
        string_val: "ruiz"
        string_val: "gibraltar"
        string_val: "class"
        string_val: "tarkan"
        string_val: "madrugando"
        string_val: "thornbury"
        string_val: "nm"
        string_val: "cave"
        string_val: "canem"
        string_val: "demos"
        string_val: "agnolotti"
        string_val: "effortless"
        string_val: "regurgitation"
        string_val: "va"
        string_val: "villa"
        string_val: "goodreader"
        string_val: "maltio"
        string_val: "strict"
        string_val: "mc"
        string_val: "roots"
        string_val: "australia"
        string_val: "compendium"
        string_val: "analytical"
        string_val: "nomenclature"
        string_val: "shavuot"
        string_val: "holidays"
        string_val: "yarra"
        string_val: "harrowing"
        string_val: "gwynedd"
        string_val: "cuckoo"
        string_val: "clocks"
        string_val: "hymn"
        string_val: "munawar"
        string_val: "ali"
        string_val: "khan"
        string_val: "mujeres"
        string_val: "hombres"
        string_val: "bum"
        string_val: "note"
        string_val: "bead"
        string_val: "sweat"
        string_val: "episodes"
        string_val: "musketeers"
        string_val: "131"
        string_val: "atanassow"
        string_val: "voyage"
        string_val: "treader"
        string_val: "moffett"
        string_val: "brat"
        string_val: "nationaal"
        string_val: "garphyttan"
        string_val: "cherryh"
        string_val: "odyssey"
        string_val: "valle"
        string_val: "jarama"
        string_val: "bottles"
        string_val: "un"
        string_val: "provinciale"
        string_val: "testament"
        string_val: "orpheus"
        string_val: "alexandra"
        string_val: "govere"
        string_val: "anochecer"
        string_val: "urbano"
        string_val: "eastport"
        string_val: "thomson"
        string_val: "dillard"
        string_val: "putnam"
        string_val: "hall"
        string_val: "bastards"
        string_val: "guatemala"
        string_val: "skylar"
        string_val: "diggins"
        string_val: "riding"
        string_val: "using"
        string_val: "object"
        string_val: "unalaska"
        string_val: "closed"
        string_val: "appreciation"
        string_val: "folksy"
        string_val: "panic"
        string_val: "streets"
        string_val: "infinite"
        string_val: "pasqual"
        string_val: "battlefield"
        string_val: "burnside"
        string_val: "noew"
        string_val: "dundee"
        string_val: "evocation"
        string_val: "arcane"
        string_val: "dominion"
        string_val: "heroic"
        string_val: "failures"
        string_val: "candy"
        string_val: "mango"
        string_val: "pine"
        string_val: "bluffs"
        string_val: "prodigal"
        string_val: "baba"
        string_val: "palying"
        string_val: "maunabo"
        string_val: "15th"
        string_val: "olympia"
        string_val: "1959"
        string_val: "delta"
        string_val: "chicago"
        string_val: "schenectady"
        string_val: "fleischmanns"
        string_val: "breathless"
        string_val: "gasport"
        string_val: "wolin"
        string_val: "lion"
        string_val: "airport"
        string_val: "galsoft"
        string_val: "linux"
        string_val: "igor"
        string_val: "talkow"
        string_val: "grits"
        string_val: "rocks"
        string_val: "sheikh"
        string_val: "chilli"
        string_val: "lobster"
        string_val: "newberg"
        string_val: "scarecrow"
        string_val: "masterful"
        string_val: "owes"
        string_val: "wizard"
        string_val: "ashley"
        string_val: "cafagna"
        string_val: "tesoro"
        string_val: "jip"
        string_val: "rachael"
        string_val: "grantsburg"
        string_val: "spencer"
        string_val: "fatty"
        string_val: "haskell"
        string_val: "bim"
        string_val: "ear"
        string_val: "paulinho"
        string_val: "nearly"
        string_val: "nashville"
        string_val: "june"
        string_val: "rileyville"
        string_val: "angle"
        string_val: "rosalie"
        string_val: "evelyn"
        string_val: "croatan"
        string_val: "esquivando"
        string_val: "charcos"
        string_val: "documents"
        string_val: "swift"
        string_val: "doves"
        string_val: "pythons"
        string_val: "tourist"
        string_val: "tin"
        string_val: "domingo"
        string_val: "karl"
        string_val: "davydov"
        string_val: "reyna"
        string_val: "trottole"
        string_val: "sell"
        string_val: "setting"
        string_val: "bears"
        string_val: "granddaughter"
        string_val: "ambler"
        string_val: "andreas"
        string_val: "becomes"
        string_val: "tabor"
        string_val: "ron"
        string_val: "grainer"
        string_val: "magica"
        string_val: "apostolos"
        string_val: "nikolaidis"
        string_val: "nba"
        string_val: "ahmad"
        string_val: "rashad"
        string_val: "didn"
        string_val: "nobody"
        string_val: "they"
        string_val: "else"
        string_val: "spy"
        string_val: "fanatic"
        string_val: "dutch"
        string_val: "used"
        string_val: "her"
        string_val: "collective"
        string_val: "pitcairn"
        string_val: "kom"
        string_val: "sparro"
        string_val: "corner"
        string_val: "manos"
        string_val: "hatzidakis"
        string_val: "therapy"
        string_val: "canyon"
        string_val: "gleed"
        string_val: "teriazume"
        string_val: "ethiopia"
        string_val: "ellenton"
        string_val: "apples"
        string_val: "estr\303\251s"
        string_val: "iparty"
        string_val: "victorious"
        string_val: "tourte"
        string_val: "yamhill"
        string_val: "adobe"
        string_val: "digital"
        string_val: "editions"
        string_val: "pastelaria"
        string_val: "takilma"
        string_val: "alexander"
        string_val: "heath"
        string_val: "maiden"
        string_val: "danced"
        string_val: "zahn"
        string_val: "leisure"
        string_val: "knoll"
        string_val: "southside"
        string_val: "1000"
        string_val: "rathinirvedam"
        string_val: "statistical"
        string_val: "getting"
        string_val: "leonard"
        string_val: "deviled"
        string_val: "crab"
        string_val: "dimitri"
        string_val: "fampas"
        string_val: "douthat"
        string_val: "bestiary"
        string_val: "council"
        string_val: "dads"
        string_val: "blackpool"
        string_val: "zec"
        string_val: "mitchinamecus"
        string_val: "surprise"
        string_val: "seung"
        string_val: "gi"
        string_val: "invitation"
        string_val: "verdure"
        string_val: "bloom"
        string_val: "glove"
        string_val: "nico"
        string_val: "thompson"
        string_val: "canta"
        string_val: "ducha"
        string_val: "khedive"
        string_val: "christina"
        string_val: "parc"
        string_val: "marin"
        string_val: "gandhi"
        string_val: "remote"
        string_val: "antelope"
        string_val: "spots"
        string_val: "boat"
        string_val: "human"
        string_val: "lene"
        string_val: "lovich"
        string_val: "curtains"
        string_val: "priorities"
        string_val: "parade"
        string_val: "sewickley"
        string_val: "looks"
        string_val: "shmini"
        string_val: "atzeret"
        string_val: "evans"
        string_val: "motivation"
        string_val: "sandoval"
        string_val: "maxime"
        string_val: "carencro"
        string_val: "lolita"
        string_val: "evolution"
        string_val: "karobar"
        string_val: "tatar"
        string_val: "cambodia"
        string_val: "sohl"
        string_val: "offers"
        string_val: "lots"
        string_val: "hunting"
        string_val: "reservea"
        string_val: "tailwind"
        string_val: "untold"
        string_val: "cretu"
        string_val: "crack"
        string_val: "trout"
        string_val: "tschetter"
        string_val: "silvia"
        string_val: "sandy"
        string_val: "noroi"
        string_val: "27th"
        string_val: "tasher"
        string_val: "desh"
        string_val: "jono"
        string_val: "ben"
        string_val: "chapman"
        string_val: "celestial"
        string_val: "hawk"
        string_val: "johnstown"
        string_val: "flood"
        string_val: "shamrock"
        string_val: "bonner"
        string_val: "converging"
        string_val: "conspiracies"
        string_val: "kloden"
        string_val: "drejer"
        string_val: "past"
        string_val: "closer"
        string_val: "tortano"
        string_val: "carly"
        string_val: "holtville"
        string_val: "collaborators"
        string_val: "readstown"
        string_val: "mitcham"
        string_val: "licensed"
        string_val: "grilled"
        string_val: "meat"
        string_val: "tunisia"
        string_val: "rey"
        string_val: "lasts"
        string_val: "911"
        string_val: "nauru"
        string_val: "haiti"
        string_val: "otselic"
        string_val: "sat"
        string_val: "345"
        string_val: "wolves"
        string_val: "dogs"
        string_val: "fargo"
        string_val: "19th"
        string_val: "snowball"
        string_val: "arab"
        string_val: "emirates"
        string_val: "ninaview"
        string_val: "chong"
        string_val: "nee"
        string_val: "spread"
        string_val: "gospel"
        string_val: "nitti"
        string_val: "apparatus"
        string_val: "sync"
        string_val: "asking"
        string_val: "alexandria"
        string_val: "tu"
        string_val: "maldito"
        string_val: "orgullo"
        string_val: "mcphee"
        string_val: "craft"
        string_val: "saucisse"
        string_val: "calistoga"
        string_val: "shopsins"
        string_val: "denmark"
        string_val: "patrick"
        string_val: "titanic"
        string_val: "goes"
        string_val: "cho"
        string_val: "kyu"
        string_val: "funky"
        string_val: "lance"
        string_val: "select"
        string_val: "conversations"
        string_val: "persistence"
        string_val: "vision"
        string_val: "jovino"
        string_val: "santos"
        string_val: "neto"
        string_val: "confidence"
        string_val: "boost"
        string_val: "robotix"
        string_val: "invasion"
        string_val: "festoni"
        string_val: "weight"
        string_val: "portions"
        string_val: "stained"
        string_val: "notebook"
        string_val: "essays"
        string_val: "circus"
        string_val: "garage"
        string_val: "sugarolly"
        string_val: "demi"
        string_val: "semi"
        string_val: "devils"
        string_val: "texola"
        string_val: "double"
        string_val: "deal"
        string_val: "cavalero"
        string_val: "salade"
        string_val: "geoff"
        string_val: "ryman"
        string_val: "bibliography"
        string_val: "intrepid"
        string_val: "none"
        string_val: "nickelsville"
        string_val: "stand"
        string_val: "proud"
        string_val: "acta"
        string_val: "mathematicae"
        string_val: "applicatae"
        string_val: "sinica"
        string_val: "mask"
        string_val: "project"
        string_val: "shadowchaser"
        string_val: "ernie"
        string_val: "hawkins"
        string_val: "troopers"
        string_val: "wits"
        string_val: "faithless"
        string_val: "trek"
        string_val: "demolition"
        string_val: "sita"
        string_val: "claude"
        string_val: "vonstroke"
        string_val: "warheart"
        string_val: "histoire"
        string_val: "ride"
        string_val: "dina"
        string_val: "alexis"
        string_val: "grizzled"
        string_val: "squirrel"
        string_val: "magical"
        string_val: "roger"
        string_val: "whittaker"
        string_val: "ticket"
        string_val: "somme"
        string_val: "exclusive"
        string_val: "ladies"
        string_val: "phoenix"
        string_val: "videogames"
        string_val: "sauce"
        string_val: "maharashtrian"
        string_val: "psycho"
        string_val: "gobler"
        string_val: "joplin"
        string_val: "cin"
        string_val: "computer"
        string_val: "google"
        string_val: "bachata"
        string_val: "pencil"
        string_val: "thin"
        string_val: "mustache"
        string_val: "sentenced"
        string_val: "prism"
        string_val: "gamble"
        string_val: "ksi\304\231ga"
        string_val: "urodzaju"
        string_val: "abigail"
        string_val: "really"
        string_val: "sixpence"
        string_val: "bradbury"
        string_val: "fantas\303\255a"
        string_val: "aquariums"
        string_val: "pyongyang"
        string_val: "umbrian"
        string_val: "hippocratic"
        string_val: "oath"
        string_val: "ruxpin"
        string_val: "salvation"
        string_val: "minto"
        string_val: "different"
        string_val: "waconia"
        string_val: "cleveland"
        string_val: "congo"
        string_val: "som"
        string_val: "tam"
        string_val: "elizeth"
        string_val: "cardoso"
        string_val: "hearted"
        string_val: "rombola"
        string_val: "tsipouro"
        string_val: "handful"
        string_val: "dust"
        string_val: "app"
        string_val: "romulus"
        string_val: "sabines"
        string_val: "matthew"
        string_val: "helders"
        string_val: "supernatural"
        string_val: "campus"
        string_val: "ambush"
        string_val: "hamburger"
        string_val: "cracking"
        string_val: "contraptions"
        string_val: "enamor\303\241ndose"
        string_val: "paloma"
        string_val: "negra"
        string_val: "das"
        string_val: "ende"
        string_val: "precinct"
        string_val: "wildwood"
        string_val: "iraq"
        string_val: "gluten"
        string_val: "141"
        string_val: "phera"
        string_val: "knows"
        string_val: "decides"
        string_val: "wildreservaat"
        string_val: "ithala"
        string_val: "chippewa"
        string_val: "gathering"
        string_val: "chab"
        string_val: "palmetto"
        string_val: "kropp"
        string_val: "skull"
        string_val: "investigating"
        string_val: "donuts"
        string_val: "genuine"
        string_val: "armageddon"
        string_val: "loyola"
        string_val: "gus"
        string_val: "stevens"
        string_val: "buccaneer"
        string_val: "kazakhstan"
        string_val: "yourself"
        string_val: "thenaruvi"
        string_val: "empires"
        string_val: "faer\303\273n"
        string_val: "wiktor"
        string_val: "coj"
        string_val: "labyrinthe"
        string_val: "lewisville"
        string_val: "chaparral"
        string_val: "twelfth"
        string_val: "impossible"
        string_val: "atom"
        string_val: "cissy"
        string_val: "albums"
        string_val: "belknap"
        string_val: "remember"
        string_val: "nets"
        string_val: "doing"
        string_val: "epworth"
        string_val: "morton"
        string_val: "feldman"
        string_val: "quartet"
        string_val: "cargray"
        string_val: "tries"
        string_val: "matilda"
        string_val: "deana"
        string_val: "baconton"
        string_val: "care"
        string_val: "stereophonics"
        string_val: "bake"
        string_val: "deron"
        string_val: "fridays"
        string_val: "patmos"
        string_val: "giv"
        string_val: "maimi"
        string_val: "yajima"
        string_val: "playground"
        string_val: "onion"
        string_val: "sportsdome"
        string_val: "mcisaac"
        string_val: "haley"
        string_val: "scarnato"
        string_val: "pecan"
        string_val: "bet"
        string_val: "frightened"
        string_val: "simple"
        string_val: "elberta"
        string_val: "olga"
        string_val: "hooker"
        string_val: "successful"
        string_val: "dealmaking"
        string_val: "mande"
        string_val: "rambler"
        string_val: "verna"
        string_val: "slated"
        string_val: "ash"
        string_val: "wednesday"
        string_val: "form"
        string_val: "spider"
        string_val: "beauregard"
        string_val: "ruled"
        string_val: "britannia"
        string_val: "carter"
        string_val: "critic"
        string_val: "millinocket"
        string_val: "morten"
        string_val: "harket"
        string_val: "mer"
        string_val: "rouge"
        string_val: "\346\245\275\345\234\222\350\277\275\346\224\276"
        string_val: "expelled"
        string_val: "chowder"
        string_val: "17th"
        string_val: "millennium"
        string_val: "catholic"
        string_val: "prayer"
        string_val: "gf"
        string_val: "leaf"
        string_val: "drawa"
        string_val: "crepes"
        string_val: "sint"
        string_val: "maarten"
        string_val: "twink"
        string_val: "guy"
        string_val: "raytown"
        string_val: "casserole"
        string_val: "corrina"
        string_val: "skin"
        string_val: "iw"
        string_val: "atch"
        string_val: "balls"
        string_val: "vampate"
        string_val: "fuoco"
        string_val: "follett"
        string_val: "cum"
        string_val: "noize"
        string_val: "unsettled"
        string_val: "tarts"
        string_val: "piazzolla"
        string_val: "berowra"
        string_val: "picasso"
        string_val: "haigler"
        string_val: "ethel"
        string_val: "crash"
        string_val: "course"
        string_val: "zorro"
        string_val: "frontiers"
        string_val: "ecology"
        string_val: "environment"
        string_val: "rencor"
        string_val: "truffade"
        string_val: "carmel"
        string_val: "rutherfordton"
        string_val: "22nd"
        string_val: "hornersville"
        string_val: "mandya"
        string_val: "chrisman"
        string_val: "bioruby"
        string_val: "molino"
        string_val: "tuna"
        string_val: "burning"
        string_val: "tripp"
        string_val: "eisen"
        string_val: "mum"
        string_val: "miguel"
        string_val: "bos\303\251"
        string_val: "shit"
        string_val: "manthan"
        string_val: "morphin"
        string_val: "rangers"
        string_val: "d\303\251cadas"
        string_val: "redacted"
        string_val: "masks"
        string_val: "mackville"
        string_val: "ludlow"
        string_val: "yesterday"
        string_val: "corcovado"
        string_val: "elbridge"
        string_val: "bryant"
        string_val: "inyecci\303\263n"
        string_val: "musical"
        string_val: "dells"
        string_val: "kitts"
        string_val: "nevis"
        string_val: "nastya"
        string_val: "kamenskih"
        string_val: "info"
        string_val: "fist"
        string_val: "daddy"
        string_val: "booze"
        string_val: "sells"
        string_val: "cupcake"
        string_val: "lumpkin"
        string_val: "prompton"
        string_val: "crugers"
        string_val: "marlton"
        string_val: "circle"
        string_val: "warp"
        string_val: "goan"
        string_val: "winnie"
        string_val: "pooh"
        string_val: "televised"
        string_val: "morality"
        string_val: "bidoup"
        string_val: "n\303\272i"
        string_val: "b\303\240"
        string_val: "aviation"
        string_val: "pump"
        string_val: "phil"
        string_val: "ochs"
        string_val: "fortune"
        string_val: "vezione"
        string_val: "verro"
        string_val: "p\303\264chouse"
        string_val: "rocksprings"
        string_val: "berghoff"
        string_val: "philosophic"
        string_val: "thought"
        string_val: "ayn"
        string_val: "rand"
        string_val: "kingfisher"
        string_val: "caper"
        string_val: "psychologist"
        string_val: "sawtooth"
        string_val: "mina"
        string_val: "caputo"
        string_val: "dinosaur"
        string_val: "ask"
        string_val: "cage"
        string_val: "parry"
        string_val: "birch"
        string_val: "mo"
        string_val: "satisfaction"
        string_val: "carny"
        string_val: "thibaults"
        string_val: "claw"
        string_val: "finiti"
        string_val: "rete"
        string_val: "parnell"
        string_val: "raven"
        string_val: "kaori"
        string_val: "utatsuki"
        string_val: "sale"
        string_val: "vintage"
        string_val: "74"
        string_val: "electronica"
        string_val: "chapel"
        string_val: "gota"
        string_val: "duel"
        string_val: "bear"
        string_val: "amanda"
        string_val: "stern"
        string_val: "rap"
        string_val: "vyechnyy"
        string_val: "strannik"
        string_val: "generator"
        string_val: "belgian"
        string_val: "innocent"
        string_val: "remler"
        string_val: "pizzas"
        string_val: "deuce"
        string_val: "wrong"
        string_val: "reasons"
        string_val: "league"
        string_val: "heterocycles"
        string_val: "sittor"
        string_val: "photographic"
        string_val: "karthaus"
        string_val: "barth\303\251lemy"
        string_val: "powers"
        string_val: "colleagues"
        string_val: "shockscape"
        string_val: "jessica"
        string_val: "mauboy"
        string_val: "bobbie"
        string_val: "colette"
        string_val: "peak"
        string_val: "lookout"
        string_val: "felicity"
        string_val: "britain"
        string_val: "frisbee"
        string_val: "hippie"
        string_val: "preacher"
        string_val: "helianthushof"
        string_val: "hurffville"
        string_val: "aboriginal"
        string_val: "folio"
        string_val: "contract"
        string_val: "opinion"
        string_val: "longest"
        string_val: "projectors"
        string_val: "superior"
        string_val: "secour"
        string_val: "annabella"
        string_val: "lwin"
        string_val: "alternativa"
        string_val: "lampi"
        string_val: "valor"
        string_val: "lord"
        string_val: "schools"
        string_val: "forza"
        string_val: "amore"
        string_val: "citrus"
        string_val: "industry"
        string_val: "resistance"
        string_val: "cottageville"
        string_val: "abbruzzese"
        string_val: "cali"
        string_val: "refrain"
        string_val: "limbo"
        string_val: "hoggard"
        string_val: "wes"
        string_val: "scantlin"
        string_val: "edinburgh"
        string_val: "cyclone"
        string_val: "dear"
        string_val: "convoy"
        string_val: "busters"
        string_val: "ch\303\251r"
        string_val: "madeleine"
        string_val: "dresden"
        string_val: "carmichaels"
        string_val: "stuart"
        string_val: "donaldson"
        string_val: "htoo"
        string_val: "ein"
        string_val: "ribs"
        string_val: "gustar"
        string_val: "profil"
        string_val: "amina"
        string_val: "ambition"
        string_val: "bombshells"
        string_val: "evangeline"
        string_val: "extreme"
        string_val: "ghostbusters"
        string_val: "diarios"
        string_val: "bicicleta"
        string_val: "guyana"
        string_val: "lithuania"
        string_val: "female"
        string_val: "hamlet"
        string_val: "peru"
        string_val: "caliente"
        string_val: "payette"
        string_val: "spartan"
        string_val: "dressed"
        string_val: "ryan"
        string_val: "shutdown"
        string_val: "priscilla"
        string_val: "ballet"
        string_val: "altai"
        string_val: "tavan"
        string_val: "bogd"
        string_val: "market"
        string_val: "shagrath"
        string_val: "sabbath"
        string_val: "ozzy"
        string_val: "revelations"
        string_val: "melly"
        string_val: "chili"
        string_val: "sontha"
        string_val: "ooru"
        string_val: "kanwar"
        string_val: "grandkid"
        string_val: "ghosts"
        string_val: "abyss"
        string_val: "ellington"
        string_val: "newport"
        string_val: "inheritance"
        string_val: "loss"
        string_val: "aura"
        string_val: "hugh"
        string_val: "masekela"
        string_val: "ibiza"
        string_val: "abo"
        string_val: "madera"
        string_val: "salina"
        string_val: "commitments"
        string_val: "homestead"
        string_val: "meadows"
        string_val: "norway"
        string_val: "youngest"
        string_val: "profession"
        string_val: "bolivia"
        string_val: "rod"
        string_val: "argent"
        string_val: "propuesta"
        string_val: "foie"
        string_val: "gras"
        string_val: "divine"
        string_val: "rest"
        string_val: "grandmother"
        string_val: "dans"
        string_val: "innocents"
        string_val: "matinee"
        string_val: "idol"
        string_val: "sold"
        string_val: "bonita"
        string_val: "kingdoms"
        string_val: "ledoux"
        string_val: "4813"
        string_val: "harmar"
        string_val: "gene"
        string_val: "repent"
        string_val: "replenish"
        string_val: "purples"
        string_val: "wakarusa"
        string_val: "elizabeth"
        string_val: "gang"
        string_val: "138th"
        string_val: "venice"
        string_val: "hokendauqua"
        string_val: "beamer"
        string_val: "gravity"
        string_val: "diplomat"
        string_val: "fir"
        string_val: "granite"
        string_val: "steppe"
        string_val: "buh"
        string_val: "already"
        string_val: "pt"
        string_val: "hal"
        string_val: "patino"
        string_val: "ambiente"
        string_val: "rnb"
        string_val: "serve"
        string_val: "wastedagain"
        string_val: "greensburg"
        string_val: "scriptures"
        string_val: "eternity"
        string_val: "crosswind"
        string_val: "greenport"
        string_val: "bystrzyca"
        string_val: "koichi"
        string_val: "sugiyama"
        string_val: "joan"
        string_val: "angels"
        string_val: "laurelhurst"
        string_val: "marching"
        string_val: "beggar"
        string_val: "brenham"
        string_val: "sheila"
        string_val: "brew"
        string_val: "lil"
        string_val: "armstrong"
        string_val: "bette"
        string_val: "dungeonmaster"
        string_val: "swedish"
        string_val: "butler"
        string_val: "saw"
        string_val: "barometer"
        string_val: "actors"
        string_val: "dies"
        string_val: "mimi"
        string_val: "biscuit"
        string_val: "factory"
        string_val: "12th"
        string_val: "scales"
        string_val: "newburyport"
        string_val: "manhasset"
        string_val: "tarzan"
        string_val: "apes"
        string_val: "riverview"
        string_val: "uintah"
        string_val: "obama"
        string_val: "promise"
        string_val: "profiteers"
        string_val: "phish"
        string_val: "vegas"
        string_val: "sanford"
        string_val: "herald"
        string_val: "switzer"
        string_val: "pain"
        string_val: "s\303\263lo"
        string_val: "dos"
        string_val: "pussyfoot"
        string_val: "wed"
        string_val: "myers"
        string_val: "zephyrhills"
        string_val: "toxicology"
        string_val: "environmental"
        string_val: "health"
        string_val: "break"
        string_val: "educational"
        string_val: "execution"
        string_val: "den"
        string_val: "twilight"
        string_val: "breaking"
        string_val: "mojito"
        string_val: "harder"
        string_val: "tatamy"
        string_val: "sompio"
        string_val: "brother"
        string_val: "adeline"
        string_val: "mcdonald"
        string_val: "plying"
        string_val: "teeth"
        string_val: "mokena"
        string_val: "lindas"
        string_val: "mundo"
        string_val: "daimidaler"
        string_val: "penguin"
        string_val: "empire"
        string_val: "dobie"
        string_val: "gillis"
        string_val: "submarine"
        string_val: "verona"
        string_val: "timbers"
        string_val: "butter"
        string_val: "sammy"
        string_val: "hagar"
        string_val: "jackals"
        string_val: "dharma"
        string_val: "manuelita"
        string_val: "tortuga"
        string_val: "nuestros"
        string_val: "operace"
        string_val: "hayden"
        string_val: "row"
        string_val: "suns"
        string_val: "wxhexeditor"
        string_val: "wells"
        string_val: "sur"
        string_val: "soultaker"
        string_val: "scream"
        string_val: "meek"
        string_val: "peaches"
        string_val: "trance"
        string_val: "157"
        string_val: "riverside"
        string_val: "avenue"
        string_val: "lepond"
        string_val: "bliss"
        string_val: "53rd"
        string_val: "testifying"
        string_val: "donna"
        string_val: "yonder"
        string_val: "orleans"
        string_val: "matriarchal"
        string_val: "prehistory"
        string_val: "totowa"
        string_val: "gateway"
        string_val: "porcupine"
        string_val: "mercy"
        string_val: "hype"
        string_val: "introducing"
        string_val: "rahman"
        string_val: "turbonegro"
        string_val: "located"
        string_val: "tracy"
        string_val: "gas"
        string_val: "misterioso"
        string_val: "breakheart"
        string_val: "cash"
        string_val: "mastermind"
        string_val: "mirage"
        string_val: "christopher"
        string_val: "lawrence"
        string_val: "joshua"
        string_val: "radin"
        string_val: "louder"
        string_val: "bombs"
        string_val: "autry"
        string_val: "inman"
        string_val: "mogis"
        string_val: "mtv"
        string_val: "uncensored"
        string_val: "revolution"
        string_val: "its"
        string_val: "writing"
        string_val: "cochrane"
        string_val: "ventura"
        string_val: "rom"
        string_val: "shi"
        string_val: "xin"
        string_val: "hui"
        string_val: "leann"
        string_val: "rimes"
        string_val: "restaurnt"
        string_val: "wants"
        string_val: "yogurt"
        string_val: "goldy"
        string_val: "mcjohn"
        string_val: "wilderville"
        string_val: "argumentative"
        string_val: "citadel"
        string_val: "pendleton"
        string_val: "actress"
        string_val: "newest"
        string_val: "cham"
        string_val: "nightmute"
        string_val: "lima"
        string_val: "dermatology"
        string_val: "conker"
        string_val: "reloaded"
        string_val: "flipper"
        string_val: "falmouth"
        string_val: "inconfundible"
        string_val: "dishes"
        string_val: "santana"
        string_val: "performs"
        string_val: "leaves"
        string_val: "steampunk"
        string_val: "job"
        string_val: "inversion"
        string_val: "benkelman"
        string_val: "adele"
        string_val: "chorus"
        string_val: "diwali"
        string_val: "lionheart"
        string_val: "rebellion"
        string_val: "bleed"
        string_val: "hocus"
        string_val: "bogus"
        string_val: "kulpsville"
        string_val: "floating"
        string_val: "downtempo"
        string_val: "atlantic"
        string_val: "ethiopian"
        string_val: "kitchener"
        string_val: "soudan"
        string_val: "pickens"
        string_val: "lie"
        string_val: "maximum"
        string_val: "nautch"
        string_val: "runaljod"
        string_val: "gap"
        string_val: "var"
        string_val: "ginnunga"
        string_val: "sushis"
        string_val: "biscay"
        string_val: "betrayer"
        string_val: "forth"
        string_val: "kepler"
        string_val: "workflow"
        string_val: "however"
        string_val: "cavour"
        string_val: "paint"
        string_val: "masterpiece"
        string_val: "tapper"
        string_val: "zukie"
        string_val: "geriatric"
        string_val: "psychiatry"
        string_val: "neurology"
        string_val: "34"
        string_val: "squire"
        string_val: "join"
        string_val: "dots"
        string_val: "sides"
        string_val: "rarities"
        string_val: "highland"
        string_val: "beechman"
        string_val: "utah"
        string_val: "mob"
        string_val: "darkworld"
        string_val: "willows"
        string_val: "sisterhood"
        string_val: "grows"
        string_val: "raphael"
        string_val: "rabello"
        string_val: "fantastic"
        string_val: "melbourne"
        string_val: "achilles"
        string_val: "tortoise"
        string_val: "conrey"
        string_val: "rank"
        string_val: "vertexguy"
        string_val: "champ"
        string_val: "boxing"
        string_val: "graphics"
        string_val: "animation"
        string_val: "knew"
        string_val: "shiva"
        string_val: "option"
        string_val: "cupcakes"
        string_val: "hull"
        string_val: "mom"
        string_val: "asian"
        string_val: "bradford"
        string_val: "kristina"
        string_val: "teresa"
        string_val: "wolfenberger"
        string_val: "socrates"
        string_val: "tanya"
        string_val: "stephens"
        string_val: "35"
        string_val: "1970"
        string_val: "mandela"
        string_val: "authorised"
        string_val: "biography"
        string_val: "totality"
        string_val: "waretown"
        string_val: "matching"
        string_val: "multiversity"
        string_val: "thale"
        string_val: "pataskala"
        string_val: "crepe"
        string_val: "medeiros"
        string_val: "wiseman"
        string_val: "odd"
        string_val: "masayoshi"
        string_val: "fabulosos"
        string_val: "cadillacs"
        string_val: "salemburg"
        string_val: "emerald"
        string_val: "9th"
        string_val: "pinckney"
        string_val: "tightrope"
        string_val: "car\303\241cter"
        string_val: "nao"
        string_val: "kawakita"
        string_val: "sandman"
        string_val: "hears"
        string_val: "lindsey"
        string_val: "cardinale"
        string_val: "incident"
        string_val: "nightdress"
        string_val: "swiss"
        string_val: "natasha"
        string_val: "bettye"
        string_val: "kimberley"
        string_val: "oldfield"
        string_val: "tus"
        string_val: "fiestas"
        string_val: "diners"
        string_val: "allentown"
        string_val: "pennsylvania"
        string_val: "purim"
        string_val: "sp"
        string_val: "balasubrahmanyam"
        string_val: "rockabilly"
        string_val: "mania"
        string_val: "chasity"
        string_val: "irreconcilable"
        string_val: "differences"
        string_val: "resturant"
        string_val: "dates"
        string_val: "rhoads"
        string_val: "nishi"
        string_val: "sonogi"
        string_val: "hant\305\215"
        string_val: "cecil"
        string_val: "womack"
        string_val: "shooter"
        string_val: "jennings"
        string_val: "roel"
        string_val: "velzen"
        string_val: "monk"
        string_val: "tolmatschowa"
        string_val: "schwestern"
        string_val: "steward"
        string_val: "thap"
        string_val: "lan"
        string_val: "matrix"
        string_val: "revolutions"
        string_val: "matlacha"
        string_val: "shelby"
        string_val: "lynne"
        string_val: "pauls"
        string_val: "crossroads"
        string_val: "fun"
        string_val: "costs"
        string_val: "accidents"
        string_val: "patty"
        string_val: "booked"
        string_val: "sandstone"
        string_val: "aruba"
        string_val: "fillmore"
        string_val: "jimmie"
        string_val: "noone"
        string_val: "maison"
        string_val: "parthenais"
        string_val: "perrault"
        string_val: "blyde"
        string_val: "eleanor"
        string_val: "rigby"
        string_val: "amour"
        string_val: "shesher"
        string_val: "kobita"
        string_val: "revisited"
        string_val: "omnipresent"
        string_val: "mentioned"
        string_val: "elephants"
        string_val: "zos"
        string_val: "kia"
        string_val: "cultus"
        string_val: "jetta"
        string_val: "clarke"
        string_val: "reflection"
        string_val: "marcella"
        string_val: "erma"
        string_val: "leanne"
        string_val: "rivera"
        string_val: "sad"
        string_val: "anniston"
        string_val: "manatee"
        string_val: "sardinian"
        string_val: "pidcoke"
        string_val: "sean"
        string_val: "yseult"
        string_val: "kaitlin"
        string_val: "sealy"
        string_val: "trattoria"
        string_val: "stephen"
        string_val: "mcnally"
        string_val: "yellowstone"
        string_val: "fighting"
        string_val: "zombieland"
        string_val: "noct\303\241mbulo"
        string_val: "robotics"
        string_val: "manthra"
        string_val: "mothiram"
        string_val: "boomtown"
        string_val: "mccready"
        string_val: "swagger"
        string_val: "episodi"
        string_val: "bonaventure"
        string_val: "thrones"
        string_val: "jarreau"
        string_val: "baden"
        string_val: "assassination"
        string_val: "jesse"
        string_val: "coward"
        string_val: "2007"
        string_val: "jeffrey"
        string_val: "autobiography"
        string_val: "takei"
        string_val: "hagaman"
        string_val: "looked"
        string_val: "macy"
        string_val: "terrorists"
        string_val: "metalsucks"
        string_val: "roberto"
        string_val: "parra"
        string_val: "elegante"
        string_val: "mew"
        string_val: "creator"
        string_val: "beltsville"
        string_val: "elgin"
        string_val: "schoolhouse"
        string_val: "elsewhere"
        string_val: "begums"
        string_val: "thugs"
        string_val: "mughals"
        string_val: "leap"
        string_val: "taberville"
        string_val: "stairs"
        string_val: "network"
        string_val: "archive"
        string_val: "papa"
        string_val: "bue"
        string_val: "cebu"
        string_val: "bitter"
        string_val: "mouse"
        string_val: "bossa"
        string_val: "samba"
        string_val: "jukebox"
        string_val: "boogie"
        string_val: "singer"
        string_val: "damon"
        string_val: "cubby"
        string_val: "luxor"
        string_val: "tianjin"
        string_val: "orford"
        string_val: "halal"
        string_val: "cult"
        string_val: "intelligence"
        string_val: "cause"
        string_val: "fuca"
        string_val: "fairwood"
        string_val: "francis"
        string_val: "healy"
        string_val: "rockin"
        string_val: "waffle"
        string_val: "karin"
        string_val: "dreijer"
        string_val: "andersson"
        string_val: "feels"
        string_val: "wonder"
        string_val: "freight"
        string_val: "borys"
        string_val: "ljatoschynskyj"
        string_val: "bonga"
        string_val: "preminchi"
        string_val: "choodu"
        string_val: "liberation"
        string_val: "veneto"
        string_val: "antietam"
        string_val: "dressmaker"
        string_val: "commons"
        string_val: "pekin"
        string_val: "bf"
        string_val: "indiahoma"
        string_val: "clutching"
        string_val: "xquery"
        string_val: "api"
        string_val: "java"
        string_val: "smiles"
        string_val: "eviatar"
        string_val: "banai"
        string_val: "tgif"
        string_val: "stobo"
        string_val: "brook"
        string_val: "ihsahn"
        string_val: "closet"
        string_val: "sabah"
        string_val: "accounting"
        string_val: "conan"
        string_val: "dimensional"
        string_val: "sniper"
        string_val: "send"
        string_val: "hewitt"
        string_val: "holtwood"
        string_val: "whaere"
        string_val: "bloody"
        string_val: "koi"
        string_val: "senkyo"
        string_val: "personal"
        string_val: "naughty"
        string_val: "paella"
        string_val: "tanana"
        string_val: "conduct"
        string_val: "unbecoming"
        string_val: "2012"
        string_val: "zwanzig"
        string_val: "zw\303\266lf"
        string_val: "primal"
        string_val: "microphone"
        string_val: "forward"
        string_val: "harlow"
        string_val: "wilcox"
        string_val: "bangers"
        string_val: "genesis"
        string_val: "rhodes"
        string_val: "volubilis"
        string_val: "discografia"
        string_val: "pretty"
        string_val: "reckless"
        string_val: "casualties"
        string_val: "kiribati"
        string_val: "iheartradio"
        string_val: "countdown"
        string_val: "repose"
        string_val: "resort"
        string_val: "haines"
        string_val: "parthenon"
        string_val: "banc"
        string_val: "arguin"
        string_val: "telogia"
        string_val: "nameless"
        string_val: "hollow"
        string_val: "storeys"
        string_val: "shannon"
        string_val: "hardcover"
        string_val: "intangibles"
        string_val: "leadership"
        string_val: "ifind"
        string_val: "recorder"
        string_val: "randsell"
        string_val: "twentynine"
        string_val: "palms"
        string_val: "gideon"
        string_val: "mack"
        string_val: "ichiby\305\215goto"
        string_val: "califon"
        string_val: "hornblower"
        string_val: "indies"
        string_val: "airbnb"
        string_val: "egg"
        string_val: "collecting"
        string_val: "northeast"
        string_val: "kenova"
        string_val: "nannie"
        string_val: "ritchey"
        string_val: "moped"
        string_val: "plated"
        string_val: "handlebars"
        string_val: "yard"
        string_val: "hallucinations"
        string_val: "despair"
        string_val: "songz"
        string_val: "spatial"
        string_val: "query"
        string_val: "server"
        string_val: "wholehearted"
        string_val: "fortress"
        string_val: "nicer"
        string_val: "darker"
        string_val: "continue"
        string_val: "asia"
        string_val: "ripley"
        string_val: "affair"
        string_val: "millvale"
        string_val: "chettathi"
        string_val: "vanquished"
        string_val: "hackney"
        string_val: "madlib"
        string_val: "invazion"
        string_val: "prog"
        string_val: "yeoh"
        string_val: "luther"
        string_val: "team"
        string_val: "works"
        string_val: "godmusic"
        string_val: "anti"
        string_val: "scars"
        string_val: "djibouti"
        string_val: "benson"
        string_val: "meditation"
        string_val: "karnataka"
        string_val: "ribbons"
        string_val: "neo"
        string_val: "albertson"
        string_val: "stillest"
        string_val: "pat\303\251"
        string_val: "tisdale"
        string_val: "sawai"
        string_val: "gandharva"
        string_val: "advise"
        string_val: "31"
        string_val: "virginian"
        string_val: "lenzburg"
        string_val: "lorain"
        string_val: "text"
        string_val: "finnish"
        string_val: "grammar"
        string_val: "hooksett"
        string_val: "hive"
        string_val: "propolis"
        string_val: "sail"
        string_val: "steam"
        string_val: "warfare"
        string_val: "aroostook"
        string_val: "bonneville"
        string_val: "bond"
        string_val: "junior"
        string_val: "003\302\275"
        string_val: "petree"
        string_val: "rosanna"
        string_val: "ejercicio"
        string_val: "hess"
        string_val: "toward"
        string_val: "ann"
        string_val: "lists"
        string_val: "sir"
        string_val: "winston"
        string_val: "ono"
        string_val: "lennon"
        string_val: "travelling"
        string_val: "breakers"
        string_val: "freddie"
        string_val: "freeloader"
        string_val: "madness"
        string_val: "saddle"
        string_val: "croquembouche"
        string_val: "amrithavaahini"
        string_val: "dress"
        string_val: "horace"
        string_val: "messengers"
        string_val: "170"
        string_val: "190"
        string_val: "lipstick"
        string_val: "vogue"
        string_val: "lago"
        string_val: "vista"
        string_val: "akers"
        string_val: "phnom"
        string_val: "sankos"
        string_val: "timbo"
        string_val: "warlock"
        string_val: "placers"
        string_val: "boots"
        string_val: "stonewood"
        string_val: "hatfield"
        string_val: "jewish"
        string_val: "community"
        string_val: "luquillo"
        string_val: "arp"
        string_val: "lottery"
        string_val: "halibut"
        string_val: "rail"
        string_val: "caverns"
        string_val: "dodgers"
        string_val: "pan"
        string_val: "reva"
        string_val: "bernadine"
        string_val: "caretaker"
        string_val: "kevin"
        string_val: "cadogan"
        string_val: "ape"
        string_val: "bt"
        string_val: "patricia"
        string_val: "fit"
        string_val: "joad"
        string_val: "beneath"
        string_val: "harvest"
        string_val: "ammonia"
        string_val: "volga"
        string_val: "manufacturing"
        string_val: "consent"
        string_val: "runs"
        string_val: "drawn"
        string_val: "stadium"
        string_val: "1914"
        string_val: "1918"
        string_val: "gift"
        string_val: "fujimoto"
        string_val: "yae"
        string_val: "whatever"
        string_val: "turns"
        string_val: "improvisatore"
        string_val: "spoils"
        string_val: "easel"
        string_val: "pack"
        string_val: "intense"
        string_val: "studying"
        string_val: "maritime"
        string_val: "status"
        string_val: "quo"
        string_val: "28th"
        string_val: "seagraves"
        string_val: "midfield"
        string_val: "scarab"
        string_val: "murder"
        string_val: "cinderella"
        string_val: "demolished"
        string_val: "border"
        string_val: "laying"
        string_val: "lohan"
        string_val: "yang"
        string_val: "seok"
        string_val: "laid"
        string_val: "ashland"
        string_val: "springside"
        string_val: "jalal"
        string_val: "zolfonun"
        string_val: "tashan"
        string_val: "dorrsett"
        string_val: "horseshoe"
        string_val: "cropper"
        string_val: "eurythmics"
        string_val: "pinson"
        string_val: "sankertown"
        string_val: "jeeves"
        string_val: "wooster"
        string_val: "nonsense"
        string_val: "starlight"
        string_val: "leonor"
        string_val: "mendoza"
        string_val: "imogene"
        string_val: "sanchez"
        string_val: "toll"
        string_val: "lenin"
        string_val: "rhett"
        string_val: "oaklawn"
        string_val: "pilar"
        string_val: "skip"
        string_val: "johansen"
        string_val: "lamb"
        string_val: "giaour"
        string_val: "mastery"
        string_val: "asiate"
        string_val: "sturgeon"
        string_val: "phineas"
        string_val: "redux"
        string_val: "dalles"
        string_val: "kathleen"
        string_val: "brianna"
        string_val: "halsey"
        string_val: "disorderly"
        string_val: "patrol"
        string_val: "vietnam"
        string_val: "fern"
        string_val: "mailman"
        string_val: "lomax"
        string_val: "s\303\243o"
        string_val: "tom\303\251"
        string_val: "pr\303\255ncipe"
        string_val: "gipsy"
        string_val: "gordon"
        string_val: "wildland"
        string_val: "appalachian"
        string_val: "rajinikanth"
        string_val: "definitive"
        string_val: "indicate"
        string_val: "garfunkel"
        string_val: "forgetting"
        string_val: "sai"
        string_val: "thong"
        string_val: "59"
        string_val: "ingenuity"
        string_val: "doughnut"
        string_val: "gladness"
        string_val: "sacrifice"
        string_val: "okay"
        string_val: "luzon"
        string_val: "entry"
        string_val: "beau"
        string_val: "sapin"
        string_val: "lela"
        string_val: "tar"
        string_val: "midwest"
        string_val: "childhood"
        string_val: "cj"
        string_val: "snare"
        string_val: "joanna"
        string_val: "denationalization"
        string_val: "money"
        string_val: "luckiest"
        string_val: "skycity"
        string_val: "salado"
        string_val: "manassa"
        string_val: "falcon"
        string_val: "ohio"
        string_val: "mediod\303\255a"
        string_val: "ac\303\272stico"
        string_val: "positively"
        string_val: "natchaug"
        string_val: "compleat"
        string_val: "housewife"
        string_val: "extremely"
        string_val: "switzerland"
        string_val: "englishman"
        string_val: "primate"
        string_val: "rambow"
        string_val: "fools"
        string_val: "aprite"
        string_val: "finestre"
        string_val: "sonic"
        string_val: "triple"
        string_val: "lille"
        string_val: "switching"
        string_val: "channels"
        string_val: "toi"
        string_val: "sirusho"
        string_val: "notasulga"
        string_val: "omoide"
        string_val: "okkusenman"
        string_val: "khlong"
        string_val: "phraya"
        string_val: "huxley"
        string_val: "tami"
        string_val: "bowman"
        string_val: "czechia"
        string_val: "reach"
        string_val: "bonaparte"
        string_val: "chief"
        string_val: "cook"
        string_val: "clooney"
        string_val: "morris"
        string_val: "restasurant"
        string_val: "pohick"
        string_val: "shed"
        string_val: "tingley"
        string_val: "agnew"
        string_val: "guenther"
        string_val: "waddy"
        string_val: "ramos"
        string_val: "janice"
        string_val: "gonzales"
        string_val: "crucial"
        string_val: "rockholds"
        string_val: "norfolk"
        string_val: "bless"
        string_val: "torn"
        string_val: "emptiness"
        string_val: "clubbing"
        string_val: "beside"
        string_val: "lawns"
        string_val: "childersburg"
        string_val: "raleigh"
        string_val: "boners"
        string_val: "submerged"
        string_val: "fake"
        string_val: "vacation"
        string_val: "petrov"
        string_val: "vasechkin"
        string_val: "kaaawa"
        string_val: "cumberland"
        string_val: "chickens"
        string_val: "ren"
        string_val: "gamaliel"
        string_val: "lodi"
        string_val: "jarvis"
        string_val: "cocker"
        string_val: "seward"
        string_val: "shabbona"
        string_val: "marianne"
        string_val: "faithfull"
        string_val: "letty"
        string_val: "cardin"
        string_val: "southtown"
        string_val: "accused"
        string_val: "addicted"
        string_val: "stationery"
        string_val: "thicket"
        string_val: "otho"
        string_val: "tube"
        string_val: "gradyville"
        string_val: "glenarden"
        string_val: "wyomissing"
        string_val: "limey"
        string_val: "dedicated"
        string_val: "26th"
        string_val: "trentwood"
        string_val: "iemand"
        string_val: "jij"
        string_val: "exell"
        string_val: "borrow"
        string_val: "fencing"
        string_val: "itsu"
        string_val: "ida"
        string_val: "etta"
        string_val: "limited"
        string_val: "annunciation"
        string_val: "elf"
        string_val: "dictionary"
        string_val: "language"
        string_val: "maxine"
        string_val: "nightingale"
        string_val: "ajoy"
        string_val: "chakrabarty"
        string_val: "blocher"
        string_val: "tobias"
        string_val: "sammet"
        string_val: "stray"
        string_val: "jumbo"
        string_val: "frescura"
        string_val: "selmont"
        string_val: "baseball"
        string_val: "argentinian"
        string_val: "iberville"
        string_val: "wagram"
        string_val: "eucalyptus"
        string_val: "fool"
        string_val: "selling"
        string_val: "sims"
        string_val: "interesting"
        string_val: "success"
        string_val: "ristigouche"
        string_val: "ecological"
        string_val: "jingle"
        string_val: "jillian"
        string_val: "shubuta"
        string_val: "rakuen"
        string_val: "tsuihou"
        string_val: "edgemoor"
        string_val: "hermaphrodite"
        string_val: "transcending"
        string_val: "orbison"
        string_val: "georgina"
        string_val: "sight"
        string_val: "barnum"
        string_val: "twin"
        string_val: "peaks"
        string_val: "corpus"
        string_val: "metamora"
        string_val: "author"
        string_val: "tbe"
        string_val: "federico"
        string_val: "albert"
        string_val: "doggy"
        string_val: "yankee"
        string_val: "doodle"
        string_val: "shop"
        string_val: "rear"
        string_val: "morrow"
        string_val: "putrefactive"
        string_val: "infestation"
        string_val: "americans"
        string_val: "doch\305\253"
        string_val: "k\305\215tsu"
        string_val: "emmy"
        string_val: "rossum"
        string_val: "valenciano"
        string_val: "transformers"
        string_val: "generations"
        string_val: "morocco"
        string_val: "guanica"
        string_val: "elkie"
        string_val: "brooks"
        string_val: "museum"
        string_val: "sports"
        string_val: "missing"
        string_val: "clerk"
        string_val: "mozambique"
        string_val: "bettles"
        string_val: "cartel"
        string_val: "maisonette"
        string_val: "ziwa"
        string_val: "rhino"
        string_val: "manassas"
        string_val: "plain"
        string_val: "nepal"
        string_val: "kalkaska"
        string_val: "jon"
        string_val: "mclaughlin"
        string_val: "enduser"
        string_val: "horn"
        string_val: "pelahatchie"
        string_val: "nusic"
        string_val: "tron"
        string_val: "reconfigured"
        string_val: "crush"
        string_val: "blush"
        string_val: "manorama"
        string_val: "feet"
        string_val: "discipline"
        string_val: "stronda"
        string_val: "stain"
        string_val: "bearsville"
        string_val: "kamil"
        string_val: "rustam"
        string_val: "xenomania"
        string_val: "dominican"
        string_val: "manhunt"
        string_val: "lbc"
        string_val: "argentino"
        string_val: "jacksonville"
        string_val: "progress"
        string_val: "leeuwen"
        string_val: "louella"
        string_val: "henlopen"
        string_val: "acres"
        string_val: "ledger"
        string_val: "sergeants"
        string_val: "nicole"
        string_val: "mitchell"
        string_val: "revived"
        string_val: "railroad"
        string_val: "depot"
        string_val: "singapore"
        string_val: "rodriguez"
        string_val: "lila"
        string_val: "reyes"
        string_val: "ruby"
        string_val: "whitewood"
        string_val: "lavina"
        string_val: "ottoville"
        string_val: "mothstorm"
        string_val: "firepower"
        string_val: "whiskey"
        string_val: "elvira"
        string_val: "jasmine"
        string_val: "leta"
        string_val: "pay"
        string_val: "dvd"
        string_val: "arcadian"
        string_val: "details"
        string_val: "cinnaminson"
        string_val: "messed"
        string_val: "moto"
        string_val: "voyages"
        string_val: "accident"
        string_val: "analysis"
        string_val: "prevention"
        string_val: "72nd"
        string_val: "glenda"
        string_val: "lois"
        string_val: "nikki"
        string_val: "keene"
        string_val: "ballroom"
        string_val: "trapeo"
        string_val: "skystone"
        string_val: "honey"
        string_val: "hush"
        string_val: "60s"
        string_val: "wight"
        string_val: "rayvon"
        string_val: "engelchen"
        string_val: "hominids"
        string_val: "neil"
        string_val: "even"
        string_val: "serpents"
        string_val: "syrup"
        string_val: "watsons"
        string_val: "insurrection"
        string_val: "fell"
        string_val: "wentworth"
        string_val: "companion"
        string_val: "appeal"
        string_val: "whigs"
        string_val: "nib"
        string_val: "fay"
        string_val: "expendables"
        string_val: "ahead"
        string_val: "blowfly"
        string_val: "schubert"
        string_val: "courtney"
        string_val: "criminal"
        string_val: "criminology"
        string_val: "inform"
        string_val: "abdication"
        string_val: "wide"
        string_val: "eyed"
        string_val: "ignorant"
        string_val: "front"
        string_val: "page"
        string_val: "cistern"
        string_val: "safe"
        string_val: "heads"
        string_val: "ringin"
        string_val: "mezzes"
        string_val: "cobain"
        string_val: "vikki"
        string_val: "thorn"
        string_val: "legendary"
        string_val: "solos"
        string_val: "fins"
        string_val: "23rd"
        string_val: "edna"
        string_val: "alyson"
        string_val: "hitchcock"
        string_val: "dayne"
        string_val: "lagaylia"
        string_val: "frazier"
        string_val: "since"
        string_val: "daedelus"
        string_val: "lazy"
        string_val: "beverley"
        string_val: "less"
        string_val: "candles"
        string_val: "southwest"
        string_val: "riders"
        string_val: "shaolin"
        string_val: "temple"
        string_val: "palmer"
        string_val: "mancos"
        string_val: "hinckley"
        string_val: "piety"
        string_val: "88th"
        string_val: "boyd"
        string_val: "bothwell"
        string_val: "lodge"
        string_val: "principle"
        string_val: "hope"
        string_val: "cantautor"
        string_val: "sardis"
        string_val: "cabin"
        string_val: "disney"
        string_val: "nauseam"
        string_val: "ultima"
        string_val: "false"
        string_val: "prophet"
        string_val: "extraordinary"
        string_val: "pointe"
        string_val: "atrocity"
        string_val: "exhibition"
        string_val: "wintersong"
        string_val: "lego"
        string_val: "clone"
        string_val: "quantity"
        string_val: "insanity"
        string_val: "regis"
        string_val: "163"
        string_val: "suthep"
        string_val: "pui"
        string_val: "mothers"
        string_val: "thorns"
        string_val: "pontypool"
        string_val: "changes"
        string_val: "bagels"
        string_val: "milton"
        string_val: "freewater"
        string_val: "toms"
        string_val: "rmx"
        string_val: "ayu"
        string_val: "judy"
        string_val: "sophisticated"
        string_val: "rapid"
        string_val: "muscle"
        string_val: "car"
        string_val: "daring"
        string_val: "dobermans"
        string_val: "phrazes"
        string_val: "kenedy"
        string_val: "nazad"
        string_val: "kalino"
        string_val: "mome"
        string_val: "plkaying"
        string_val: "lovesong"
        string_val: "bellechester"
        string_val: "korra"
        string_val: "coordinates"
        string_val: "bass"
        string_val: "eather"
        string_val: "twins"
        string_val: "luray"
        string_val: "spirits"
        string_val: "sh\305\215nen"
        string_val: "toppa"
        string_val: "bashin"
        string_val: "brookneal"
        string_val: "waffles"
        string_val: "divorced"
        string_val: "mars"
        string_val: "2112"
        string_val: "rwanda"
        string_val: "date"
        string_val: "vegetarian"
        string_val: "leong"
        string_val: "desylva"
        string_val: "balvin"
        string_val: "edward"
        string_val: "ryerson"
        string_val: "chamillionaire"
        string_val: "lina"
        string_val: "screaming"
        string_val: "staircase"
        string_val: "beware"
        string_val: "blob"
        string_val: "toy"
        string_val: "marcial"
        string_val: "appleby"
        string_val: "infernal"
        string_val: "devices"
        string_val: "manuela"
        string_val: "yvonne"
        string_val: "police"
        string_val: "supercop"
        string_val: "2120"
        string_val: "foghat"
        string_val: "parkers"
        string_val: "salads"
        string_val: "ths"
        string_val: "steady"
        string_val: "cover"
        string_val: "moonlight"
        string_val: "emida"
        string_val: "measuring"
        string_val: "posiabble"
        string_val: "brush"
        string_val: "brand"
        string_val: "tobymac"
        string_val: "amenia"
        string_val: "memory"
        string_val: "labor"
        string_val: "notes"
        string_val: "mode"
        string_val: "divided"
        string_val: "digging"
        string_val: "lankan"
        string_val: "tues"
        string_val: "meers"
        string_val: "weed"
        string_val: "colleague"
        string_val: "owings"
        string_val: "vallecito"
        string_val: "fairview"
        string_val: "consequences"
        string_val: "sos"
        string_val: "minestra"
        string_val: "flying"
        string_val: "mauritius"
        string_val: "135th"
        string_val: "maylay"
        string_val: "garry"
        string_val: "shider"
        string_val: "stefanie"
        string_val: "putting"
        string_val: "trigorin"
        string_val: "eulogy"
        string_val: "ledbury"
        string_val: "colt"
        string_val: "winchester"
        string_val: "jewel"
        string_val: "ringgold"
        string_val: "bronislau"
        string_val: "kaper"
        string_val: "danni"
        string_val: "bassan"
        string_val: "wakelin"
        string_val: "lis"
        string_val: "constructs"
        string_val: "juliana"
        string_val: "grigorjewna"
        string_val: "semenowitsch"
        string_val: "hows"
        string_val: "kendall"
        string_val: "utamaro"
        string_val: "freshwater"
        string_val: "beardslee"
        string_val: "lesley"
        string_val: "patriot"
        string_val: "pembina"
        string_val: "gorge"
        string_val: "cairngorms"
        string_val: "keine"
        string_val: "grenzen"
        string_val: "alain"
        string_val: "caron"
        string_val: "snapfinger"
        string_val: "romantic"
        string_val: "fascility"
        string_val: "liberia"
        string_val: "pheba"
        string_val: "banquet"
        string_val: "damned"
        string_val: "hellacopters"
        string_val: "lowden"
        string_val: "tango"
        string_val: "walnut"
        string_val: "creamed"
        string_val: "eggs"
        string_val: "toast"
        string_val: "territory"
        string_val: "bed"
        string_val: "denial"
        string_val: "unnikrishnante"
        string_val: "adyathe"
        string_val: "gulfport"
        string_val: "glarus"
        string_val: "thorogood"
        string_val: "structured"
        string_val: "fax"
        string_val: "file"
        string_val: "kettleman"
        string_val: "barclays"
        string_val: "ctr"
        string_val: "beatles"
        string_val: "gearhart"
        string_val: "tortelloni"
        string_val: "handicap"
        string_val: "sparrow"
        string_val: "gurabo"
        string_val: "velma"
        string_val: "gloria"
        string_val: "gazer"
        string_val: "suus"
        string_val: "tuolumne"
        string_val: "dickey"
        string_val: "betts"
        string_val: "eudaemonic"
        string_val: "mcguinness"
        string_val: "kibum"
        string_val: "blink"
        string_val: "thick"
        string_val: "dorothy"
        string_val: "oz"
        string_val: "iranian"
        string_val: "systems"
        string_val: "scribblings"
        string_val: "duck"
        string_val: "circleville"
        string_val: "shingleton"
        string_val: "kiahsville"
        string_val: "berkley"
        string_val: "gone"
        string_val: "encino"
        string_val: "meatcake"
        string_val: "glenn"
        string_val: "gould"
        string_val: "beyblade"
        string_val: "fierce"
        string_val: "lakeview"
        string_val: "greenback"
        string_val: "gasconade"
        string_val: "cherwell"
        string_val: "boathouse"
        string_val: "breckenridge"
        string_val: "lamp"
        string_val: "crocker"
        string_val: "fires"
        string_val: "azeroth"
        string_val: "heartbeat"
        string_val: "amir"
        string_val: "marche"
        string_val: "rogue"
        string_val: "coin"
        string_val: "malcolm"
        string_val: "emile"
        string_val: "unlimited"
        string_val: "shrunk"
        string_val: "aliens"
        string_val: "leo"
        string_val: "brookwood"
        string_val: "critical"
        string_val: "everybody"
        string_val: "bio"
        string_val: "onward"
        string_val: "quantum"
        string_val: "discontinuity"
        string_val: "input"
        string_val: "mint"
        string_val: "punjabi"
        string_val: "vilma"
        string_val: "neon"
        string_val: "maltby"
        string_val: "forks"
        string_val: "gregg"
        string_val: "bissonette"
        string_val: "cova"
        string_val: "frisco"
        string_val: "therese"
        string_val: "b\303\242ton"
        string_val: "trancers"
        string_val: "liked"
        string_val: "ports"
        string_val: "snows"
        string_val: "kilimanjaro"
        string_val: "belongs"
        string_val: "inning"
        string_val: "cole"
        string_val: "spooky"
        string_val: "sierraville"
        string_val: "leah"
        string_val: "kauffman"
        string_val: "pioneer"
        string_val: "vicky"
        string_val: "leandros"
        string_val: "vera"
        string_val: "session"
        string_val: "athol"
        string_val: "spine"
        string_val: "surfs"
        string_val: "hash"
        string_val: "basaseachic"
        string_val: "seychelles"
        string_val: "seattle"
        string_val: "slovenia"
        string_val: "ufo"
        string_val: "senshi"
        string_val: "dai"
        string_val: "apolon"
        string_val: "knockabout"
        string_val: "tofy"
        string_val: "mansfield"
        string_val: "rogers"
        string_val: "eim"
        string_val: "suitable"
        string_val: "kate"
        string_val: "leopold"
        string_val: "stalinism"
        string_val: "bohemia"
        string_val: "fettucine"
        string_val: "solutions"
        string_val: "intimidators"
        string_val: "selmer"
        string_val: "accesss"
        string_val: "tullytown"
        string_val: "pledge"
        string_val: "allegiance"
        string_val: "grind"
        string_val: "sinfon\303\255a"
        string_val: "digimon"
        string_val: "dune"
        string_val: "bunker"
        string_val: "sp\303\244tzle"
        string_val: "monaco"
        string_val: "keltech"
        string_val: "myin"
        string_val: "thit"
        string_val: "farnworth"
        string_val: "collectors"
        string_val: "tarte"
        string_val: "ye"
        string_val: "agincourt"
        string_val: "roseburg"
        string_val: "trina"
        string_val: "latoya"
        string_val: "mustard"
        string_val: "agate"
        string_val: "zenith"
        string_val: "wynter"
        string_val: "tessa"
        string_val: "gilluly"
        string_val: "olivor"
        string_val: "waterscapes"
        string_val: "horton"
        string_val: "kwuggerbug"
        string_val: "highest"
        string_val: "arkport"
        string_val: "wins"
        string_val: "annihilated"
        string_val: "lied"
        string_val: "raney"
        string_val: "kudai"
        string_val: "hood"
        string_val: "katherine"
        string_val: "nimble"
        string_val: "bombastic"
        string_val: "listings"
        string_val: "slap"
        string_val: "addition"
        string_val: "enjoy"
        string_val: "barre"
        string_val: "unreachable"
        string_val: "lou"
        string_val: "raining"
        string_val: "ion"
        string_val: "gobles"
        string_val: "burn"
        string_val: "inez"
        string_val: "hollows"
        string_val: "rosie"
        string_val: "tatin"
        string_val: "getzville"
        string_val: "jacksboro"
        string_val: "warhead"
        string_val: "boca"
        string_val: "raton"
        string_val: "grecian"
        string_val: "violet"
        string_val: "dachigam"
        string_val: "profile"
        string_val: "bslade"
        string_val: "graniteville"
        string_val: "snares"
        string_val: "lacy"
        string_val: "ah"
        string_val: "trenton"
        string_val: "molecular"
        string_val: "gastronomy"
        string_val: "7even"
        string_val: "pleasant"
        string_val: "satan"
        string_val: "praise"
        string_val: "brochure"
        string_val: "soil"
        string_val: "fairness"
        string_val: "wartime"
        string_val: "ferrer"
        string_val: "millay"
        string_val: "keller"
        string_val: "exile"
        string_val: "yo"
        string_val: "playlis"
        string_val: "whispering"
        string_val: "observations"
        string_val: "toaster"
        string_val: "rescue"
        string_val: "decoded"
        string_val: "craters"
        string_val: "sac"
        string_val: "florewood"
        string_val: "conehatta"
        string_val: "tanisha"
        string_val: "lorena"
        string_val: "minutos"
        string_val: "descendants"
        string_val: "somesville"
        string_val: "bhutto"
        string_val: "mausoleum"
        string_val: "wrightstown"
        string_val: "karol"
        string_val: "pope"
        string_val: "script"
        string_val: "ragged"
        string_val: "curtain"
        string_val: "vortex"
        string_val: "meadowood"
        string_val: "henniker"
        string_val: "dodge"
        string_val: "fred"
        string_val: "katz"
        string_val: "dahmer"
        string_val: "ocilla"
        string_val: "gretchen"
        string_val: "trisha"
        string_val: "amber"
        string_val: "dish"
        string_val: "diego"
        string_val: "sheriff"
        string_val: "tombstone"
        string_val: "tia"
        string_val: "estela"
        string_val: "anguilla"
        string_val: "tailspin"
        string_val: "tommy"
        string_val: "perfume"
        string_val: "murderer"
        string_val: "swarna"
        string_val: "trishna"
        string_val: "playinh"
        string_val: "redington"
        string_val: "slaughter"
        string_val: "lanes"
        string_val: "construction"
        string_val: "committee"
        string_val: "tommie"
        string_val: "irvine"
        string_val: "cathedral"
        string_val: "oreo"
        string_val: "coersion"
        string_val: "guard"
        string_val: "teaching"
        string_val: "conflicts"
        string_val: "coteau"
        string_val: "decoration"
        string_val: "houses"
        string_val: "ringlestone"
        string_val: "lyons"
        string_val: "ferry"
        string_val: "arnett"
        string_val: "jil"
        string_val: "cove"
        string_val: "rites"
        string_val: "jerry"
        string_val: "learning"
        string_val: "willy"
        string_val: "wonka"
        string_val: "roeland"
        string_val: "citizen"
        string_val: "rafet"
        string_val: "aspinwall"
        string_val: "sixty"
        string_val: "cusinie"
        string_val: "dalcour"
        string_val: "shiralee"
        string_val: "glam"
        string_val: "gertrude"
        string_val: "beroun"
        string_val: "wooly"
        string_val: "doc"
        string_val: "bronze"
        string_val: "convicted"
        string_val: "careful"
        string_val: "renee"
        string_val: "lenexa"
        string_val: "grab"
        string_val: "crossfit"
        string_val: "latham"
        string_val: "diaries"
        string_val: "sonntagskind"
        string_val: "tukaram"
        string_val: "harbour"
        string_val: "debtors"
        string_val: "murone"
        string_val: "k\305\215gen"
        string_val: "sistersville"
        string_val: "enter"
        string_val: "districts"
        string_val: "samuel"
        string_val: "tyne"
        string_val: "serenata"
        string_val: "massive"
        string_val: "soca"
        string_val: "dry"
        string_val: "prong"
        string_val: "tire"
        string_val: "pinguicula"
        string_val: "newsletter"
        string_val: "1974"
        string_val: "workplace"
        string_val: "kackley"
        string_val: "laverne"
        string_val: "offerman"
        string_val: "racketeers"
        string_val: "rule"
        string_val: "revoluci\303\263n"
        string_val: "hangtown"
        string_val: "jagual"
        string_val: "apache"
        string_val: "lyncourt"
        string_val: "trentino"
        string_val: "129"
        string_val: "screening"
        string_val: "mercenary"
        string_val: "blogbridge"
        string_val: "glacier"
        string_val: "berryessa"
        string_val: "leven"
        string_val: "thumps"
        string_val: "foo"
        string_val: "cliffwood"
        string_val: "alot"
        string_val: "geek"
        string_val: "chic"
        string_val: "wadsworth"
        string_val: "hemanta"
        string_val: "kumar"
        string_val: "mukhopadhyay"
        string_val: "heard"
        string_val: "wideacre"
        string_val: "coalton"
        string_val: "salmon"
        string_val: "kettle"
        string_val: "woodruff"
        string_val: "guests"
        string_val: "waverly"
        string_val: "definitely"
        string_val: "spotted"
        string_val: "nhl"
        string_val: "emperors"
        string_val: "thyatis"
        string_val: "alphatia"
        string_val: "mine"
        string_val: "payne"
        string_val: "brandy"
        string_val: "tyresta"
        string_val: "dynasties"
        string_val: "moby"
        string_val: "grape"
        string_val: "tapes"
        string_val: "spyro"
        string_val: "maisry"
        string_val: "baroque"
        string_val: "wheel"
        string_val: "caught"
        string_val: "mopreme"
        string_val: "shakur"
        string_val: "warpaint"
        string_val: "genocide"
        string_val: "quotations"
        string_val: "chairman"
        string_val: "mao"
        string_val: "tse"
        string_val: "tung"
        string_val: "humphrey"
        string_val: "groundhog"
        string_val: "beaman"
        string_val: "pulsions"
        string_val: "virtue"
        string_val: "psychopathic"
        string_val: "sentimental"
        string_val: "bloke"
        string_val: "165"
        string_val: "nairobi"
        string_val: "paragraphe"
        string_val: "nordland"
        string_val: "kirsten"
        string_val: "retrowave"
        string_val: "outrun"
        string_val: "champion"
        string_val: "fries"
        string_val: "nisswa"
        string_val: "later"
        string_val: "cohen"
        string_val: "lateness"
        string_val: "challenges"
        string_val: "neshanic"
        string_val: "station"
        string_val: "kremmling"
        string_val: "vice"
        string_val: "distrowatch"
        string_val: "hofer"
        string_val: "chipmunk"
        string_val: "conquest"
        string_val: "hey"
        string_val: "waking"
        string_val: "savannah"
        string_val: "lauderdale"
        string_val: "amal"
        string_val: "hijazi"
        string_val: "elsa"
        string_val: "westhampton"
        string_val: "ankimo"
        string_val: "generaci\303\263n"
        string_val: "rbd"
        string_val: "vivo"
        string_val: "pho"
        string_val: "christy"
        string_val: "louise"
        string_val: "likely"
        string_val: "pilot"
        string_val: "downward"
        string_val: "seal"
        string_val: "glaring"
        string_val: "oblivion"
        string_val: "pauline"
        string_val: "aioli"
        string_val: "malaysian"
        string_val: "reaches"
        string_val: "scription"
        string_val: "data"
        string_val: "prescription"
        string_val: "frozen"
        string_val: "mondovi"
        string_val: "rogues"
        string_val: "easy"
        string_val: "turtle"
        string_val: "noel"
        string_val: "linnane"
        string_val: "buffy"
        string_val: "singstar"
        string_val: "bengali"
        string_val: "gnocchi"
        string_val: "owenyo"
        string_val: "burgh"
        string_val: "melancholia"
        string_val: "arcims"
        string_val: "der"
        string_val: "und"
        string_val: "kalypso"
        string_val: "aus"
        string_val: "wien"
        string_val: "vonda"
        string_val: "opium"
        string_val: "momy"
        string_val: "flossmoor"
        string_val: "raisins"
        string_val: "secs"
        string_val: "et"
        string_val: "amandes"
        string_val: "cherie"
        string_val: "josephine"
        string_val: "heston"
        string_val: "blumenthal"
        string_val: "montgomery"
        string_val: "infantil"
        string_val: "crossgenesis"
        string_val: "photoscape"
        string_val: "jebel"
        string_val: "takahito"
        string_val: "eguchi"
        string_val: "ojuelegba"
        string_val: "ritmos"
        string_val: "trivial"
        string_val: "ramy"
        string_val: "ayach"
        string_val: "sutphin"
        string_val: "blvd"
        string_val: "origin"
        string_val: "milky"
        string_val: "resevation"
        string_val: "restaraunt"
        string_val: "ralls"
        string_val: "whittier"
        string_val: "indigenous"
        string_val: "capital"
        string_val: "supply"
        string_val: "killers"
        string_val: "blackman"
        string_val: "frederick"
        string_val: "pepperoni"
        string_val: "hagerman"
        string_val: "radhae"
        string_val: "unakku"
        string_val: "kobam"
        string_val: "aagathadi"
        string_val: "cineexport"
        string_val: "potter"
        string_val: "philosopher"
        string_val: "geneva"
        string_val: "blacksville"
        string_val: "sheri"
        string_val: "bonnaroo"
        string_val: "cazenovia"
        string_val: "hook"
        string_val: "orchestrion"
        string_val: "97"
        string_val: "reckoning"
        string_val: "giodi"
        string_val: "piper"
        string_val: "abel"
        string_val: "s\303\241nchez"
        string_val: "clint"
        string_val: "mansell"
        string_val: "hate"
        string_val: "myself"
        string_val: "peacefulness"
        string_val: "mowrystown"
        string_val: "rev"
        string_val: "raptor"
        string_val: "ettrick"
        string_val: "tehama"
        string_val: "marty"
        string_val: "slovakia"
        string_val: "madchild"
        string_val: "canci\303\263n"
        string_val: "d\303\255a"
        string_val: "simply"
        string_val: "diabolico"
        string_val: "barbiere"
        string_val: "fleet"
        string_val: "cities"
        string_val: "martine"
        string_val: "mccutcheon"
        string_val: "jazzmasters"
        string_val: "cuisines"
        string_val: "irritating"
        string_val: "device"
        string_val: "cochran"
        string_val: "rollerdisco"
        string_val: "playstation\345\256\230\346\226\271\346\235\202\345\277\227"
        string_val: "fingers"
        string_val: "thacker"
        string_val: "zion"
        string_val: "golan"
        string_val: "chemdex"
        string_val: "com"
        string_val: "narew"
        string_val: "bouch\303\251e"
        string_val: "broadcast"
        string_val: "1938"
        string_val: "unseen"
        string_val: "ilse"
        string_val: "delange"
        string_val: "comprehensive"
        string_val: "orson"
        string_val: "ganges"
        string_val: "frankfort"
        string_val: "robertson"
        string_val: "hungary"
        string_val: "chestnut"
        string_val: "mare"
        string_val: "uses"
        string_val: "suryavanshi"
        string_val: "impressions"
        string_val: "spaulding"
        string_val: "expect"
        string_val: "nellieburg"
        string_val: "maki"
        string_val: "ohguro"
        string_val: "completely"
        string_val: "monro"
        string_val: "theology"
        string_val: "rite"
        string_val: "parts"
        string_val: "honourable"
        string_val: "thesis"
        string_val: "glace"
        string_val: "atmosphere"
        string_val: "whaling"
        string_val: "po"
        string_val: "tofu"
        string_val: "moldova"
        string_val: "mel"
        string_val: "draisey"
        string_val: "tomy"
        string_val: "mindy"
        string_val: "li\303\251geois"
        string_val: "assumption"
        string_val: "bilal"
        string_val: "fragile"
        string_val: "mumbai"
        string_val: "attacks"
        string_val: "actrices"
        string_val: "yma"
        string_val: "sumac"
        string_val: "cricket"
        string_val: "jermaine"
        string_val: "fagan"
        string_val: "kewanee"
        string_val: "donut"
        string_val: "lunchbox"
        string_val: "sorrow"
        string_val: "exorcising"
        string_val: "standard"
        string_val: "afghan"
        string_val: "korona"
        string_val: "ham"
        string_val: "independence"
        string_val: "olivet"
        string_val: "ones"
        string_val: "maze"
        string_val: "eighty"
        string_val: "nudity"
        string_val: "punished"
        string_val: "yacoubian"
        string_val: "choper"
        string_val: "gilson"
        string_val: "crow"
        string_val: "braindead"
        string_val: "megaphone"
        string_val: "pioneers"
        string_val: "danville"
        string_val: "timberville"
        string_val: "jimmy"
        string_val: "panther"
        string_val: "basement"
        string_val: "sahuarita"
        string_val: "denali"
        string_val: "arranged"
        string_val: "marriage"
        string_val: "walla"
        string_val: "bamboccioni"
        string_val: "brookland"
        string_val: "terrace"
        string_val: "elites"
        string_val: "laarni"
        string_val: "lozada"
        string_val: "bowie"
        string_val: "beeb"
        string_val: "nanette"
        string_val: "concise"
        string_val: "treatise"
        string_val: "angling"
        string_val: "dickson"
        string_val: "mccunn"
        string_val: "trilogy"
        string_val: "goddess"
        string_val: "enkitta"
        string_val: "mothathe"
        string_val: "foreclosure"
        string_val: "poverty"
        string_val: "nobility"
        string_val: "puthri"
        string_val: "lucky"
        string_val: "othappu"
        string_val: "zebra"
        string_val: "lampoon"
        string_val: "anniversary"
        string_val: "anthology"
        string_val: "1980"
        string_val: "varenyky"
        string_val: "courtship"
        string_val: "leia"
        string_val: "nichiren"
        string_val: "m\305\215ko"
        string_val: "daish\305\253rai"
        string_val: "mariem"
        string_val: "hassan"
        string_val: "leyoad"
        string_val: "cypress"
        string_val: "needle"
        string_val: "omega"
        string_val: "believe"
        string_val: "jackal"
        string_val: "wannadies"
        string_val: "qriii"
        string_val: "histoires"
        string_val: "sans"
        string_val: "paroles"
        string_val: "nimule"
        string_val: "brandon"
        string_val: "boma"
        string_val: "charlene"
        string_val: "badonviller"
        string_val: "andorra"
        string_val: "manitou"
        string_val: "winwood"
        string_val: "marilyn"
        string_val: "manson"
        string_val: "hammer"
        string_val: "patagonia"
        string_val: "sandworms"
        string_val: "had"
        string_val: "hair"
        string_val: "content"
        string_val: "wear"
        string_val: "brows"
        string_val: "smolan"
        string_val: "durant"
        string_val: "neurotoxicology"
        string_val: "greyest"
        string_val: "morse"
        string_val: "brady"
        string_val: "karusellen"
        string_val: "rosebud"
        string_val: "kickboxer"
        string_val: "opera"
        string_val: "tarpon"
        string_val: "cottondale"
        string_val: "sins"
        string_val: "fathers"
        string_val: "pattie"
        string_val: "iroquois"
        string_val: "freed"
        string_val: "spasmolytic"
        string_val: "tower"
        string_val: "ljubam"
        string_val: "ireland"
        string_val: "lono"
        string_val: "dumplings"
        string_val: "rump"
        string_val: "turning"
        string_val: "cassidy"
        string_val: "gurram"
        string_val: "battles"
        string_val: "sweets"
        string_val: "edison"
        string_val: "janell"
        string_val: "funked"
        string_val: "sequoyah"
        string_val: "empty"
        string_val: "throne"
        string_val: "aion"
        string_val: "2011"
        string_val: "moribund"
        string_val: "burgermeister"
        string_val: "shades"
        string_val: "baldur"
        string_val: "bhaal"
        string_val: "conducting"
        string_val: "grave"
        string_val: "broonzy"
        string_val: "impulso"
        string_val: "creativo"
        string_val: "chin"
        string_val: "fogata"
        string_val: "006"
        string_val: "sydney"
        string_val: "isles"
        string_val: "valverde"
        string_val: "tracyton"
        string_val: "cotopaxi"
        string_val: "preston"
        string_val: "remedial"
        string_val: "pastwatch"
        string_val: "columbus"
        string_val: "eiffel"
        string_val: "mythologies"
        string_val: "forty"
        string_val: "chance"
        string_val: "pe"
        string_val: "learn"
        string_val: "draw"
        string_val: "della"
        string_val: "fickle"
        string_val: "hematite"
        string_val: "misato"
        string_val: "watanabe"
        string_val: "spotat"
        string_val: "pavo"
        string_val: "dustin"
        string_val: "graduate"
        string_val: "faculty"
        string_val: "nevado"
        string_val: "cruces"
        string_val: "toklas"
        string_val: "dutchess"
        string_val: "update"
        string_val: "colored"
        string_val: "anymore"
        string_val: "harassed"
        string_val: "cahn"
        string_val: "margaret"
        string_val: "josie"
        string_val: "carissa"
        string_val: "lindsay"
        string_val: "anacreon"
        string_val: "armand"
        string_val: "helden"
        string_val: "michigantown"
        string_val: "shuffle"
        string_val: "syndrome"
        string_val: "brazuca"
        string_val: "rum"
        string_val: "loneliness"
        string_val: "runner"
        string_val: "whisper"
        string_val: "birta"
        string_val: "axis2"
        string_val: "irene"
        string_val: "rosella"
        string_val: "hoffman"
        string_val: "towne"
        string_val: "ammunition"
        string_val: "jang"
        string_val: "nara"
        string_val: "hex"
        string_val: "hector"
        string_val: "labonte"
        string_val: "available"
        string_val: "peninsula"
        string_val: "recuerdo"
        string_val: "peddling"
        string_val: "prosperity"
        string_val: "doyle"
        string_val: "julia"
        string_val: "fordham"
        string_val: "ismol"
        string_val: "each"
        string_val: "bowlegs"
        string_val: "sukkot"
        string_val: "ines"
        string_val: "doomsday"
        string_val: "wesley"
        string_val: "josh"
        string_val: "kear"
        string_val: "myra"
        string_val: "tender"
        string_val: "longwave"
        string_val: "hoonah"
        string_val: "caxtons"
        string_val: "editor"
        string_val: "publisher"
        string_val: "sails"
        string_val: "stepmother"
        string_val: "brockway"
        string_val: "sleepytime"
        string_val: "blaydon"
        string_val: "races"
        string_val: "envoy"
        string_val: "lucifer"
        string_val: "trade"
        string_val: "windber"
        string_val: "365"
        string_val: "thunderbolt"
        string_val: "formed"
        string_val: "steptoe"
        string_val: "infrared"
        string_val: "rusty"
        string_val: "firebrand"
        string_val: "thug"
        string_val: "lordz"
        string_val: "won"
        string_val: "powder"
        string_val: "puff"
        string_val: "tsingy"
        string_val: "bemaraha"
        string_val: "delisle"
        string_val: "tawakoni"
        string_val: "ulen"
        string_val: "tight"
        string_val: "sappho"
        string_val: "nooks"
        string_val: "verden"
        string_val: "coyote"
        string_val: "pad"
        string_val: "engaged"
        string_val: "unidentified"
        string_val: "dooneen"
        string_val: "spaceball"
        string_val: "begonias"
        string_val: "entrenar"
        string_val: "brotherhood"
        string_val: "escapes"
        string_val: "aree"
        string_val: "poneto"
        string_val: "nude"
        string_val: "moving"
        string_val: "chicamocha"
        string_val: "roseau"
        string_val: "tenbrooks"
        string_val: "bien"
        string_val: "acompa\303\261ado"
        string_val: "tall"
        string_val: "milk"
        string_val: "incredible"
        string_val: "hulk"
        string_val: "grande"
        string_val: "scenic"
        string_val: "feud"
        string_val: "strange"
        string_val: "diamonds"
        string_val: "finding"
        string_val: "vipers"
        string_val: "breton"
        string_val: "rome"
        string_val: "ts\305\253zetsu"
        string_val: "caleigh"
        string_val: "abode"
        string_val: "deweese"
        string_val: "kasey"
        string_val: "chambers"
        string_val: "til"
        string_val: "minotaur"
        string_val: "naguabo"
        string_val: "mandrake"
        string_val: "cahoots"
        string_val: "bonobo"
        string_val: "mister"
        string_val: "youth"
        string_val: "storia"
        string_val: "natale"
        string_val: "deserve"
        string_val: "crafty"
        string_val: "male"
        string_val: "pornography"
        string_val: "discrimination"
        string_val: "ghostly"
        string_val: "swim"
        string_val: "etna"
        string_val: "kanon"
        string_val: "wakeshima"
        string_val: "vanlue"
        string_val: "hind"
        string_val: "etin"
        string_val: "tribute"
        string_val: "sparks"
        string_val: "coffin"
        string_val: "trotamundos"
        string_val: "raffaele"
        string_val: "riefoli"
        string_val: "morrisonville"
        string_val: "cobbler"
        string_val: "doom"
        string_val: "bhoomi"
        string_val: "geetha"
        string_val: "censored"
        string_val: "socca"
        string_val: "palco"
        string_val: "umatilla"
        string_val: "program"
        string_val: "strays"
        string_val: "boundary"
        string_val: "fullerville"
        string_val: "strandburg"
        string_val: "farewell"
        string_val: "cougar"
        string_val: "priority"
        string_val: "kelloe"
        string_val: "raquel"
        string_val: "hainesville"
        string_val: "entity"
        string_val: "integer"
        string_val: "sequences"
        string_val: "meeting"
        string_val: "miracle"
        string_val: "stansbury"
        string_val: "farmington"
        string_val: "armen"
        string_val: "movsessian"
        string_val: "skepta"
        string_val: "pablo"
        string_val: "howards"
        string_val: "villotta"
        string_val: "fondue"
        string_val: "nothin"
        string_val: "dallesport"
        string_val: "mamie"
        string_val: "maria"
        string_val: "fisk"
        string_val: "69th"
        string_val: "welch"
        string_val: "choptank"
        string_val: "meltdown"
        string_val: "destruction"
        string_val: "farragut"
        string_val: "brasil"
        string_val: "dearest"
        string_val: "masonville"
        string_val: "meatball"
        string_val: "erica"
        string_val: "wow"
        string_val: "bandits"
        string_val: "address"
        string_val: "accidentally"
        string_val: "murph"
        string_val: "luke"
        string_val: "thief"
        string_val: "superman"
        string_val: "kentmore"
        string_val: "coltrane"
        string_val: "lansford"
        string_val: "antonito"
        string_val: "playlst"
        string_val: "scotsman"
        string_val: "field"
        string_val: "mcclinton"
        string_val: "mating"
        string_val: "encyclopaedia"
        string_val: "sciences"
        string_val: "kanopolis"
        string_val: "pete"
        string_val: "bomb"
        string_val: "sympathy"
        string_val: "legion"
        string_val: "garcia"
        string_val: "unfinished"
        string_val: "dyskografia"
        string_val: "seeds"
        string_val: "orwell"
        string_val: "mg"
        string_val: "visionary"
        string_val: "beech"
        string_val: "lyrical"
        string_val: "nanoha"
        string_val: "strikers"
        string_val: "fabrice"
        string_val: "morvan"
        string_val: "yesudas"
        string_val: "dales"
        string_val: "ove"
        string_val: "scoundrels"
        string_val: "kjetil"
        string_val: "vidar"
        string_val: "haraldstad"
        string_val: "wontons"
        string_val: "keachi"
        string_val: "bellwood"
        string_val: "orlovista"
        string_val: "franj"
        string_val: "peveril"
        string_val: "tied"
        string_val: "cary"
        string_val: "ya"
        string_val: "riceboro"
        string_val: "demon"
        string_val: "burr"
        string_val: "mccoy"
        string_val: "carbuncle"
        string_val: "glazier"
        string_val: "harveys"
        string_val: "utopia"
        string_val: "aire"
        string_val: "wasser"
        string_val: "compilation"
        string_val: "sinful"
        string_val: "holi"
        string_val: "fondo"
        string_val: "buio"
        string_val: "atlantis"
        string_val: "terre"
        string_val: "engloutie"
        string_val: "kurdishmedia"
        string_val: "monroe"
        string_val: "neylandville"
        string_val: "infernus"
        string_val: "marsha"
        string_val: "medici"
        string_val: "follow"
        string_val: "camel"
        string_val: "upcoming"
        string_val: "bourne"
        string_val: "eggo"
        string_val: "bob"
        string_val: "klose"
        string_val: "caveman"
        string_val: "balance"
        string_val: "timing"
        string_val: "gabrial"
        string_val: "mcnair"
        string_val: "dormir"
        string_val: "ain"
        string_val: "fascism"
        string_val: "oakes"
        string_val: "libby"
        string_val: "public"
        string_val: "toilet"
        string_val: "tinker"
        string_val: "phinizy"
        string_val: "brackets"
        string_val: "kindness"
        string_val: "bachelors"
        string_val: "lu"
        string_val: "bing"
        string_val: "tory"
        string_val: "emperor"
        string_val: "wears"
        string_val: "clothes"
        string_val: "naive"
        string_val: "boring"
        string_val: "pagan"
        string_val: "saxis"
        string_val: "jill"
        string_val: "vidal"
        string_val: "topton"
        string_val: "twas"
        string_val: "scarabaeus"
        string_val: "weathervane"
        string_val: "fare"
        string_val: "thee"
        string_val: "celebrating"
        string_val: "grateful"
        string_val: "pearson"
        string_val: "soda"
        string_val: "bailey"
        string_val: "screams"
        string_val: "domestic"
        string_val: "kommeni"
        string_val: "anasa"
        string_val: "salvage"
        string_val: "mice"
        string_val: "von"
        string_val: "cosels"
        string_val: "obsession"
        string_val: "crouch"
        string_val: "ana"
        string_val: "couch"
        string_val: "como"
        string_val: "tatuaje"
        string_val: "sonata"
        string_val: "dwarf"
        string_val: "cosmos"
        string_val: "impractical"
        string_val: "jokers"
        string_val: "uk"
        string_val: "shooting"
        string_val: "sebesky"
        string_val: "prestige"
        string_val: "glittering"
        string_val: "judgment"
        string_val: "charleston"
        string_val: "montevallo"
        string_val: "joey"
        string_val: "fatone"
        string_val: "bethnal"
        string_val: "carl"
        string_val: "mourner"
        string_val: "discord"
        string_val: "wrestlemania"
        string_val: "nora"
        string_val: "gibbs"
        string_val: "lavalette"
        string_val: "hickory"
        string_val: "ibm"
        string_val: "temporary"
        string_val: "fix"
        string_val: "sot"
        string_val: "stays"
        string_val: "garrochales"
        string_val: "development"
        string_val: "perspectives"
        string_val: "yearbook"
        string_val: "capricorn"
        string_val: "raz"
        string_val: "trees"
        string_val: "rena"
        string_val: "scene"
        string_val: "wedlock"
        string_val: "number"
        string_val: "andrea"
        string_val: "donnelly"
        string_val: "becoming"
        string_val: "royston"
        string_val: "nankin"
        string_val: "fr"
        string_val: "blodgett"
        string_val: "cooke"
        string_val: "guyra"
        string_val: "ethridge"
        string_val: "farmerville"
        string_val: "toynbee"
        string_val: "convector"
        string_val: "noi"
        string_val: "lari"
        string_val: "hamatora"
        string_val: "cale"
        string_val: "nichols"
        string_val: "tactics"
        string_val: "stephanie"
        string_val: "twist"
        string_val: "ballylickey"
        string_val: "probes"
        string_val: "moravian"
        string_val: "erik"
        string_val: "congeniality"
        string_val: "ranger"
        string_val: "kamen"
        string_val: "rider"
        string_val: "ooo"
        string_val: "shogun"
        string_val: "core"
        string_val: "medals"
        string_val: "streaming"
        string_val: "voce"
        string_val: "sonntag"
        string_val: "creed"
        string_val: "abrar"
        string_val: "ul"
        string_val: "haq"
        string_val: "vichyssoise"
        string_val: "loyalty"
        string_val: "campanian"
        string_val: "vigilantes"
        string_val: "tanimura"
        string_val: "gwen"
        string_val: "roxbox"
        string_val: "lawyer"
        string_val: "bit"
        string_val: "mambo"
        string_val: "leningrad"
        string_val: "cowboys"
        string_val: "published"
        string_val: "islanders"
        string_val: "galena"
        string_val: "barry"
        string_val: "laugh"
        string_val: "lieutenant"
        string_val: "inishmore"
        string_val: "yakima"
        string_val: "moo"
        string_val: "dawning"
        string_val: "hord"
        string_val: "hardcore"
        string_val: "certainty"
        string_val: "stomp"
        string_val: "holler"
        string_val: "chase"
        string_val: "dome"
        string_val: "cambodian"
        string_val: "durbin"
        string_val: "homicide"
        string_val: "bordertown"
        string_val: "dub"
        string_val: "tillicum"
        string_val: "mauritania"
        string_val: "claus"
        string_val: "while"
        string_val: "stump"
        string_val: "maritza"
        string_val: "scientist"
        string_val: "boiling"
        string_val: "happened"
        string_val: "cuney"
        string_val: "brazen"
        string_val: "hecker"
        string_val: "coti"
        string_val: "showtime"
        string_val: "yeah"
        string_val: "luiza"
        string_val: "possi"
        string_val: "bowers"
        string_val: "deathly"
        string_val: "hallows"
        string_val: "itv"
        string_val: "bienville"
        string_val: "doctrine"
        string_val: "quest"
        string_val: "iranon"
        string_val: "stamps"
        string_val: "otis"
        string_val: "janie"
        string_val: "dewey"
        string_val: "darling"
        string_val: "important"
        string_val: "krieg"
        string_val: "chinatown"
        string_val: "furniture"
        string_val: "potje"
        string_val: "vet"
        string_val: "havana"
        string_val: "marit"
        string_val: "bergman"
        string_val: "wuill"
        string_val: "2010s"
        string_val: "twentysomething"
        string_val: "monifah"
        string_val: "needmore"
        string_val: "checkmate"
        string_val: "shamus"
        string_val: "brokaw"
        string_val: "highwayman"
        string_val: "proudly"
        string_val: "marches"
        string_val: "mulvane"
        string_val: "klamath"
        string_val: "marsh"
        string_val: "copper"
        string_val: "pictures"
        string_val: "selva"
        string_val: "jedediah"
        string_val: "vegucated"
        string_val: "jtr"
        string_val: "sneaky"
        string_val: "witches"
        string_val: "aira"
        string_val: "yuhki"
        string_val: "matrimony"
        string_val: "krista"
        string_val: "restautant"
        string_val: "birdland"
        string_val: "rainwater"
        string_val: "lp"
        string_val: "whiskers"
        string_val: "favourite"
        string_val: "nursery"
        string_val: "rhymes"
        string_val: "standing"
        string_val: "bouvet"
        string_val: "laguna"
        string_val: "bayside"
        string_val: "jeanette"
        string_val: "competitors"
        string_val: "heresy"
        string_val: "choir"
        string_val: "flake"
        string_val: "masada"
        string_val: "unknown"
        string_val: "lahore"
        string_val: "honeysuckle"
        string_val: "roaring"
        string_val: "nighthawk"
        string_val: "eastville"
        string_val: "snake"
        string_val: "29"
        string_val: "boston"
        string_val: "ithkar"
        string_val: "troops"
        string_val: "erin"
        string_val: "selma"
        string_val: "mcsherrystown"
        string_val: "racionais"
        string_val: "stick"
        string_val: "fonseca"
        string_val: "mongolian"
        string_val: "eater"
        string_val: "wasps"
        string_val: "raise"
        string_val: "brigitte"
        string_val: "katelyn"
        string_val: "ruthless"
        string_val: "servidor"
        string_val: "scofield"
        string_val: "laughs"
        string_val: "orion"
        string_val: "took"
        string_val: "marbles"
        string_val: "mcintosh"
        string_val: "vaughn"
        string_val: "percy"
        string_val: "jackson"
        string_val: "capture"
        string_val: "wildorado"
        string_val: "swordsman"
        string_val: "licia"
        string_val: "dresbach"
        string_val: "abdel"
        string_val: "halim"
        string_val: "hafez"
        string_val: "rachelle"
        string_val: "rockaway"
        string_val: "116th"
        string_val: "hendthighelbedi"
        string_val: "alchemyst"
        string_val: "nicholas"
        string_val: "flamel"
        string_val: "odetta"
        string_val: "pansette"
        string_val: "skaneateles"
        string_val: "freiberg"
        string_val: "design"
        string_val: "method"
        string_val: "padangnese"
        string_val: "journals"
        string_val: "babylon"
        string_val: "dante"
        string_val: "consciousness"
        string_val: "judge"
        string_val: "jules"
        string_val: "180"
        string_val: "medford"
        string_val: "essie"
        string_val: "tonya"
        string_val: "abstinence"
        string_val: "meriton"
        string_val: "tallinn"
        string_val: "slovak"
        string_val: "moulin"
        string_val: "libros"
        string_val: "arkinda"
        string_val: "hover"
        string_val: "racer"
        string_val: "rob"
        string_val: "campanella"
        string_val: "cone"
        string_val: "woburn"
        string_val: "yoshimi"
        string_val: "robots"
        string_val: "blaise"
        string_val: "use"
        string_val: "lecanto"
        string_val: "bells"
        string_val: "meditations"
        string_val: "patiala"
        string_val: "terraphiles"
        string_val: "taken"
        string_val: "roseland"
        string_val: "kerry"
        string_val: "watchman"
        string_val: "vadivel"
        string_val: "mayya"
        string_val: "donkey"
        string_val: "starr"
        string_val: "surfer"
        string_val: "linguistic"
        string_val: "katina"
        string_val: "dew"
        string_val: "eunice"
        string_val: "elisa"
        string_val: "verdery"
        string_val: "gve"
        string_val: "stinky"
        string_val: "fairly"
        string_val: "wittig"
        string_val: "norma"
        string_val: "salil"
        string_val: "chowdhury"
        string_val: "playlsit"
        string_val: "poncha"
        string_val: "transmission"
        string_val: "zei"
        string_val: "josiah"
        string_val: "leming"
        string_val: "dilvish"
        string_val: "prime"
        string_val: "typeface"
        string_val: "snobs"
        string_val: "nicholasville"
        string_val: "jimenez"
        string_val: "liar"
        string_val: "stage"
        string_val: "poland"
        string_val: "semitism"
        string_val: "resurgence"
        string_val: "bethesda"
        string_val: "strike"
        string_val: "ware"
        string_val: "shoals"
        string_val: "anstruther"
        string_val: "panisses"
        string_val: "naytahwaush"
        string_val: "went"
        string_val: "varney"
        string_val: "montreux"
        string_val: "scarface"
        string_val: "avispa"
        string_val: "rules"
        string_val: "curry"
        string_val: "chompa"
        string_val: "toung"
        string_val: "madawaska"
        string_val: "duchess"
        string_val: "langeais"
        string_val: "cargnello"
        string_val: "compound"
        string_val: "fracture"
        string_val: "acchiappafantasmi"
        string_val: "boo"
        string_val: "comoros"
        string_val: "mccoll"
        string_val: "33"
        string_val: "wake"
        string_val: "delft"
        string_val: "vanished"
        string_val: "housemaid"
        string_val: "103rd"
        string_val: "margie"
        string_val: "commit"
        string_val: "keisha"
        string_val: "clara"
        string_val: "alvarez"
        string_val: "oclock"
        string_val: "beyonders"
        string_val: "foreign"
        string_val: "cannelloni"
        string_val: "neverbeast"
        string_val: "fernandina"
        string_val: "jkt48"
        string_val: "counter"
        string_val: "penuelas"
        string_val: "adriana"
        string_val: "hallowell"
        string_val: "dissociatives"
        string_val: "ringold"
        string_val: "eddy"
        string_val: "duchin"
        string_val: "idea"
        string_val: "allan"
        string_val: "fraser"
        string_val: "mansion"
        string_val: "gutting"
        string_val: "couffignal"
        string_val: "quicksand"
        string_val: "valentine"
        string_val: "older"
        string_val: "seductive"
        string_val: "tongue"
        string_val: "becharof"
        string_val: "consume"
        string_val: "bleach"
        string_val: "admiralty"
        string_val: "gwenno"
        string_val: "pipette"
        string_val: "model"
        string_val: "craftsman"
        string_val: "riddlesburg"
        string_val: "saratoga"
        string_val: "ircle"
        string_val: "xsuie"
        string_val: "carlson"
        string_val: "creamery"
        string_val: "coach"
        string_val: "magdalena"
        string_val: "runkaus"
        string_val: "isobel"
        string_val: "campbell"
        string_val: "reuben"
        string_val: "topinabee"
        string_val: "sara"
        string_val: "priest"
        string_val: "swindlers"
        string_val: "blankets"
        string_val: "holstein"
        string_val: "rented"
        string_val: "lips"
        string_val: "disturbance"
        string_val: "catchphrase"
        string_val: "whosoever"
        string_val: "offend"
        string_val: "cannabis"
        string_val: "isthmus"
        string_val: "thinking"
        string_val: "shaun"
        string_val: "sheep"
        string_val: "osyka"
        string_val: "ashford"
        string_val: "maybe"
        string_val: "labworth"
        string_val: "maximilian"
        string_val: "mutzke"
        string_val: "macaroni"
        string_val: "carnegie"
        string_val: "woven"
        string_val: "minidoka"
        string_val: "presence"
        string_val: "inflated"
        string_val: "bibb"
        string_val: "noses"
        string_val: "grocery"
        string_val: "leena"
        string_val: "peisa"
        string_val: "fra"
        string_val: "mols"
        string_val: "skagen"
        string_val: "restarunt"
        string_val: "federal"
        string_val: "rocksteady"
        string_val: "sugarloaf"
        string_val: "palmyra"
        string_val: "christianity"
        string_val: "roach"
        string_val: "exira"
        string_val: "oysters"
        string_val: "rockefeller"
        string_val: "puzzles"
        string_val: "kellnersville"
        string_val: "marc"
        string_val: "ringo"
        string_val: "sheena"
        string_val: "quadrophenia"
        string_val: "mattawan"
        string_val: "germantown"
        string_val: "catherine"
        string_val: "survive"
        string_val: "alternativo"
        string_val: "dicey"
        string_val: "bolsa"
        string_val: "chica"
        string_val: "molise"
        string_val: "hoc"
        string_val: "ivan"
        string_val: "roudyk"
        string_val: "jenkins"
        string_val: "hutchinson"
        string_val: "strolghino"
        string_val: "elmer"
        string_val: "planet"
        string_val: "coffins"
        string_val: "organization"
        string_val: "trick"
        string_val: "treats"
        string_val: "perdu"
        string_val: "gougoush"
        string_val: "wyandotte"
        string_val: "liza"
        string_val: "oumarova"
        string_val: "bynum"
        string_val: "cup"
        string_val: "winner"
        string_val: "match"
        string_val: "jquery"
        string_val: "mobile"
        string_val: "genola"
        string_val: "wendy"
        string_val: "reklaw"
        string_val: "goug\303\250re"
        string_val: "laneville"
        string_val: "conflict"
        string_val: "callahan"
        string_val: "es"
        string_val: "tuya"
        string_val: "oficial"
        string_val: "trevor"
        string_val: "mcnevan"
        string_val: "orgy"
        string_val: "leather"
        string_val: "thompsontown"
        string_val: "karen"
        string_val: "witchcraft"
        string_val: "paganism"
        string_val: "madge"
        string_val: "divan"
        string_val: "suriname"
        string_val: "rosales"
        string_val: "alba"
        string_val: "hola"
        string_val: "prom"
        string_val: "dombey"
        string_val: "portman"
        string_val: "unreleased"
        string_val: "dorsey"
        string_val: "moneta"
        string_val: "ives"
        string_val: "gormenghast"
        string_val: "peggy"
        string_val: "sue"
        string_val: "op\303\251ration"
        string_val: "cindy"
        string_val: "baltic"
        string_val: "loup"
        string_val: "mizuki"
        string_val: "fighter"
        string_val: "cedarburg"
        string_val: "repeating"
        string_val: "stoneage"
        string_val: "romeos"
        string_val: "windhorst"
        string_val: "sha"
        string_val: "miranda"
        string_val: "lambert"
        string_val: "confessions"
        string_val: "cozy"
        string_val: "defined"
        string_val: "struggle"
        string_val: "tracie"
        string_val: "noyack"
        string_val: "hotchpotch"
        string_val: "augustine"
        string_val: "nur"
        string_val: "mit"
        string_val: "dir"
        string_val: "principii"
        string_val: "evangelikum"
        string_val: "aerial"
        string_val: "adrian"
        string_val: "stolen"
        string_val: "conception"
        string_val: "oriel"
        string_val: "allison"
        string_val: "shivers"
        string_val: "flint"
        string_val: "rhum"
        string_val: "spell"
        string_val: "quiet"
        string_val: "cliff"
        string_val: "abuja"
        string_val: "henrieville"
        string_val: "clawson"
        string_val: "medicine"
        string_val: "munia"
        string_val: "jiro"
        string_val: "jonathan"
        string_val: "arons"
        string_val: "eef"
        string_val: "barzelay"
        string_val: "pulaski"
        string_val: "jappeloup"
        string_val: "intrigue"
        string_val: "hath"
        string_val: "bleeding"
        string_val: "elnora"
        string_val: "goodland"
        string_val: "justin"
        string_val: "mcroberts"
        string_val: "jewell"
        string_val: "cemetery"
        string_val: "piskies"
        string_val: "cornish"
        string_val: "apathy"
        string_val: "osgood"
        string_val: "weissberg"
        string_val: "carpet"
        string_val: "fangs"
        string_val: "subcontract"
        string_val: "ussr"
        string_val: "renewable"
        string_val: "electricity"
        string_val: "grid"
        string_val: "inquiry"
        string_val: "moosic"
        string_val: "mythology"
        string_val: "czarna"
        string_val: "dziewczyna"
        string_val: "bedford"
        string_val: "lehman"
        string_val: "chatyrkul"
        string_val: "heredity"
        string_val: "unwelcome"
        string_val: "dong"
        string_val: "phou"
        string_val: "vieng"
        string_val: "livingston"
        string_val: "go\303\251land"
        string_val: "buffalo"
        string_val: "eden"
        string_val: "abominations"
        string_val: "cattle"
        string_val: "northvale"
        string_val: "hanksville"
        string_val: "gorilla"
        string_val: "hunters"
        string_val: "dread"
        string_val: "mettawa"
        string_val: "toby"
        string_val: "nemiciamici"
        string_val: "alderwood"
        string_val: "patrica"
        string_val: "cycle"
        string_val: "features"
        string_val: "bathgate"
        string_val: "hogs"
        string_val: "backyard"
        string_val: "sunnybrook"
        string_val: "sci"
        string_val: "crimes"
        string_val: "penelopiad"
        string_val: "rixford"
        string_val: "formby"
        string_val: "impostors"
        string_val: "arrows"
        string_val: "hercules"
        string_val: "ridel"
        string_val: "awaiting"
        string_val: "weird"
        string_val: "lovecraftian"
        string_val: "fictions"
        string_val: "tritonian"
        string_val: "ring"
        string_val: "layhigh"
        string_val: "parable"
        string_val: "sower"
        string_val: "tholireyi"
        string_val: "gadichindi"
        string_val: "crofton"
        string_val: "ignacio"
        string_val: "figueredo"
        string_val: "temptation"
        string_val: "oshin"
        string_val: "democratic"
        string_val: "trust"
        string_val: "worship"
        string_val: "moen"
        string_val: "twinkler"
        string_val: "concord"
        string_val: "pelland"
        string_val: "balzary"
        string_val: "toucher"
        string_val: "rich"
        string_val: "congress"
        string_val: "belize"
        string_val: "coats"
        string_val: "dan"
        string_val: "automator"
        string_val: "capicollo"
        string_val: "kit"
        string_val: "carson"
        string_val: "ilene"
        string_val: "aisha"
        string_val: "cl\303\241sica"
        string_val: "wetumpka"
        string_val: "sveta"
        string_val: "ljubav"
        string_val: "canon"
        string_val: "anders"
        string_val: "plalist"
        string_val: "visjoner"
        string_val: "pangaea"
        string_val: "angelus"
        string_val: "lines"
        string_val: "whens"
        string_val: "halfbreed"
        string_val: "meherrin"
        string_val: "teenage"
        string_val: "mutant"
        string_val: "turtles"
        string_val: "worthington"
        string_val: "canto"
        string_val: "gypsy"
        string_val: "putrid"
        string_val: "sorcery"
        string_val: "senior"
        string_val: "britpop"
        string_val: "etc"
        string_val: "kent"
        string_val: "shootings"
        string_val: "cocuy"
        string_val: "candi"
        string_val: "staton"
        string_val: "guilty"
        string_val: "pleasures"
        string_val: "meeres"
        string_val: "insel"
        string_val: "bastimentos"
        string_val: "ojo"
        string_val: "amarillo"
        string_val: "crazysexycool"
        string_val: "winchell"
        string_val: "hamelin"
        string_val: "managing"
        string_val: "utsler"
        string_val: "n9ne"
        string_val: "loogootee"
        string_val: "politicsnation"
        string_val: "sharpton"
        string_val: "khao"
        string_val: "phanom"
        string_val: "bencha"
        string_val: "flaxton"
        string_val: "fahl"
        string_val: "juniper"
        string_val: "b\303\273che"
        string_val: "vernon"
        string_val: "tells"
        string_val: "divergent"
        string_val: "throwing"
        string_val: "kuk"
        string_val: "harrell"
        string_val: "sifow"
        string_val: "cerebellum"
        string_val: "wauseon"
        string_val: "daewon"
        string_val: "foreast"
        string_val: "spade"
        string_val: "simplest"
        string_val: "colfax"
        string_val: "eternally"
        string_val: "clermont"
        string_val: "higher"
        string_val: "incite"
        string_val: "lihula"
        string_val: "travels"
        string_val: "cheaper"
        string_val: "dozen"
        string_val: "whitechapel"
        string_val: "bunky"
        string_val: "tsongas"
        string_val: "adolf"
        string_val: "hitler"
        string_val: "downfall"
        string_val: "prey"
        string_val: "command"
        string_val: "northway"
        string_val: "jacobsburg"
        string_val: "ennarukil"
        string_val: "irunthal"
        string_val: "alejandra"
        string_val: "119"
        string_val: "iconic"
        string_val: "photographer"
        string_val: "dennis"
        string_val: "stock"
        string_val: "canfield"
        string_val: "cedar"
        string_val: "cyclists"
        string_val: "turnt"
        string_val: "brought"
        string_val: "woodmere"
        string_val: "martyr"
        string_val: "aap"
        string_val: "aise"
        string_val: "na"
        string_val: "hank"
        string_val: "soundscape"
        string_val: "almyra"
        string_val: "tragedy"
        string_val: "nassau"
        string_val: "sorry"
        string_val: "spoiler"
        string_val: "penthouse"
        string_val: "mashed"
        string_val: "pumpkin"
        string_val: "battlement"
        string_val: "bums"
        string_val: "uranus"
        string_val: "bars"
        string_val: "lovex"
        string_val: "sumner"
        string_val: "geddes"
        string_val: "effie"
        string_val: "kaya"
        string_val: "augusta"
        string_val: "dna"
        string_val: "repair"
        string_val: "mutagenesis"
        string_val: "nokio"
        string_val: "tity"
        string_val: "currents"
        string_val: "volver"
        string_val: "pittsburgh"
        string_val: "slim"
        string_val: "lander"
        string_val: "fusil"
        string_val: "contra"
        string_val: "carrousel"
        string_val: "ivory"
        string_val: "nightwork"
        string_val: "stetson"
        string_val: "routine"
        string_val: "helena"
        string_val: "comertown"
        string_val: "bushkill"
        string_val: "gilmer"
        string_val: "foley"
        string_val: "modesto"
        string_val: "ella"
        string_val: "marx"
        string_val: "choucroute"
        string_val: "ronski"
        string_val: "kidd"
        string_val: "penalty"
        string_val: "conrad"
        string_val: "nubians"
        string_val: "plutonia"
        string_val: "toa"
        string_val: "desserts"
        string_val: "ashmore"
        string_val: "nokia"
        string_val: "yumi"
        string_val: "matsuzawa"
        string_val: "outsiders"
        string_val: "dauset"
        string_val: "incomplete"
        string_val: "tires"
        string_val: "tarja"
        string_val: "turunen"
        string_val: "daniel"
        string_val: "zueras"
        string_val: "lush"
        string_val: "satisfied"
        string_val: "christie"
        string_val: "concepcion"
        string_val: "johnston"
        string_val: "perfecting"
        string_val: "coleville"
        string_val: "preferably"
        string_val: "thayer"
        string_val: "farruko"
        string_val: "presenta"
        string_val: "menores"
        string_val: "soapsuds"
        string_val: "sapheads"
        string_val: "danger"
        string_val: "conshohocken"
        string_val: "yeager"
        string_val: "owlet"
        string_val: "genre"
        string_val: "bender"
        string_val: "hickman"
        string_val: "strauss"
        string_val: "nas"
        string_val: "major"
        string_val: "maxim"
        string_val: "sardonic"
        string_val: "wrath"
        string_val: "bal"
        string_val: "ganesh"
        string_val: "connorville"
        string_val: "practical"
        string_val: "khaled"
        string_val: "moor"
        string_val: "kris"
        string_val: "chetan"
        string_val: "ramlu"
        string_val: "sinatra"
        string_val: "meg"
        string_val: "seron"
        string_val: "lacuna"
        string_val: "wanderer"
        string_val: "heber"
        string_val: "killarney"
        string_val: "pow"
        string_val: "mia"
        string_val: "recognition"
        string_val: "leave"
        string_val: "dixie"
        string_val: "beginnings"
        string_val: "concerts"
        string_val: "jesper"
        string_val: "kyd"
        string_val: "specialises"
        string_val: "protein"
        string_val: "wallsburg"
        string_val: "pam"
        string_val: "unnaturals"
        string_val: "trac"
        string_val: "piperton"
        string_val: "comeback"
        string_val: "hefner"
        string_val: "unauthorized"
        string_val: "kristine"
        string_val: "hilt"
        string_val: "huns"
        string_val: "cammack"
        string_val: "mali"
        string_val: "compact"
        string_val: "proposal"
        string_val: "inspector"
        string_val: "calientes"
        string_val: "descanso"
        string_val: "infinito"
        string_val: "nimba"
        string_val: "scampi"
        string_val: "deidre"
        string_val: "rosa"
        string_val: "tyner"
        string_val: "betsy"
        string_val: "59th"
        string_val: "grammy"
        string_val: "kelli"
        string_val: "ultimatum"
        string_val: "altyn"
        string_val: "emel"
        string_val: "sal\303\262"
        string_val: "scotland"
        string_val: "kisaki"
        string_val: "fade"
        string_val: "pinecliffe"
        string_val: "blanca"
        string_val: "for\303\252t"
        string_val: "nationale"
        string_val: "davy"
        string_val: "crockett"
        string_val: "upper"
        string_val: "arms"
        string_val: "collector"
        string_val: "acworth"
        string_val: "kiara"
        string_val: "stehekin"
        string_val: "spells"
        string_val: "philtres"
        string_val: "vandalia"
        string_val: "esperanza"
        string_val: "musiri"
        string_val: "subramania"
        string_val: "iyer"
        string_val: "informix"
        string_val: "wingz"
        string_val: "holladay"
        string_val: "neffs"
        string_val: "packed"
        string_val: "rafters"
        string_val: "hineston"
        string_val: "lone"
        string_val: "nash"
        string_val: "singular"
        string_val: "puro"
        string_val: "clontarf"
        string_val: "angeline"
        string_val: "ufc"
        string_val: "lotus"
        string_val: "grandview"
        string_val: "crooked"
        string_val: "windsor"
        string_val: "concrete"
        string_val: "coorgs"
        string_val: "wendell"
        string_val: "tenacious"
        string_val: "pick"
        string_val: "octagon"
        string_val: "christchurch"
        string_val: "built"
        string_val: "mucho"
        string_val: "bridges"
        string_val: "laws"
        string_val: "survey"
        string_val: "kinder"
        string_val: "deasy"
        string_val: "pineridge"
        string_val: "whit"
        string_val: "bashful"
        string_val: "oswald"
        string_val: "hubbell"
        string_val: "defenestration"
        string_val: "ermintrude"
        string_val: "inch"
        string_val: "kegs"
        string_val: "37"
        string_val: "cincinnati"
        string_val: "tonga"
        string_val: "howard"
        string_val: "perchance"
        string_val: "garner"
        string_val: "xanadu"
        string_val: "bud"
        string_val: "jenners"
        string_val: "breezy"
        string_val: "gucci"
        string_val: "mane"
        string_val: "merced"
        string_val: "1634"
        string_val: "ram"
        string_val: "godslayer"
        string_val: "hooven"
        string_val: "caps"
        string_val: "torch"
        string_val: "beavis"
        string_val: "butt"
        string_val: "unbound"
        string_val: "limberlost"
        string_val: "hurstville"
        string_val: "westcountry"
        string_val: "dawns"
        string_val: "foros"
        string_val: "timis"
        string_val: "ston"
        string_val: "greco"
        string_val: "apolobamba"
        string_val: "integrated"
        string_val: "trains"
        string_val: "planes"
        string_val: "complots"
        string_val: "alisha"
        string_val: "florine"
        string_val: "burleigh"
        string_val: "flats"
        string_val: "kearney"
        string_val: "analyzer"
        string_val: "hitchland"
        string_val: "puttering"
        string_val: "seasons"
        string_val: "skid"
        string_val: "helen"
        string_val: "miriam"
        string_val: "chatmoss"
        string_val: "fernando"
        string_val: "alerce"
        string_val: "andino"
        string_val: "earline"
        string_val: "individuals"
        string_val: "ecosystems"
        string_val: "bevilacqua"
        string_val: "strumpet"
        string_val: "bashkirsky"
        string_val: "wolcott"
        string_val: "cater"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 9255
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000\010\000\000\000\t\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\r`\000\000\000a\000\000\000b\000\000\000c\000\000\000d\000\000\000e\000\000\000f\000\000\000g\000\000\000h\000\000\000i\000\000\000j\000\000\000k\000\000\000l\000\000\000m\000\000\000n\000\000\000o\000\000\000p\000\000\000q\000\000\000r\000\000\000s\000\000\000t\000\000\000u\000\000\000v\000\000\000w\000\000\000x\000\000\000y\000\000\000z\000\000\000{\000\000\000|\000\000\000}\000\000\000~t\001\000\000\n\001\000\000\013\001\000\000\014\001\000\000\r`\001\000\000a\001\000\000b\001\000\000c\001\000\000d\001\000\000e\001\000\000f\001\000\000g\001\000\000h\001\000\000i\001\000\000j\001\000\000k\001\000\000l\001\000\000m\001\000\000n\001\000\000o\001\000\000p\001\000\000q\001\000\000r\001\000\000s\001\000\000t\001\000\000u\001\000\000v\001\000\000w\001\000\000x\001\000\000y\001\000\000z\001\000\000{\001\000\000|\001\000\000}\001\000\000~t\002\000\000\n\002\000\000\013\002\000\000\014\002\000\000\r`\002\000\000a\002\000\000b\002\000\000c\002\000\000d\002\000\000e\002\000\000f\002\000\000g\002\000\000h\002\000\000i\002\000\000j\002\000\000k\002\000\000l\002\000\000m\002\000\000n\002\000\000o\002\000\000p\002\000\000q\002\000\000r\002\000\000s\002\000\000t\002\000\000u\002\000\000v\002\000\000w\002\000\000x\002\000\000y\002\000\000z\002\000\000{\002\000\000|\002\000\000}\002\000\000~t\003\000\000\n\003\000\000\013\003\000\000\014\003\000\000\r`\003\000\000a\003\000\000b\003\000\000c\003\000\000d\003\000\000e\003\000\000f\003\000\000g\003\000\000h\003\000\000i\003\000\000j\003\000\000k\003\000\000l\003\000\000m\003\000\000n\003\000\000o\003\000\000p\003\000\000q\003\000\000r\003\000\000s\003\000\000t\003\000\000u\003\000\000v\003\000\000w\003\000\000x\003\000\000y\003\000\000z\003\000\000{\003\000\000|\003\000\000}\003\000\000~t\004\000\000\n\004\000\000\013\004\000\000\014\004\000\000\r`\004\000\000a\004\000\000b\004\000\000c\004\000\000d\004\000\000e\004\000\000f\004\000\000g\004\000\000h\004\000\000i\004\000\000j\004\000\000k\004\000\000l\004\000\000m\004\000\000n\004\000\000o\004\000\000p\004\000\000q\004\000\000r\004\000\000s\004\000\000t\004\000\000u\004\000\000v\004\000\000w\004\000\000x\004\000\000y\004\000\000z\004\000\000{\004\000\000|\004\000\000}\004\000\000~t\005\000\000\n\005\000\000\013\005\000\000\014\005\000\000\r`\005\000\000a\005\000\000b\005\000\000c\005\000\000d\005\000\000e\005\000\000f\005\000\000g\005\000\000h\005\000\000i\005\000\000j\005\000\000k\005\000\000l\005\000\000m\005\000\000n\005\000\000o\005\000\000p\005\000\000q\005\000\000r\005\000\000s\005\000\000t\005\000\000u\005\000\000v\005\000\000w\005\000\000x\005\000\000y\005\000\000z\005\000\000{\005\000\000|\005\000\000}\005\000\000~t\006\000\000\n\006\000\000\013\006\000\000\014\006\000\000\r`\006\000\000a\006\000\000b\006\000\000c\006\000\000d\006\000\000e\006\000\000f\006\000\000g\006\000\000h\006\000\000i\006\000\000j\006\000\000k\006\000\000l\006\000\000m\006\000\000n\006\000\000o\006\000\000p\006\000\000q\006\000\000r\006\000\000s\006\000\000t\006\000\000u\006\000\000v\006\000\000w\006\000\000x\006\000\000y\006\000\000z\006\000\000{\006\000\000|\006\000\000}\006\000\000~t\007\000\000\n\007\000\000\013\007\000\000\014\007\000\000\r`\007\000\000a\007\000\000b\007\000\000c\007\000\000d\007\000\000e\007\000\000f\007\000\000g\007\000\000h\007\000\000i\007\000\000j\007\000\000k\007\000\000l\007\000\000m\007\000\000n\007\000\000o\007\000\000p\007\000\000q\007\000\000r\007\000\000s\007\000\000t\007\000\000u\007\000\000v\007\000\000w\007\000\000x\007\000\000y\007\000\000z\007\000\000{\007\000\000|\007\000\000}\007\000\000~\007\000\000\177\007\000\000\200\007\000\000\201\007\000\000\202\007\000\000\203\007\000\000\204\007\000\000\205\007\000\000\206\007\000\000\207\007\000\000\210\007\000\000\211\007\000\000\212\007\000\000\213\007\000\000\214\007\000\000\215\007\000\000\216\007\000\000\217\007\000\000\220\007\000\000\221\007\000\000\222\007\000\000\223\007\000\000\224\007\000\000\225\007\000\000\226\007\000\000\227\007\000\000\230\007\000\000\231\007\000\000\232\007\000\000\233\007\000\000\234\007\000\000\235\007\000\000\236\007\000\000\237\007\000\000\240\007\000\000\241\007\000\000\242\007\000\000\243\007\000\000\244\007\000\000\245\007\000\000\246\007\000\000\247\007\000\000\250\007\000\000\251\007\000\000\252\007\000\000\253\007\000\000\254\007\000\000\255\007\000\000\256\007\000\000\257\007\000\000\260\007\000\000\261\007\000\000\262\007\000\000\263\007\000\000\264\007\000\000\265\007\000\000\266\007\000\000\267\007\000\000\270\007\000\000\271\007\000\000\272\007\000\000\273\007\000\000\274\007\000\000\275\007\000\000\276\007\000\000\277\007\000\000\300\007\000\000\301\007\000\000\302\007\000\000\303\007\000\000\304\007\000\000\305\007\000\000\306\007\000\000\307\007\000\000\310\007\000\000\311\007\000\000\312\007\000\000\313\007\000\000\314\007\000\000\315\007\000\000\316\007\000\000\317\007\000\000\320\007\000\000\321\007\000\000\322\007\000\000\323\007\000\000\324\007\000\000\325\007\000\000\326\007\000\000\327\007\000\000\330\007\000\000\331\007\000\000\332\007\000\000\333\007\000\000\334\007\000\000\335\007\000\000\336\007\000\000\337\007\000\000\340\007\000\000\341\007\000\000\342\007\000\000\343\007\000\000\344\007\000\000\345\007\000\000\346\007\000\000\347\007\000\000\350\007\000\000\351\007\000\000\352\007\000\000\353\007\000\000\354\007\000\000\355\007\000\000\356\007\000\000\357\007\000\000\360\007\000\000\361\007\000\000\362\007\000\000\363\007\000\000\364\007\000\000\365\007\000\000\366\007\000\000\367\007\000\000\370\007\000\000\371\007\000\000\372\007\000\000\373\007\000\000\374\007\000\000\375\007\000\000\376\007\000\000\377\007\000\000\000\010\000\000\001\010\000\000\002\010\000\000\003\010\000\000\004\010\000\000\005\010\000\000\006\010\000\000\007\010\000\000\010\010\000\000\t\010\000\000\n\010\000\000\013\010\000\000\014\010\000\000\r`\010\000\000a\010\000\000b\010\000\000c\010\000\000d\010\000\000e\010\000\000f\010\000\000g\010\000\000h\010\000\000i\010\000\000j\010\000\000k\010\000\000l\010\000\000m\010\000\000n\010\000\000o\010\000\000p\010\000\000q\010\000\000r\010\000\000s\010\000\000t\010\000\000u\010\000\000v\010\000\000w\010\000\000x\010\000\000y\010\000\000z\010\000\000{\010\000\000|\010\000\000}\010\000\000~t\000\000\001\t\000\000\002\t\000\000\003\t\000\000\004\t\000\000\005\t\000\000\006\t\000\000\007\t\000\000\010\t\000\000\t\t\000\000\n\t\000\000\013\t\000\000\014\t\000\000\r\t\000\000\016\t\000\000\017\t\000\000\020\t\000\000\021\t\000\000\022\t\000\000\023\t\000\000\024\t\000\000\025\t\000\000\026\t\000\000\027\t\000\000\030\t\000\000\031\t\000\000\032\t\000\000\033\t\000\000\034\t\000\000\035\t\000\000\036\t\000\000\037\t\000\000 \t\000\000!\t\000\000\"\t\000\000#\t\000\000$\t\000\000%\t\000\000&\t\000\000\'\t\000\000(\t\000\000)\t\000\000*\t\000\000+\t\000\000,\t\000\000-\t\000\000.\t\000\000/\t\000\0000\t\000\0001\t\000\0002\t\000\0003\t\000\0004\t\000\0005\t\000\0006\t\000\0007\t\000\0008\t\000\0009\t\000\000:\t\000\000;\t\000\000<\t\000\000=\t\000\000>\t\000\000?\t\000\000@\t\000\000A\t\000\000B\t\000\000C\t\000\000D\t\000\000E\t\000\000F\t\000\000G\t\000\000H\t\000\000I\t\000\000J\t\000\000K\t\000\000L\t\000\000M\t\000\000N\t\000\000O\t\000\000P\t\000\000Q\t\000\000R\t\000\000S\t\000\000T\t\000\000U\t\000\000V\t\000\000W\t\000\000X\t\000\000Y\t\000\000Z\t\000\000[\t\000\000\\\t\000\000]\t\000\000^\t\000\000_\t\000\000`\t\000\000a\t\000\000b\t\000\000c\t\000\000d\t\000\000e\t\000\000f\t\000\000g\t\000\000h\t\000\000i\t\000\000j\t\000\000k\t\000\000l\t\000\000m\t\000\000n\t\000\000o\t\000\000p\t\000\000q\t\000\000r\t\000\000s\t\000\000t\t\000\000u\t\000\000v\t\000\000w\t\000\000x\t\000\000y\t\000\000z\t\000\000{\t\000\000|\t\000\000}\t\000\000~\t\000\000\177\t\000\000\200\t\000\000\201\t\000\000\202\t\000\000\203\t\000\000\204\t\000\000\205\t\000\000\206\t\000\000\207\t\000\000\210\t\000\000\211\t\000\000\212\t\000\000\213\t\000\000\214\t\000\000\215\t\000\000\216\t\000\000\217\t\000\000\220\t\000\000\221\t\000\000\222\t\000\000\223\t\000\000\224\t\000\000\225\t\000\000\226\t\000\000\227\t\000\000\230\t\000\000\231\t\000\000\232\t\000\000\233\t\000\000\234\t\000\000\235\t\000\000\236\t\000\000\237\t\000\000\240\t\000\000\241\t\000\000\242\t\000\000\243\t\000\000\244\t\000\000\245\t\000\000\246\t\000\000\247\t\000\000\250\t\000\000\251\t\000\000\252\t\000\000\253\t\000\000\254\t\000\000\255\t\000\000\256\t\000\000\257\t\000\000\260\t\000\000\261\t\000\000\262\t\000\000\263\t\000\000\264\t\000\000\265\t\000\000\266\t\000\000\267\t\000\000\270\t\000\000\271\t\000\000\272\t\000\000\273\t\000\000\274\t\000\000\275\t\000\000\276\t\000\000\277\t\000\000\300\t\000\000\301\t\000\000\302\t\000\000\303\t\000\000\304\t\000\000\305\t\000\000\306\t\000\000\307\t\000\000\310\t\000\000\311\t\000\000\312\t\000\000\313\t\000\000\314\t\000\000\315\t\000\000\316\t\000\000\317\t\000\000\320\t\000\000\321\t\000\000\322\t\000\000\323\t\000\000\324\t\000\000\325\t\000\000\326\t\000\000\327\t\000\000\330\t\000\000\331\t\000\000\332\t\000\000\333\t\000\000\334\t\000\000\335\t\000\000\336\t\000\000\337\t\000\000\340\t\000\000\341\t\000\000\342\t\000\000\343\t\000\000\344\t\000\000\345\t\000\000\346\t\000\000\347\t\000\000\350\t\000\000\351\t\000\000\352\t\000\000\353\t\000\000\354\t\000\000\355\t\000\000\356\t\000\000\357\t\000\000\360\t\000\000\361\t\000\000\362\t\000\000\363\t\000\000\364\t\000\000\365\t\000\000\366\t\000\000\367\t\000\000\370\t\000\000\371\t\000\000\372\t\000\000\373\t\000\000\374\t\000\000\375\t\000\000\376\t\000\000\377\t\000\000\000\n\000\000\001\n\000\000\002\n\000\000\003\n\000\000\004\n\000\000\005\n\000\000\006\n\000\000\007\n\000\000\010\n\000\000\t\n\000\000\n\n\000\000\013\n\000\000\014\n\000\000\r\n\000\000\016\n\000\000\017\n\000\000\020\n\000\000\021\n\000\000\022\n\000\000\023\n\000\000\024\n\000\000\025\n\000\000\026\n\000\000\027\n\000\000\030\n\000\000\031\n\000\000\032\n\000\000\033\n\000\000\034\n\000\000\035\n\000\000\036\n\000\000\037\n\000\000 \n\000\000!\n\000\000\"\n\000\000#\n\000\000$\n\000\000%\n\000\000&\n\000\000\'\n\000\000(\n\000\000)\n\000\000*\n\000\000+\n\000\000,\n\000\000-\n\000\000.\n\000\000/\n\000\0000\n\000\0001\n\000\0002\n\000\0003\n\000\0004\n\000\0005\n\000\0006\n\000\0007\n\000\0008\n\000\0009\n\000\000:\n\000\000;\n\000\000<\n\000\000=\n\000\000>\n\000\000?\n\000\000@\n\000\000A\n\000\000B\n\000\000C\n\000\000D\n\000\000E\n\000\000F\n\000\000G\n\000\000H\n\000\000I\n\000\000J\n\000\000K\n\000\000L\n\000\000M\n\000\000N\n\000\000O\n\000\000P\n\000\000Q\n\000\000R\n\000\000S\n\000\000T\n\000\000U\n\000\000V\n\000\000W\n\000\000X\n\000\000Y\n\000\000Z\n\000\000[\n\000\000\\\n\000\000]\n\000\000^\n\000\000_\n\000\000`\n\000\000a\n\000\000b\n\000\000c\n\000\000d\n\000\000e\n\000\000f\n\000\000g\n\000\000h\n\000\000i\n\000\000j\n\000\000k\n\000\000l\n\000\000m\n\000\000n\n\000\000o\n\000\000p\n\000\000q\n\000\000r\n\000\000s\n\000\000t\n\000\000u\n\000\000v\n\000\000w\n\000\000x\n\000\000y\n\000\000z\n\000\000{\n\000\000|\n\000\000}\n\000\000~\n\000\000\177\n\000\000\200\n\000\000\201\n\000\000\202\n\000\000\203\n\000\000\204\n\000\000\205\n\000\000\206\n\000\000\207\n\000\000\210\n\000\000\211\n\000\000\212\n\000\000\213\n\000\000\214\n\000\000\215\n\000\000\216\n\000\000\217\n\000\000\220\n\000\000\221\n\000\000\222\n\000\000\223\n\000\000\224\n\000\000\225\n\000\000\226\n\000\000\227\n\000\000\230\n\000\000\231\n\000\000\232\n\000\000\233\n\000\000\234\n\000\000\235\n\000\000\236\n\000\000\237\n\000\000\240\n\000\000\241\n\000\000\242\n\000\000\243\n\000\000\244\n\000\000\245\n\000\000\246\n\000\000\247\n\000\000\250\n\000\000\251\n\000\000\252\n\000\000\253\n\000\000\254\n\000\000\255\n\000\000\256\n\000\000\257\n\000\000\260\n\000\000\261\n\000\000\262\n\000\000\263\n\000\000\264\n\000\000\265\n\000\000\266\n\000\000\267\n\000\000\270\n\000\000\271\n\000\000\272\n\000\000\273\n\000\000\274\n\000\000\275\n\000\000\276\n\000\000\277\n\000\000\300\n\000\000\301\n\000\000\302\n\000\000\303\n\000\000\304\n\000\000\305\n\000\000\306\n\000\000\307\n\000\000\310\n\000\000\311\n\000\000\312\n\000\000\313\n\000\000\314\n\000\000\315\n\000\000\316\n\000\000\317\n\000\000\320\n\000\000\321\n\000\000\322\n\000\000\323\n\000\000\324\n\000\000\325\n\000\000\326\n\000\000\327\n\000\000\330\n\000\000\331\n\000\000\332\n\000\000\333\n\000\000\334\n\000\000\335\n\000\000\336\n\000\000\337\n\000\000\340\n\000\000\341\n\000\000\342\n\000\000\343\n\000\000\344\n\000\000\345\n\000\000\346\n\000\000\347\n\000\000\350\n\000\000\351\n\000\000\352\n\000\000\353\n\000\000\354\n\000\000\355\n\000\000\356\n\000\000\357\n\000\000\360\n\000\000\361\n\000\000\362\n\000\000\363\n\000\000\364\n\000\000\365\n\000\000\366\n\000\000\367\n\000\000\370\n\000\000\371\n\000\000\372\n\000\000\373\n\000\000\374\n\000\000\375\n\000\000\376\n\000\000\377\n\000\000\000\013\000\000\001\013\000\000\002\013\000\000\003\013\000\000\004\013\000\000\005\013\000\000\006\013\000\000\007\013\000\000\010\013\000\000\t\013\000\000\n\013\000\000\013\013\000\000\014\013\000\000\r`\013\000\000a\013\000\000b\013\000\000c\013\000\000d\013\000\000e\013\000\000f\013\000\000g\013\000\000h\013\000\000i\013\000\000j\013\000\000k\013\000\000l\013\000\000m\013\000\000n\013\000\000o\013\000\000p\013\000\000q\013\000\000r\013\000\000s\013\000\000t\013\000\000u\013\000\000v\013\000\000w\013\000\000x\013\000\000y\013\000\000z\013\000\000{\013\000\000|\013\000\000}\013\000\000~t\014\000\000\n\014\000\000\013\014\000\000\014\014\000\000\r`\014\000\000a\014\000\000b\014\000\000c\014\000\000d\014\000\000e\014\000\000f\014\000\000g\014\000\000h\014\000\000i\014\000\000j\014\000\000k\014\000\000l\014\000\000m\014\000\000n\014\000\000o\014\000\000p\014\000\000q\014\000\000r\014\000\000s\014\000\000t\014\000\000u\014\000\000v\014\000\000w\014\000\000x\014\000\000y\014\000\000z\014\000\000{\014\000\000|\014\000\000}\014\000\000~\014\000\000\177\014\000\000\200\014\000\000\201\014\000\000\202\014\000\000\203\014\000\000\204\014\000\000\205\014\000\000\206\014\000\000\207\014\000\000\210\014\000\000\211\014\000\000\212\014\000\000\213\014\000\000\214\014\000\000\215\014\000\000\216\014\000\000\217\014\000\000\220\014\000\000\221\014\000\000\222\014\000\000\223\014\000\000\224\014\000\000\225\014\000\000\226\014\000\000\227\014\000\000\230\014\000\000\231\014\000\000\232\014\000\000\233\014\000\000\234\014\000\000\235\014\000\000\236\014\000\000\237\014\000\000\240\014\000\000\241\014\000\000\242\014\000\000\243\014\000\000\244\014\000\000\245\014\000\000\246\014\000\000\247\014\000\000\250\014\000\000\251\014\000\000\252\014\000\000\253\014\000\000\254\014\000\000\255\014\000\000\256\014\000\000\257\014\000\000\260\014\000\000\261\014\000\000\262\014\000\000\263\014\000\000\264\014\000\000\265\014\000\000\266\014\000\000\267\014\000\000\270\014\000\000\271\014\000\000\272\014\000\000\273\014\000\000\274\014\000\000\275\014\000\000\276\014\000\000\277\014\000\000\300\014\000\000\301\014\000\000\302\014\000\000\303\014\000\000\304\014\000\000\305\014\000\000\306\014\000\000\307\014\000\000\310\014\000\000\311\014\000\000\312\014\000\000\313\014\000\000\314\014\000\000\315\014\000\000\316\014\000\000\317\014\000\000\320\014\000\000\321\014\000\000\322\014\000\000\323\014\000\000\324\014\000\000\325\014\000\000\326\014\000\000\327\014\000\000\330\014\000\000\331\014\000\000\332\014\000\000\333\014\000\000\334\014\000\000\335\014\000\000\336\014\000\000\337\014\000\000\340\014\000\000\341\014\000\000\342\014\000\000\343\014\000\000\344\014\000\000\345\014\000\000\346\014\000\000\347\014\000\000\350\014\000\000\351\014\000\000\352\014\000\000\353\014\000\000\354\014\000\000\355\014\000\000\356\014\000\000\357\014\000\000\360\014\000\000\361\014\000\000\362\014\000\000\363\014\000\000\364\014\000\000\365\014\000\000\366\014\000\000\367\014\000\000\370\014\000\000\371\014\000\000\372\014\000\000\373\014\000\000\374\014\000\000\375\014\000\000\376\014\000\000\377\014\000\000\000\r\000\000\001\r\000\000\002\r\000\000\003\r\000\000\004\r\000\000\005\r\000\000\006\r\000\000\007\r\000\000\010\r\000\000\t\r\000\000\n\r\000\000\013\r\000\000\014\r\000\000\r\r\000\000\016\r\000\000\017\r\000\000\020\r\000\000\021\r\000\000\022\r\000\000\023\r\000\000\024\r\000\000\025\r\000\000\026\r\000\000\027\r\000\000\030\r\000\000\031\r\000\000\032\r\000\000\033\r\000\000\034\r\000\000\035\r\000\000\036\r\000\000\037\r\000\000 \r\000\000!\r\000\000\"\r\000\000#\r\000\000$\r\000\000%\r\000\000&\r\000\000\'\r\000\000(\r\000\000)\r\000\000*\r\000\000+\r\000\000,\r\000\000-\r\000\000.\r\000\000/\r\000\0000\r\000\0001\r\000\0002\r\000\0003\r\000\0004\r\000\0005\r\000\0006\r\000\0007\r\000\0008\r\000\0009\r\000\000:\r\000\000;\r\000\000<\r\000\000=\r\000\000>\r\000\000?\r\000\000@\r\000\000A\r\000\000B\r\000\000C\r\000\000D\r\000\000E\r\000\000F\r\000\000G\r\000\000H\r\000\000I\r\000\000J\r\000\000K\r\000\000L\r\000\000M\r\000\000N\r\000\000O\r\000\000P\r\000\000Q\r\000\000R\r\000\000S\r\000\000T\r\000\000U\r\000\000V\r\000\000W\r\000\000X\r\000\000Y\r\000\000Z\r\000\000[\r\000\000\\\r\000\000]\r\000\000^\r\000\000_\r\000\000`\r\000\000a\r\000\000b\r\000\000c\r\000\000d\r\000\000e\r\000\000f\r\000\000g\r\000\000h\r\000\000i\r\000\000j\r\000\000k\r\000\000l\r\000\000m\r\000\000n\r\000\000o\r\000\000p\r\000\000q\r\000\000r\r\000\000s\r\000\000t\r\000\000u\r\000\000v\r\000\000w\r\000\000x\r\000\000y\r\000\000z\r\000\000{\r\000\000|\r\000\000}\r\000\000~\r\000\000\177\r\000\000\200\r\000\000\201\r\000\000\202\r\000\000\203\r\000\000\204\r\000\000\205\r\000\000\206\r\000\000\207\r\000\000\210\r\000\000\211\r\000\000\212\r\000\000\213\r\000\000\214\r\000\000\215\r\000\000\216\r\000\000\217\r\000\000\220\r\000\000\221\r\000\000\222\r\000\000\223\r\000\000\224\r\000\000\225\r\000\000\226\r\000\000\227\r\000\000\230\r\000\000\231\r\000\000\232\r\000\000\233\r\000\000\234\r\000\000\235\r\000\000\236\r\000\000\237\r\000\000\240\r\000\000\241\r\000\000\242\r\000\000\243\r\000\000\244\r\000\000\245\r\000\000\246\r\000\000\247\r\000\000\250\r\000\000\251\r\000\000\252\r\000\000\253\r\000\000\254\r\000\000\255\r\000\000\256\r\000\000\257\r\000\000\260\r\000\000\261\r\000\000\262\r\000\000\263\r\000\000\264\r\000\000\265\r\000\000\266\r\000\000\267\r\000\000\270\r\000\000\271\r\000\000\272\r\000\000\273\r\000\000\274\r\000\000\275\r\000\000\276\r\000\000\277\r\000\000\300\r\000\000\301\r\000\000\302\r\000\000\303\r\000\000\304\r\000\000\305\r\000\000\306\r\000\000\307\r\000\000\310\r\000\000\311\r\000\000\312\r\000\000\313\r\000\000\314\r\000\000\315\r\000\000\316\r\000\000\317\r\000\000\320\r\000\000\321\r\000\000\322\r\000\000\323\r\000\000\324\r\000\000\325\r\000\000\326\r\000\000\327\r\000\000\330\r\000\000\331\r\000\000\332\r\000\000\333\r\000\000\334\r\000\000\335\r\000\000\336\r\000\000\337\r\000\000\340\r\000\000\341\r\000\000\342\r\000\000\343\r\000\000\344\r\000\000\345\r\000\000\346\r\000\000\347\r\000\000\350\r\000\000\351\r\000\000\352\r\000\000\353\r\000\000\354\r\000\000\355\r\000\000\356\r\000\000\357\r\000\000\360\r\000\000\361\r\000\000\362\r\000\000\363\r\000\000\364\r\000\000\365\r\000\000\366\r\000\000\367\r\000\000\370\r\000\000\371\r\000\000\372\r\000\000\373\r\000\000\374\r\000\000\375\r\000\000\376\r\000\000\377\r\000\000\000\016\000\000\001\016\000\000\002\016\000\000\003\016\000\000\004\016\000\000\005\016\000\000\006\016\000\000\007\016\000\000\010\016\000\000\t\016\000\000\n\016\000\000\013\016\000\000\014\016\000\000\r`\016\000\000a\016\000\000b\016\000\000c\016\000\000d\016\000\000e\016\000\000f\016\000\000g\016\000\000h\016\000\000i\016\000\000j\016\000\000k\016\000\000l\016\000\000m\016\000\000n\016\000\000o\016\000\000p\016\000\000q\016\000\000r\016\000\000s\016\000\000t\016\000\000u\016\000\000v\016\000\000w\016\000\000x\016\000\000y\016\000\000z\016\000\000{\016\000\000|\016\000\000}\016\000\000~t\017\000\000\n\017\000\000\013\017\000\000\014\017\000\000\r`\017\000\000a\017\000\000b\017\000\000c\017\000\000d\017\000\000e\017\000\000f\017\000\000g\017\000\000h\017\000\000i\017\000\000j\017\000\000k\017\000\000l\017\000\000m\017\000\000n\017\000\000o\017\000\000p\017\000\000q\017\000\000r\017\000\000s\017\000\000t\017\000\000u\017\000\000v\017\000\000w\017\000\000x\017\000\000y\017\000\000z\017\000\000{\017\000\000|\017\000\000}\017\000\000~t\020\000\000\n\020\000\000\013\020\000\000\014\020\000\000\r`\020\000\000a\020\000\000b\020\000\000c\020\000\000d\020\000\000e\020\000\000f\020\000\000g\020\000\000h\020\000\000i\020\000\000j\020\000\000k\020\000\000l\020\000\000m\020\000\000n\020\000\000o\020\000\000p\020\000\000q\020\000\000r\020\000\000s\020\000\000t\020\000\000u\020\000\000v\020\000\000w\020\000\000x\020\000\000y\020\000\000z\020\000\000{\020\000\000|\020\000\000}\020\000\000~t\021\000\000\n\021\000\000\013\021\000\000\014\021\000\000\r`\021\000\000a\021\000\000b\021\000\000c\021\000\000d\021\000\000e\021\000\000f\021\000\000g\021\000\000h\021\000\000i\021\000\000j\021\000\000k\021\000\000l\021\000\000m\021\000\000n\021\000\000o\021\000\000p\021\000\000q\021\000\000r\021\000\000s\021\000\000t\021\000\000u\021\000\000v\021\000\000w\021\000\000x\021\000\000y\021\000\000z\021\000\000{\021\000\000|\021\000\000}\021\000\000~\021\000\000\177\021\000\000\200\021\000\000\201\021\000\000\202\021\000\000\203\021\000\000\204\021\000\000\205\021\000\000\206\021\000\000\207\021\000\000\210\021\000\000\211\021\000\000\212\021\000\000\213\021\000\000\214\021\000\000\215\021\000\000\216\021\000\000\217\021\000\000\220\021\000\000\221\021\000\000\222\021\000\000\223\021\000\000\224\021\000\000\225\021\000\000\226\021\000\000\227\021\000\000\230\021\000\000\231\021\000\000\232\021\000\000\233\021\000\000\234\021\000\000\235\021\000\000\236\021\000\000\237\021\000\000\240\021\000\000\241\021\000\000\242\021\000\000\243\021\000\000\244\021\000\000\245\021\000\000\246\021\000\000\247\021\000\000\250\021\000\000\251\021\000\000\252\021\000\000\253\021\000\000\254\021\000\000\255\021\000\000\256\021\000\000\257\021\000\000\260\021\000\000\261\021\000\000\262\021\000\000\263\021\000\000\264\021\000\000\265\021\000\000\266\021\000\000\267\021\000\000\270\021\000\000\271\021\000\000\272\021\000\000\273\021\000\000\274\021\000\000\275\021\000\000\276\021\000\000\277\021\000\000\300\021\000\000\301\021\000\000\302\021\000\000\303\021\000\000\304\021\000\000\305\021\000\000\306\021\000\000\307\021\000\000\310\021\000\000\311\021\000\000\312\021\000\000\313\021\000\000\314\021\000\000\315\021\000\000\316\021\000\000\317\021\000\000\320\021\000\000\321\021\000\000\322\021\000\000\323\021\000\000\324\021\000\000\325\021\000\000\326\021\000\000\327\021\000\000\330\021\000\000\331\021\000\000\332\021\000\000\333\021\000\000\334\021\000\000\335\021\000\000\336\021\000\000\337\021\000\000\340\021\000\000\341\021\000\000\342\021\000\000\343\021\000\000\344\021\000\000\345\021\000\000\346\021\000\000\347\021\000\000\350\021\000\000\351\021\000\000\352\021\000\000\353\021\000\000\354\021\000\000\355\021\000\000\356\021\000\000\357\021\000\000\360\021\000\000\361\021\000\000\362\021\000\000\363\021\000\000\364\021\000\000\365\021\000\000\366\021\000\000\367\021\000\000\370\021\000\000\371\021\000\000\372\021\000\000\373\021\000\000\374\021\000\000\375\021\000\000\376\021\000\000\377\021\000\000\000\022\000\000\001\022\000\000\002\022\000\000\003\022\000\000\004\022\000\000\005\022\000\000\006\022\000\000\007\022\000\000\010\022\000\000\t\022\000\000\n\022\000\000\013\022\000\000\014\022\000\000\r`\022\000\000a\022\000\000b\022\000\000c\022\000\000d\022\000\000e\022\000\000f\022\000\000g\022\000\000h\022\000\000i\022\000\000j\022\000\000k\022\000\000l\022\000\000m\022\000\000n\022\000\000o\022\000\000p\022\000\000q\022\000\000r\022\000\000s\022\000\000t\022\000\000u\022\000\000v\022\000\000w\022\000\000x\022\000\000y\022\000\000z\022\000\000{\022\000\000|\022\000\000}\022\000\000~t\023\000\000\n\023\000\000\013\023\000\000\014\023\000\000\r`\023\000\000a\023\000\000b\023\000\000c\023\000\000d\023\000\000e\023\000\000f\023\000\000g\023\000\000h\023\000\000i\023\000\000j\023\000\000k\023\000\000l\023\000\000m\023\000\000n\023\000\000o\023\000\000p\023\000\000q\023\000\000r\023\000\000s\023\000\000t\023\000\000u\023\000\000v\023\000\000w\023\000\000x\023\000\000y\023\000\000z\023\000\000{\023\000\000|\023\000\000}\023\000\000~t\024\000\000\n\024\000\000\013\024\000\000\014\024\000\000\r`\024\000\000a\024\000\000b\024\000\000c\024\000\000d\024\000\000e\024\000\000f\024\000\000g\024\000\000h\024\000\000i\024\000\000j\024\000\000k\024\000\000l\024\000\000m\024\000\000n\024\000\000o\024\000\000p\024\000\000q\024\000\000r\024\000\000s\024\000\000t\024\000\000u\024\000\000v\024\000\000w\024\000\000x\024\000\000y\024\000\000z\024\000\000{\024\000\000|\024\000\000}\024\000\000~t\025\000\000\n\025\000\000\013\025\000\000\014\025\000\000\r`\025\000\000a\025\000\000b\025\000\000c\025\000\000d\025\000\000e\025\000\000f\025\000\000g\025\000\000h\025\000\000i\025\000\000j\025\000\000k\025\000\000l\025\000\000m\025\000\000n\025\000\000o\025\000\000p\025\000\000q\025\000\000r\025\000\000s\025\000\000t\025\000\000u\025\000\000v\025\000\000w\025\000\000x\025\000\000y\025\000\000z\025\000\000{\025\000\000|\025\000\000}\025\000\000~t\026\000\000\n\026\000\000\013\026\000\000\014\026\000\000\r`\026\000\000a\026\000\000b\026\000\000c\026\000\000d\026\000\000e\026\000\000f\026\000\000g\026\000\000h\026\000\000i\026\000\000j\026\000\000k\026\000\000l\026\000\000m\026\000\000n\026\000\000o\026\000\000p\026\000\000q\026\000\000r\026\000\000s\026\000\000t\026\000\000u\026\000\000v\026\000\000w\026\000\000x\026\000\000y\026\000\000z\026\000\000{\026\000\000|\026\000\000}\026\000\000~\026\000\000\177\026\000\000\200\026\000\000\201\026\000\000\202\026\000\000\203\026\000\000\204\026\000\000\205\026\000\000\206\026\000\000\207\026\000\000\210\026\000\000\211\026\000\000\212\026\000\000\213\026\000\000\214\026\000\000\215\026\000\000\216\026\000\000\217\026\000\000\220\026\000\000\221\026\000\000\222\026\000\000\223\026\000\000\224\026\000\000\225\026\000\000\226\026\000\000\227\026\000\000\230\026\000\000\231\026\000\000\232\026\000\000\233\026\000\000\234\026\000\000\235\026\000\000\236\026\000\000\237\026\000\000\240\026\000\000\241\026\000\000\242\026\000\000\243\026\000\000\244\026\000\000\245\026\000\000\246\026\000\000\247\026\000\000\250\026\000\000\251\026\000\000\252\026\000\000\253\026\000\000\254\026\000\000\255\026\000\000\256\026\000\000\257\026\000\000\260\026\000\000\261\026\000\000\262\026\000\000\263\026\000\000\264\026\000\000\265\026\000\000\266\026\000\000\267\026\000\000\270\026\000\000\271\026\000\000\272\026\000\000\273\026\000\000\274\026\000\000\275\026\000\000\276\026\000\000\277\026\000\000\300\026\000\000\301\026\000\000\302\026\000\000\303\026\000\000\304\026\000\000\305\026\000\000\306\026\000\000\307\026\000\000\310\026\000\000\311\026\000\000\312\026\000\000\313\026\000\000\314\026\000\000\315\026\000\000\316\026\000\000\317\026\000\000\320\026\000\000\321\026\000\000\322\026\000\000\323\026\000\000\324\026\000\000\325\026\000\000\326\026\000\000\327\026\000\000\330\026\000\000\331\026\000\000\332\026\000\000\333\026\000\000\334\026\000\000\335\026\000\000\336\026\000\000\337\026\000\000\340\026\000\000\341\026\000\000\342\026\000\000\343\026\000\000\344\026\000\000\345\026\000\000\346\026\000\000\347\026\000\000\350\026\000\000\351\026\000\000\352\026\000\000\353\026\000\000\354\026\000\000\355\026\000\000\356\026\000\000\357\026\000\000\360\026\000\000\361\026\000\000\362\026\000\000\363\026\000\000\364\026\000\000\365\026\000\000\366\026\000\000\367\026\000\000\370\026\000\000\371\026\000\000\372\026\000\000\373\026\000\000\374\026\000\000\375\026\000\000\376\026\000\000\377\026\000\000\000\027\000\000\001\027\000\000\002\027\000\000\003\027\000\000\004\027\000\000\005\027\000\000\006\027\000\000\007\027\000\000\010\027\000\000\t\027\000\000\n\027\000\000\013\027\000\000\014\027\000\000\r`\027\000\000a\027\000\000b\027\000\000c\027\000\000d\027\000\000e\027\000\000f\027\000\000g\027\000\000h\027\000\000i\027\000\000j\027\000\000k\027\000\000l\027\000\000m\027\000\000n\027\000\000o\027\000\000p\027\000\000q\027\000\000r\027\000\000s\027\000\000t\027\000\000u\027\000\000v\027\000\000w\027\000\000x\027\000\000y\027\000\000z\027\000\000{\027\000\000|\027\000\000}\027\000\000~t\030\000\000\n\030\000\000\013\030\000\000\014\030\000\000\r\030\000\000\016\030\000\000\017\030\000\000\020\030\000\000\021\030\000\000\022\030\000\000\023\030\000\000\024\030\000\000\025\030\000\000\026\030\000\000\027\030\000\000\030\030\000\000\031\030\000\000\032\030\000\000\033\030\000\000\034\030\000\000\035\030\000\000\036\030\000\000\037\030\000\000 \030\000\000!\030\000\000\"\030\000\000#\030\000\000$\030\000\000%\030\000\000&\030\000\000\'\030\000\000(\030\000\000)\030\000\000*\030\000\000+\030\000\000,\030\000\000-\030\000\000.\030\000\000/\030\000\0000\030\000\0001\030\000\0002\030\000\0003\030\000\0004\030\000\0005\030\000\0006\030\000\0007\030\000\0008\030\000\0009\030\000\000:\030\000\000;\030\000\000<\030\000\000=\030\000\000>\030\000\000?\030\000\000@\030\000\000A\030\000\000B\030\000\000C\030\000\000D\030\000\000E\030\000\000F\030\000\000G\030\000\000H\030\000\000I\030\000\000J\030\000\000K\030\000\000L\030\000\000M\030\000\000N\030\000\000O\030\000\000P\030\000\000Q\030\000\000R\030\000\000S\030\000\000T\030\000\000U\030\000\000V\030\000\000W\030\000\000X\030\000\000Y\030\000\000Z\030\000\000[\030\000\000\\\030\000\000]\030\000\000^\030\000\000_\030\000\000`\030\000\000a\030\000\000b\030\000\000c\030\000\000d\030\000\000e\030\000\000f\030\000\000g\030\000\000h\030\000\000i\030\000\000j\030\000\000k\030\000\000l\030\000\000m\030\000\000n\030\000\000o\030\000\000p\030\000\000q\030\000\000r\030\000\000s\030\000\000t\030\000\000u\030\000\000v\030\000\000w\030\000\000x\030\000\000y\030\000\000z\030\000\000{\030\000\000|\030\000\000}\030\000\000~t\031\000\000\n\031\000\000\013\031\000\000\014\031\000\000\r`\031\000\000a\031\000\000b\031\000\000c\031\000\000d\031\000\000e\031\000\000f\031\000\000g\031\000\000h\031\000\000i\031\000\000j\031\000\000k\031\000\000l\031\000\000m\031\000\000n\031\000\000o\031\000\000p\031\000\000q\031\000\000r\031\000\000s\031\000\000t\031\000\000u\031\000\000v\031\000\000w\031\000\000x\031\000\000y\031\000\000z\031\000\000{\031\000\000|\031\000\000}\031\000\000~t\032\000\000\n\032\000\000\013\032\000\000\014\032\000\000\r`\032\000\000a\032\000\000b\032\000\000c\032\000\000d\032\000\000e\032\000\000f\032\000\000g\032\000\000h\032\000\000i\032\000\000j\032\000\000k\032\000\000l\032\000\000m\032\000\000n\032\000\000o\032\000\000p\032\000\000q\032\000\000r\032\000\000s\032\000\000t\032\000\000u\032\000\000v\032\000\000w\032\000\000x\032\000\000y\032\000\000z\032\000\000{\032\000\000|\032\000\000}\032\000\000~t\033\000\000\n\033\000\000\013\033\000\000\014\033\000\000\r`\033\000\000a\033\000\000b\033\000\000c\033\000\000d\033\000\000e\033\000\000f\033\000\000g\033\000\000h\033\000\000i\033\000\000j\033\000\000k\033\000\000l\033\000\000m\033\000\000n\033\000\000o\033\000\000p\033\000\000q\033\000\000r\033\000\000s\033\000\000t\033\000\000u\033\000\000v\033\000\000w\033\000\000x\033\000\000y\033\000\000z\033\000\000{\033\000\000|\033\000\000}\033\000\000~t\034\000\000\n\034\000\000\013\034\000\000\014\034\000\000\r`\034\000\000a\034\000\000b\034\000\000c\034\000\000d\034\000\000e\034\000\000f\034\000\000g\034\000\000h\034\000\000i\034\000\000j\034\000\000k\034\000\000l\034\000\000m\034\000\000n\034\000\000o\034\000\000p\034\000\000q\034\000\000r\034\000\000s\034\000\000t\034\000\000u\034\000\000v\034\000\000w\034\000\000x\034\000\000y\034\000\000z\034\000\000{\034\000\000|\034\000\000}\034\000\000~t\035\000\000\n\035\000\000\013\035\000\000\014\035\000\000\r`\035\000\000a\035\000\000b\035\000\000c\035\000\000d\035\000\000e\035\000\000f\035\000\000g\035\000\000h\035\000\000i\035\000\000j\035\000\000k\035\000\000l\035\000\000m\035\000\000n\035\000\000o\035\000\000p\035\000\000q\035\000\000r\035\000\000s\035\000\000t\035\000\000u\035\000\000v\035\000\000w\035\000\000x\035\000\000y\035\000\000z\035\000\000{\035\000\000|\035\000\000}\035\000\000~t\036\000\000\n\036\000\000\013\036\000\000\014\036\000\000\r`\036\000\000a\036\000\000b\036\000\000c\036\000\000d\036\000\000e\036\000\000f\036\000\000g\036\000\000h\036\000\000i\036\000\000j\036\000\000k\036\000\000l\036\000\000m\036\000\000n\036\000\000o\036\000\000p\036\000\000q\036\000\000r\036\000\000s\036\000\000t\036\000\000u\036\000\000v\036\000\000w\036\000\000x\036\000\000y\036\000\000z\036\000\000{\036\000\000|\036\000\000}\036\000\000~t\037\000\000\n\037\000\000\013\037\000\000\014\037\000\000\r`\037\000\000a\037\000\000b\037\000\000c\037\000\000d\037\000\000e\037\000\000f\037\000\000g\037\000\000h\037\000\000i\037\000\000j\037\000\000k\037\000\000l\037\000\000m\037\000\000n\037\000\000o\037\000\000p\037\000\000q\037\000\000r\037\000\000s\037\000\000t\037\000\000u\037\000\000v\037\000\000w\037\000\000x\037\000\000y\037\000\000z\037\000\000{\037\000\000|\037\000\000}\037\000\000~t \000\000\n \000\000\013 \000\000\014 \000\000\r \000\000\016 \000\000\017 \000\000\020 \000\000\021 \000\000\022 \000\000\023 \000\000\024 \000\000\025 \000\000\026 \000\000\027 \000\000\030 \000\000\031 \000\000\032 \000\000\033 \000\000\034 \000\000\035 \000\000\036 \000\000\037 \000\000  \000\000! \000\000\" \000\000# \000\000$ \000\000% \000\000& \000\000\' \000\000( \000\000) \000\000* \000\000+ \000\000, \000\000- \000\000. \000\000/ \000\0000 \000\0001 \000\0002 \000\0003 \000\0004 \000\0005 \000\0006 \000\0007 \000\0008 \000\0009 \000\000: \000\000; \000\000< \000\000= \000\000> \000\000? \000\000@ \000\000A \000\000B \000\000C \000\000D \000\000E \000\000F \000\000G \000\000H \000\000I \000\000J \000\000K \000\000L \000\000M \000\000N \000\000O \000\000P \000\000Q \000\000R \000\000S \000\000T \000\000U \000\000V \000\000W \000\000X \000\000Y \000\000Z \000\000[ \000\000\\ \000\000] \000\000^ \000\000_ \000\000` \000\000a \000\000b \000\000c \000\000d \000\000e \000\000f \000\000g \000\000h \000\000i \000\000j \000\000k \000\000l \000\000m \000\000n \000\000o \000\000p \000\000q \000\000r \000\000s \000\000t \000\000u \000\000v \000\000w \000\000x \000\000y \000\000z \000\000{ \000\000| \000\000} \000\000~ \000\000\177 \000\000\200 \000\000\201 \000\000\202 \000\000\203 \000\000\204 \000\000\205 \000\000\206 \000\000\207 \000\000\210 \000\000\211 \000\000\212 \000\000\213 \000\000\214 \000\000\215 \000\000\216 \000\000\217 \000\000\220 \000\000\221 \000\000\222 \000\000\223 \000\000\224 \000\000\225 \000\000\226 \000\000\227 \000\000\230 \000\000\231 \000\000\232 \000\000\233 \000\000\234 \000\000\235 \000\000\236 \000\000\237 \000\000\240 \000\000\241 \000\000\242 \000\000\243 \000\000\244 \000\000\245 \000\000\246 \000\000\247 \000\000\250 \000\000\251 \000\000\252 \000\000\253 \000\000\254 \000\000\255 \000\000\256 \000\000\257 \000\000\260 \000\000\261 \000\000\262 \000\000\263 \000\000\264 \000\000\265 \000\000\266 \000\000\267 \000\000\270 \000\000\271 \000\000\272 \000\000\273 \000\000\274 \000\000\275 \000\000\276 \000\000\277 \000\000\300 \000\000\301 \000\000\302 \000\000\303 \000\000\304 \000\000\305 \000\000\306 \000\000\307 \000\000\310 \000\000\311 \000\000\312 \000\000\313 \000\000\314 \000\000\315 \000\000\316 \000\000\317 \000\000\320 \000\000\321 \000\000\322 \000\000\323 \000\000\324 \000\000\325 \000\000\326 \000\000\327 \000\000\330 \000\000\331 \000\000\332 \000\000\333 \000\000\334 \000\000\335 \000\000\336 \000\000\337 \000\000\340 \000\000\341 \000\000\342 \000\000\343 \000\000\344 \000\000\345 \000\000\346 \000\000\347 \000\000\350 \000\000\351 \000\000\352 \000\000\353 \000\000\354 \000\000\355 \000\000\356 \000\000\357 \000\000\360 \000\000\361 \000\000\362 \000\000\363 \000\000\364 \000\000\365 \000\000\366 \000\000\367 \000\000\370 \000\000\371 \000\000\372 \000\000\373 \000\000\374 \000\000\375 \000\000\376 \000\000\377 \000\000\000!\000\000\001!\000\000\002!\000\000\003!\000\000\004!\000\000\005!\000\000\006!\000\000\007!\000\000\010!\000\000\t!\000\000\n!\000\000\013!\000\000\014!\000\000\r!\000\000\016!\000\000\017!\000\000\020!\000\000\021!\000\000\022!\000\000\023!\000\000\024!\000\000\025!\000\000\026!\000\000\027!\000\000\030!\000\000\031!\000\000\032!\000\000\033!\000\000\034!\000\000\035!\000\000\036!\000\000\037!\000\000 !\000\000!!\000\000\"!\000\000#!\000\000$!\000\000%!\000\000&!\000\000\'!\000\000(!\000\000)!\000\000*!\000\000+!\000\000,!\000\000-!\000\000.!\000\000/!\000\0000!\000\0001!\000\0002!\000\0003!\000\0004!\000\0005!\000\0006!\000\0007!\000\0008!\000\0009!\000\000:!\000\000;!\000\000<!\000\000=!\000\000>!\000\000?!\000\000@!\000\000A!\000\000B!\000\000C!\000\000D!\000\000E!\000\000F!\000\000G!\000\000H!\000\000I!\000\000J!\000\000K!\000\000L!\000\000M!\000\000N!\000\000O!\000\000P!\000\000Q!\000\000R!\000\000S!\000\000T!\000\000U!\000\000V!\000\000W!\000\000X!\000\000Y!\000\000Z!\000\000[!\000\000\\!\000\000]!\000\000^!\000\000_!\000\000`!\000\000a!\000\000b!\000\000c!\000\000d!\000\000e!\000\000f!\000\000g!\000\000h!\000\000i!\000\000j!\000\000k!\000\000l!\000\000m!\000\000n!\000\000o!\000\000p!\000\000q!\000\000r!\000\000s!\000\000t!\000\000u!\000\000v!\000\000w!\000\000x!\000\000y!\000\000z!\000\000{!\000\000|!\000\000}!\000\000~!\000\000\177!\000\000\200!\000\000\201!\000\000\202!\000\000\203!\000\000\204!\000\000\205!\000\000\206!\000\000\207!\000\000\210!\000\000\211!\000\000\212!\000\000\213!\000\000\214!\000\000\215!\000\000\216!\000\000\217!\000\000\220!\000\000\221!\000\000\222!\000\000\223!\000\000\224!\000\000\225!\000\000\226!\000\000\227!\000\000\230!\000\000\231!\000\000\232!\000\000\233!\000\000\234!\000\000\235!\000\000\236!\000\000\237!\000\000\240!\000\000\241!\000\000\242!\000\000\243!\000\000\244!\000\000\245!\000\000\246!\000\000\247!\000\000\250!\000\000\251!\000\000\252!\000\000\253!\000\000\254!\000\000\255!\000\000\256!\000\000\257!\000\000\260!\000\000\261!\000\000\262!\000\000\263!\000\000\264!\000\000\265!\000\000\266!\000\000\267!\000\000\270!\000\000\271!\000\000\272!\000\000\273!\000\000\274!\000\000\275!\000\000\276!\000\000\277!\000\000\300!\000\000\301!\000\000\302!\000\000\303!\000\000\304!\000\000\305!\000\000\306!\000\000\307!\000\000\310!\000\000\311!\000\000\312!\000\000\313!\000\000\314!\000\000\315!\000\000\316!\000\000\317!\000\000\320!\000\000\321!\000\000\322!\000\000\323!\000\000\324!\000\000\325!\000\000\326!\000\000\327!\000\000\330!\000\000\331!\000\000\332!\000\000\333!\000\000\334!\000\000\335!\000\000\336!\000\000\337!\000\000\340!\000\000\341!\000\000\342!\000\000\343!\000\000\344!\000\000\345!\000\000\346!\000\000\347!\000\000\350!\000\000\351!\000\000\352!\000\000\353!\000\000\354!\000\000\355!\000\000\356!\000\000\357!\000\000\360!\000\000\361!\000\000\362!\000\000\363!\000\000\364!\000\000\365!\000\000\366!\000\000\367!\000\000\370!\000\000\371!\000\000\372!\000\000\373!\000\000\374!\000\000\375!\000\000\376!\000\000\377!\000\000\000\"\000\000\001\"\000\000\002\"\000\000\003\"\000\000\004\"\000\000\005\"\000\000\006\"\000\000\007\"\000\000\010\"\000\000\t\"\000\000\n\"\000\000\013\"\000\000\014\"\000\000\r`\"\000\000a\"\000\000b\"\000\000c\"\000\000d\"\000\000e\"\000\000f\"\000\000g\"\000\000h\"\000\000i\"\000\000j\"\000\000k\"\000\000l\"\000\000m\"\000\000n\"\000\000o\"\000\000p\"\000\000q\"\000\000r\"\000\000s\"\000\000t\"\000\000u\"\000\000v\"\000\000w\"\000\000x\"\000\000y\"\000\000z\"\000\000{\"\000\000|\"\000\000}\"\000\000~\"\000\000\177\"\000\000\200\"\000\000\201\"\000\000\202\"\000\000\203\"\000\000\204\"\000\000\205\"\000\000\206\"\000\000\207\"\000\000\210\"\000\000\211\"\000\000\212\"\000\000\213\"\000\000\214\"\000\000\215\"\000\000\216\"\000\000\217\"\000\000\220\"\000\000\221\"\000\000\222\"\000\000\223\"\000\000\224\"\000\000\225\"\000\000\226\"\000\000\227\"\000\000\230\"\000\000\231\"\000\000\232\"\000\000\233\"\000\000\234\"\000\000\235\"\000\000\236\"\000\000\237\"\000\000\240\"\000\000\241\"\000\000\242\"\000\000\243\"\000\000\244\"\000\000\245\"\000\000\246\"\000\000\247\"\000\000\250\"\000\000\251\"\000\000\252\"\000\000\253\"\000\000\254\"\000\000\255\"\000\000\256\"\000\000\257\"\000\000\260\"\000\000\261\"\000\000\262\"\000\000\263\"\000\000\264\"\000\000\265\"\000\000\266\"\000\000\267\"\000\000\270\"\000\000\271\"\000\000\272\"\000\000\273\"\000\000\274\"\000\000\275\"\000\000\276\"\000\000\277\"\000\000\300\"\000\000\301\"\000\000\302\"\000\000\303\"\000\000\304\"\000\000\305\"\000\000\306\"\000\000\307\"\000\000\310\"\000\000\311\"\000\000\312\"\000\000\313\"\000\000\314\"\000\000\315\"\000\000\316\"\000\000\317\"\000\000\320\"\000\000\321\"\000\000\322\"\000\000\323\"\000\000\324\"\000\000\325\"\000\000\326\"\000\000\327\"\000\000\330\"\000\000\331\"\000\000\332\"\000\000\333\"\000\000\334\"\000\000\335\"\000\000\336\"\000\000\337\"\000\000\340\"\000\000\341\"\000\000\342\"\000\000\343\"\000\000\344\"\000\000\345\"\000\000\346\"\000\000\347\"\000\000\350\"\000\000\351\"\000\000\352\"\000\000\353\"\000\000\354\"\000\000\355\"\000\000\356\"\000\000\357\"\000\000\360\"\000\000\361\"\000\000\362\"\000\000\363\"\000\000\364\"\000\000\365\"\000\000\366\"\000\000\367\"\000\000\370\"\000\000\371\"\000\000\372\"\000\000\373\"\000\000\374\"\000\000\375\"\000\000\376\"\000\000\377\"\000\000\000#\000\000\001#\000\000\002#\000\000\003#\000\000\004#\000\000\005#\000\000\006#\000\000\007#\000\000\010#\000\000\t#\000\000\n#\000\000\013#\000\000\014#\000\000\r#\000\000\016#\000\000\017#\000\000\020#\000\000\021#\000\000\022#\000\000\023#\000\000\024#\000\000\025#\000\000\026#\000\000\027#\000\000\030#\000\000\031#\000\000\032#\000\000\033#\000\000\034#\000\000\035#\000\000\036#\000\000\037#\000\000 #\000\000!#\000\000\"#\000\000##\000\000$#\000\000%#\000\000&#\000\000\'#\000\000(#\000\000)#\000\000*#\000\000+#\000\000,#\000\000-#\000\000.#\000\000/#\000\0000#\000\0001#\000\0002#\000\0003#\000\0004#\000\0005#\000\0006#\000\0007#\000\0008#\000\0009#\000\000:#\000\000;#\000\000<#\000\000=#\000\000>#\000\000?#\000\000@#\000\000A#\000\000B#\000\000C#\000\000D#\000\000E#\000\000F#\000\000G#\000\000H#\000\000I#\000\000J#\000\000K#\000\000L#\000\000M#\000\000N#\000\000O#\000\000P#\000\000Q#\000\000R#\000\000S#\000\000T#\000\000U#\000\000V#\000\000W#\000\000X#\000\000Y#\000\000Z#\000\000[#\000\000\\#\000\000]#\000\000^#\000\000_#\000\000`#\000\000a#\000\000b#\000\000c#\000\000d#\000\000e#\000\000f#\000\000g#\000\000h#\000\000i#\000\000j#\000\000k#\000\000l#\000\000m#\000\000n#\000\000o#\000\000p#\000\000q#\000\000r#\000\000s#\000\000t#\000\000u#\000\000v#\000\000w#\000\000x#\000\000y#\000\000z#\000\000{#\000\000|#\000\000}#\000\000~#\000\000\177#\000\000\200#\000\000\201#\000\000\202#\000\000\203#\000\000\204#\000\000\205#\000\000\206#\000\000\207#\000\000\210#\000\000\211#\000\000\212#\000\000\213#\000\000\214#\000\000\215#\000\000\216#\000\000\217#\000\000\220#\000\000\221#\000\000\222#\000\000\223#\000\000\224#\000\000\225#\000\000\226#\000\000\227#\000\000\230#\000\000\231#\000\000\232#\000\000\233#\000\000\234#\000\000\235#\000\000\236#\000\000\237#\000\000\240#\000\000\241#\000\000\242#\000\000\243#\000\000\244#\000\000\245#\000\000\246#\000\000\247#\000\000\250#\000\000\251#\000\000\252#\000\000\253#\000\000\254#\000\000\255#\000\000\256#\000\000\257#\000\000\260#\000\000\261#\000\000\262#\000\000\263#\000\000\264#\000\000\265#\000\000\266#\000\000\267#\000\000\270#\000\000\271#\000\000\272#\000\000\273#\000\000\274#\000\000\275#\000\000\276#\000\000\277#\000\000\300#\000\000\301#\000\000\302#\000\000\303#\000\000\304#\000\000\305#\000\000\306#\000\000\307#\000\000\310#\000\000\311#\000\000\312#\000\000\313#\000\000\314#\000\000\315#\000\000\316#\000\000\317#\000\000\320#\000\000\321#\000\000\322#\000\000\323#\000\000\324#\000\000\325#\000\000\326#\000\000\327#\000\000\330#\000\000\331#\000\000\332#\000\000\333#\000\000\334#\000\000\335#\000\000\336#\000\000\337#\000\000\340#\000\000\341#\000\000\342#\000\000\343#\000\000\344#\000\000\345#\000\000\346#\000\000\347#\000\000\350#\000\000\351#\000\000\352#\000\000\353#\000\000\354#\000\000\355#\000\000\356#\000\000\357#\000\000\360#\000\000\361#\000\000\362#\000\000\363#\000\000\364#\000\000\365#\000\000\366#\000\000\367#\000\000\370#\000\000\371#\000\000\372#\000\000\373#\000\000\374#\000\000\375#\000\000\376#\000\000\377#\000\000\000$\000\000\001$\000\000\002$\000\000\003$\000\000\004$\000\000\005$\000\000\006$\000\000\007$\000\000\010$\000\000\t$\000\000\n$\000\000\013$\000\000\014$\000\000\r$\000\000\016$\000\000\017$\000\000\020$\000\000\021$\000\000\022$\000\000\023$\000\000\024$\000\000\025$\000\000\026$\000\000\027$\000\000\030$\000\000\031$\000\000\032$\000\000\033$\000\000\034$\000\000\035$\000\000\036$\000\000\037$\000\000 $\000\000!$\000\000\"$\000\000#$\000\000$$\000\000%$\000\000&$\000\000"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hash_table"
  op: "HashTableV2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_1182fcfb-8293-4c0e-83e2-73788a3e5fae"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "key_value_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "hash_table"
  input: "Const"
  input: "Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "./train.tfrecord"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const_3"
  input: "flat_filenames/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "flat_filenames"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "TensorSliceDataset"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map_read_one_file_16"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "FlatMapDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "RepeatDataset"
  input: "hash_table"
  input: "Const_2"
  input: "num_parallel_calls"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_<class \'functools.partial\'>_111"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "sloppy"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "[PAD]"
      }
    }
  }
}
node {
  name: "hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "hash_table"
  input: "Const_4"
  input: "Const_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Cast/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Cast/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "padding_value"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "padding_value_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "padding_value_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "padding_value_3"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "padding_value_4"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "PaddedBatchDatasetV2"
  op: "PaddedBatchDatasetV2"
  input: "ParallelMapDataset"
  input: "batch_size"
  input: "Const_5"
  input: "Const_6"
  input: "Const_7"
  input: "Const_8"
  input: "Const_9"
  input: "Const_10"
  input: "Const_11"
  input: "hash_table_Lookup/LookupTableFindV2"
  input: "padding_value"
  input: "padding_value_1"
  input: "Cast"
  input: "padding_value_2"
  input: "padding_value_3"
  input: "padding_value_4"
  input: "drop_remainder"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 100
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "PaddedBatchDatasetV2"
  input: "buffer_size_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "optimizations"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "map_and_batch_fusion"
        string_val: "noop_elimination"
        string_val: "shuffle_and_repeat_fusion"
      }
    }
  }
}
node {
  name: "OptimizeDataset"
  op: "OptimizeDataset"
  input: "PrefetchDataset"
  input: "optimizations"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "optimization_configs"
    value {
      list {
        s: "map_vectorization:use_choose_fastest:false"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "ModelDataset"
  op: "ModelDataset"
  input: "OptimizeDataset"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "algorithm"
    value {
      i: 0
    }
  }
  attr {
    key: "cpu_budget"
    value {
      i: 0
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/cpu:0"
      }
    }
  }
}
node {
  name: "MultiDeviceIterator"
  op: "MultiDeviceIterator"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "devices"
    value {
      list {
        s: "/replica:0/task:0/device:CPU:0"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MultiDeviceIteratorInit/max_buffer_size"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "MultiDeviceIteratorInit"
  op: "MultiDeviceIteratorInit"
  input: "ModelDataset"
  input: "MultiDeviceIterator"
  input: "MultiDeviceIteratorInit/max_buffer_size"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "MultiDeviceIteratorToStringHandle"
  op: "MultiDeviceIteratorToStringHandle"
  input: "MultiDeviceIterator"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "GeneratorDataset"
  op: "GeneratorDataset"
  input: "Const_12"
  input: "MultiDeviceIteratorToStringHandle"
  input: "Const_12"
  input: "MultiDeviceIteratorInit"
  input: "Const_12"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tfinalize_func_args"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "Tinit_func_args"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "Tnext_func_args"
    value {
      list {
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "finalize_func"
    value {
      func {
        name: "__inference__remote_finalize_func_202"
      }
    }
  }
  attr {
    key: "init_func"
    value {
      func {
        name: "__inference__remote_init_func_152"
      }
    }
  }
  attr {
    key: "next_func"
    value {
      func {
        name: "__inference__remote_next_func_191"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "GeneratorDataset_1"
  op: "GeneratorDataset"
  input: "Const_12"
  input: "MultiDeviceIteratorToStringHandle"
  input: "Const_12"
  input: "MultiDeviceIteratorInit"
  input: "Const_12"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tfinalize_func_args"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "Tinit_func_args"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "Tnext_func_args"
    value {
      list {
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "finalize_func"
    value {
      func {
        name: "__inference__remote_finalize_func_202"
      }
    }
  }
  attr {
    key: "init_func"
    value {
      func {
        name: "__inference__remote_init_func_152"
      }
    }
  }
  attr {
    key: "next_func"
    value {
      func {
        name: "__inference__remote_next_func_191"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "PrefetchDataset_1"
  op: "PrefetchDataset"
  input: "GeneratorDataset_1"
  input: "buffer_size_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "PrefetchDataset_1"
  input: "IteratorV2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^MakeIterator"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "IsNan"
  op: "IsNan"
  input: "IteratorGetNext:5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_like"
  op: "ZerosLike"
  input: "IteratorGetNext:5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Select"
  op: "Select"
  input: "IsNan"
  input: "zeros_like"
  input: "IteratorGetNext:5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\'$\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025374118238687515
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025374118238687515
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "w_pretrained_embedding/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/sub"
  op: "Sub"
  input: "w_pretrained_embedding/Initializer/random_uniform/max"
  input: "w_pretrained_embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform/mul"
  op: "Mul"
  input: "w_pretrained_embedding/Initializer/random_uniform/RandomUniform"
  input: "w_pretrained_embedding/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Initializer/random_uniform"
  op: "Add"
  input: "w_pretrained_embedding/Initializer/random_uniform/mul"
  input: "w_pretrained_embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9255
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_pretrained_embedding"
    }
  }
}
node {
  name: "w_pretrained_embedding/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/Assign"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding"
  input: "w_pretrained_embedding/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_pretrained_embedding/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/embedding_lookup"
  op: "ResourceGather"
  input: "w_pretrained_embedding"
  input: "IteratorGetNext"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "cnn/embedding_lookup/Identity"
  op: "Identity"
  input: "cnn/embedding_lookup"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cnn/embedding_lookup/Identity_1"
  op: "Identity"
  input: "cnn/embedding_lookup/Identity"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cnn/Shape"
  op: "Shape"
  input: "cnn/embedding_lookup/Identity_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cnn/strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice/stack"
  input: "cnn/strided_slice/stack_1"
  input: "cnn/strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/strided_slice_1/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_1"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_1/stack"
  input: "cnn/strided_slice_1/stack_1"
  input: "cnn/strided_slice_1/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/mul"
  op: "Mul"
  input: "cnn/strided_slice"
  input: "cnn/strided_slice_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/strided_slice_2/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_2"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_2/stack"
  input: "cnn/strided_slice_2/stack_1"
  input: "cnn/strided_slice_2/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/strided_slice_3/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cnn/strided_slice_3/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "cnn/strided_slice_3/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_3"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_3/stack"
  input: "cnn/strided_slice_3/stack_1"
  input: "cnn/strided_slice_3/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/Reshape/shape"
  op: "Pack"
  input: "cnn/mul"
  input: "cnn/strided_slice_2"
  input: "cnn/strided_slice_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cnn/Reshape"
  op: "Reshape"
  input: "cnn/embedding_lookup/Identity_1"
  input: "cnn/Reshape/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/NotEqual/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/NotEqual"
  op: "NotEqual"
  input: "IteratorGetNext"
  input: "cnn/NotEqual/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cnn/Cast"
  op: "Cast"
  input: "cnn/NotEqual"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/Sum/reduction_indices"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cnn/Sum"
  op: "Sum"
  input: "cnn/Cast"
  input: "cnn/Sum/reduction_indices"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cnn/strided_slice_4/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/strided_slice_4/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_4/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_4"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_4/stack"
  input: "cnn/strided_slice_4/stack_1"
  input: "cnn/strided_slice_4/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/strided_slice_5/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_5/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/strided_slice_5/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_5"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_5/stack"
  input: "cnn/strided_slice_5/stack_1"
  input: "cnn/strided_slice_5/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/mul_1"
  op: "Mul"
  input: "cnn/strided_slice_4"
  input: "cnn/strided_slice_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/Reshape_1/shape"
  op: "Pack"
  input: "cnn/mul_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cnn/Reshape_1"
  op: "Reshape"
  input: "cnn/Sum"
  input: "cnn/Reshape_1/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/ExpandDims/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cnn/ExpandDims"
  op: "ExpandDims"
  input: "cnn/Reshape"
  input: "cnn/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000@\000\000\000\001\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.024753687903285027
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.024753687903285027
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/max"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/mul"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/kernel"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  input: "cnn/doc_cnn_0_3/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/bias"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  input: "cnn/doc_cnn_0_3/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/dilation_rate"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/Conv2D"
  op: "Conv2D"
  input: "cnn/ExpandDims"
  input: "cnn/doc_cnn_0_3/Conv2D/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/BiasAdd"
  op: "BiasAdd"
  input: "cnn/doc_cnn_0_3/Conv2D"
  input: "cnn/doc_cnn_0_3/BiasAdd/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/Relu"
  op: "Relu"
  input: "cnn/doc_cnn_0_3/BiasAdd"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/sub/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cnn/sub"
  op: "Sub"
  input: "cnn/Reshape_1"
  input: "cnn/sub/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/add/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/add"
  op: "AddV2"
  input: "cnn/sub"
  input: "cnn/add/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/Maximum/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/Maximum"
  op: "Maximum"
  input: "cnn/add"
  input: "cnn/Maximum/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/Shape_1"
  op: "Shape"
  input: "cnn/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cnn/strided_slice_6/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_6/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/strided_slice_6/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_6"
  op: "StridedSlice"
  input: "cnn/Shape_1"
  input: "cnn/strided_slice_6/stack"
  input: "cnn/strided_slice_6/stack_1"
  input: "cnn/strided_slice_6/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/sub_1/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cnn/sub_1"
  op: "Sub"
  input: "cnn/strided_slice_6"
  input: "cnn/sub_1/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/add_1/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/add_1"
  op: "AddV2"
  input: "cnn/sub_1"
  input: "cnn/add_1/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Range"
  op: "Range"
  input: "cnn/SequenceMask/Const"
  input: "cnn/add_1"
  input: "cnn/SequenceMask/Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/ExpandDims/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "cnn/Maximum"
  input: "cnn/SequenceMask/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Cast"
  op: "Cast"
  input: "cnn/SequenceMask/ExpandDims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Less"
  op: "Less"
  input: "cnn/SequenceMask/Range"
  input: "cnn/SequenceMask/Cast"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/SequenceMask/Cast_1"
  op: "Cast"
  input: "cnn/SequenceMask/Less"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/ExpandDims_1/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/ExpandDims_1"
  op: "ExpandDims"
  input: "cnn/SequenceMask/Cast_1"
  input: "cnn/ExpandDims_1/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/ExpandDims_2/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/ExpandDims_2"
  op: "ExpandDims"
  input: "cnn/ExpandDims_1"
  input: "cnn/ExpandDims_2/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cnn/mul_2"
  op: "Mul"
  input: "cnn/doc_cnn_0_3/Relu"
  input: "cnn/ExpandDims_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/Max/reduction_indices"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/Max"
  op: "Max"
  input: "cnn/mul_2"
  input: "cnn/Max/reduction_indices"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cnn/Squeeze"
  op: "Squeeze"
  input: "cnn/Max"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "cnn/concat/concat_dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/concat/concat"
  op: "Identity"
  input: "cnn/Squeeze"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/strided_slice_7/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cnn/strided_slice_7/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_7/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_7"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_7/stack"
  input: "cnn/strided_slice_7/stack_1"
  input: "cnn/strided_slice_7/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/strided_slice_8/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_8/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cnn/strided_slice_8/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cnn/strided_slice_8"
  op: "StridedSlice"
  input: "cnn/Shape"
  input: "cnn/strided_slice_8/stack"
  input: "cnn/strided_slice_8/stack_1"
  input: "cnn/strided_slice_8/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cnn/Reshape_2/shape/2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "cnn/Reshape_2/shape"
  op: "Pack"
  input: "cnn/strided_slice_7"
  input: "cnn/strided_slice_8"
  input: "cnn/Reshape_2/shape/2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cnn/Reshape_2"
  op: "Reshape"
  input: "cnn/concat/concat"
  input: "cnn/Reshape_2/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "cnn/stack"
  op: "Pack"
  input: "cnn/Reshape_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
}
node {
  name: "doc_ftrs"
  op: "Identity"
  input: "cnn/stack"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "doc_ftrs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape/shape/2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Pack"
  input: "strided_slice_2"
  input: "strided_slice_3"
  input: "Reshape/shape/2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "doc_ftrs"
  input: "Reshape/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "sim_ftrs"
  op: "Identity"
  input: "Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_w"
    }
  }
}
node {
  name: "wide_ftr_norm_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w"
  input: "wide_ftr_norm_w/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_b"
    }
  }
}
node {
  name: "wide_ftr_norm_b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b"
  input: "wide_ftr_norm_b/Initializer/Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Select"
  input: "mul/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "mul"
  input: "add/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Tanh"
  op: "Tanh"
  input: "add"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "sim_ftrs"
  input: "Tanh"
  input: "concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape/2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 51
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "strided_slice"
  input: "strided_slice_1"
  input: "Reshape_1/shape/2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "concat"
  input: "Reshape_1/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/concat_dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1/concat"
  op: "Identity"
  input: "Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "3\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3244428336620331
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3244428336620331
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "scoring/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "scoring/kernel/Initializer/random_uniform/max"
  input: "scoring/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "scoring/kernel/Initializer/random_uniform/RandomUniform"
  input: "scoring/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/Initializer/random_uniform"
  op: "Add"
  input: "scoring/kernel/Initializer/random_uniform/mul"
  input: "scoring/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "scoring/kernel"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 51
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/kernel"
    }
  }
}
node {
  name: "scoring/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/Assign"
  op: "AssignVariableOp"
  input: "scoring/kernel"
  input: "scoring/kernel/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "scoring/bias"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/bias"
    }
  }
}
node {
  name: "scoring/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/bias/Assign"
  op: "AssignVariableOp"
  input: "scoring/bias"
  input: "scoring/bias/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/Tensordot/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/Tensordot/axes"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "scoring/Tensordot/free"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Shape"
  op: "Shape"
  input: "concat_1/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "scoring/Tensordot/GatherV2/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/GatherV2"
  op: "GatherV2"
  input: "scoring/Tensordot/Shape"
  input: "scoring/Tensordot/free"
  input: "scoring/Tensordot/GatherV2/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "scoring/Tensordot/GatherV2_1/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "scoring/Tensordot/Shape"
  input: "scoring/Tensordot/axes"
  input: "scoring/Tensordot/GatherV2_1/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "scoring/Tensordot/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Prod"
  op: "Prod"
  input: "scoring/Tensordot/GatherV2"
  input: "scoring/Tensordot/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "scoring/Tensordot/Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Prod_1"
  op: "Prod"
  input: "scoring/Tensordot/GatherV2_1"
  input: "scoring/Tensordot/Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "scoring/Tensordot/concat/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/concat"
  op: "ConcatV2"
  input: "scoring/Tensordot/free"
  input: "scoring/Tensordot/axes"
  input: "scoring/Tensordot/concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot/stack"
  op: "Pack"
  input: "scoring/Tensordot/Prod"
  input: "scoring/Tensordot/Prod_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "scoring/Tensordot/transpose"
  op: "Transpose"
  input: "concat_1/concat"
  input: "scoring/Tensordot/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Reshape"
  op: "Reshape"
  input: "scoring/Tensordot/transpose"
  input: "scoring/Tensordot/stack"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "scoring/Tensordot/transpose_1"
  op: "Transpose"
  input: "scoring/Tensordot/ReadVariableOp"
  input: "scoring/Tensordot/transpose_1/perm"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "3\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "scoring/Tensordot/Reshape_1"
  op: "Reshape"
  input: "scoring/Tensordot/transpose_1"
  input: "scoring/Tensordot/Reshape_1/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot/MatMul"
  op: "MatMul"
  input: "scoring/Tensordot/Reshape"
  input: "scoring/Tensordot/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "scoring/Tensordot/Const_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "scoring/Tensordot/concat_1/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "scoring/Tensordot/concat_1"
  op: "ConcatV2"
  input: "scoring/Tensordot/GatherV2"
  input: "scoring/Tensordot/Const_2"
  input: "scoring/Tensordot/concat_1/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "scoring/Tensordot"
  op: "Reshape"
  input: "scoring/Tensordot/MatMul"
  input: "scoring/Tensordot/concat_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "scoring/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/BiasAdd"
  op: "BiasAdd"
  input: "scoring/Tensordot"
  input: "scoring/BiasAdd/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "scoring/BiasAdd"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -2
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "IteratorGetNext:6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "Cast_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "Squeeze_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Squeeze"
  input: "Squeeze_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Shape"
  input: "IteratorGetNext:4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar/x"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Switch_1:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IteratorGetNext:4"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const_3"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const_4"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/Const_5"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_t"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/NoOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "IteratorGetNext:4"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Assert"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/control_dependency"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "IteratorGetNext:4"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "sparse_softmax_cross_entropy_loss/Mul"
  input: "sparse_softmax_cross_entropy_loss/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "IteratorGetNext:4"
  input: "sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "ZerosLike"
  input: "IteratorGetNext:4"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Shape"
  input: "IteratorGetNext:4"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "sparse_softmax_cross_entropy_loss/num_present/ones_like"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar/x"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar/x"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const_1"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const_2"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/num_present/Select:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const_3"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const_4"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/Const_5"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Switch:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/num_present/Select:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:0"
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  input: "^sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "sparse_softmax_cross_entropy_loss/num_present/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^sparse_softmax_cross_entropy_loss/assert_broadcastable/AssertGuard/Merge"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "sparse_softmax_cross_entropy_loss/Sum"
  input: "sparse_softmax_cross_entropy_loss/Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "sparse_softmax_cross_entropy_loss/Sum_1"
  input: "sparse_softmax_cross_entropy_loss/num_present"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "IteratorGetNext:4"
  input: "Const_14"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "Mean"
  input: "mul_1/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "sparse_softmax_cross_entropy_loss/value"
  input: "mul_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_1/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "PolynomialDecay/Cast_2"
  op: "Cast"
  input: "PolynomialDecay/Cast_2/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "PolynomialDecay/Cast_3"
  op: "Cast"
  input: "PolynomialDecay/Cast_3/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Minimum/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 300.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/Minimum"
  op: "Minimum"
  input: "PolynomialDecay/Cast_2"
  input: "PolynomialDecay/Minimum/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/truediv"
  op: "RealDiv"
  input: "PolynomialDecay/Minimum"
  input: "PolynomialDecay/Cast_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub"
  op: "Sub"
  input: "Const_15"
  input: "PolynomialDecay/Cast/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub_1/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PolynomialDecay/sub_1"
  op: "Sub"
  input: "PolynomialDecay/sub_1/x"
  input: "PolynomialDecay/truediv"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Pow"
  op: "Pow"
  input: "PolynomialDecay/sub_1"
  input: "PolynomialDecay/Cast_1/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay/Mul"
  op: "Mul"
  input: "PolynomialDecay/sub"
  input: "PolynomialDecay/Pow"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PolynomialDecay"
  op: "Add"
  input: "PolynomialDecay/Mul"
  input: "PolynomialDecay/Cast/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/Fill"
  input: "sparse_softmax_cross_entropy_loss/num_present"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "sparse_softmax_cross_entropy_loss/Sum_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "sparse_softmax_cross_entropy_loss/num_present"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "sparse_softmax_cross_entropy_loss/num_present"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/Mul"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "IteratorGetNext:4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "scoring/BiasAdd"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients/Squeeze_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Squeeze_grad/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/scoring/Tensordot_grad/Shape"
  op: "Shape"
  input: "scoring/Tensordot/MatMul"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/scoring/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/Squeeze_grad/Reshape"
  input: "gradients/scoring/Tensordot_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/scoring/Tensordot_grad/Reshape"
  input: "scoring/Tensordot/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "scoring/Tensordot/Reshape"
  input: "gradients/scoring/Tensordot_grad/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "scoring/Tensordot/transpose"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/scoring/Tensordot/MatMul_grad/MatMul"
  input: "gradients/scoring/Tensordot/Reshape_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "3\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/scoring/Tensordot/MatMul_grad/MatMul_1"
  input: "gradients/scoring/Tensordot/Reshape_1_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "scoring/Tensordot/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/scoring/Tensordot/Reshape_grad/Reshape"
  input: "gradients/scoring/Tensordot/transpose_grad/InvertPermutation"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 51
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "scoring/Tensordot/transpose_1/perm"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scoring/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/scoring/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/scoring/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/scoring/Tensordot/transpose_grad/transpose"
  input: "gradients/Reshape_1_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Shape"
  input: "sim_ftrs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "sim_ftrs"
  input: "Tanh"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/ShapeN"
  input: "gradients/concat_grad/ShapeN:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/ShapeN"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/ShapeN:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Tanh"
  input: "gradients/concat_grad/Slice_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "doc_ftrs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_grad/Slice"
  input: "gradients/Reshape_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "mul"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "add/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/Tanh_grad/TanhGrad"
  input: "gradients/add_grad/BroadcastGradientArgs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Tanh_grad/TanhGrad"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "mul/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_grad/Reshape"
  input: "mul/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/Mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "Select"
  input: "gradients/add_grad/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/Mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/stack_grad/unstack"
  op: "Unpack"
  input: "gradients/Reshape_grad/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/cnn/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cnn/concat/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/stack_grad/unstack"
  input: "gradients/cnn/Reshape_2_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Squeeze_grad/Shape"
  op: "Shape"
  input: "cnn/Max"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/Reshape_2_grad/Reshape"
  input: "gradients/cnn/Squeeze_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Shape"
  op: "Shape"
  input: "cnn/mul_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Size"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/add"
  op: "AddV2"
  input: "cnn/Max/reduction_indices"
  input: "gradients/cnn/Max_grad/Size"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/mod"
  op: "FloorMod"
  input: "gradients/cnn/Max_grad/add"
  input: "gradients/cnn/Max_grad/Size"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Shape_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/range/start"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/range/delta"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/range"
  op: "Range"
  input: "gradients/cnn/Max_grad/range/start"
  input: "gradients/cnn/Max_grad/Size"
  input: "gradients/cnn/Max_grad/range/delta"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Fill/value"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Fill"
  op: "Fill"
  input: "gradients/cnn/Max_grad/Shape_1"
  input: "gradients/cnn/Max_grad/Fill/value"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/cnn/Max_grad/range"
  input: "gradients/cnn/Max_grad/mod"
  input: "gradients/cnn/Max_grad/Shape"
  input: "gradients/cnn/Max_grad/Fill"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Reshape"
  op: "Reshape"
  input: "cnn/Max"
  input: "gradients/cnn/Max_grad/DynamicStitch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cnn/Squeeze_grad/Reshape"
  input: "gradients/cnn/Max_grad/DynamicStitch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Equal"
  op: "Equal"
  input: "gradients/cnn/Max_grad/Reshape"
  input: "cnn/mul_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Cast"
  op: "Cast"
  input: "gradients/cnn/Max_grad/Equal"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Sum"
  op: "Sum"
  input: "gradients/cnn/Max_grad/Cast"
  input: "cnn/Max/reduction_indices"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/Reshape_2"
  op: "Reshape"
  input: "gradients/cnn/Max_grad/Sum"
  input: "gradients/cnn/Max_grad/DynamicStitch"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/truediv"
  op: "RealDiv"
  input: "gradients/cnn/Max_grad/Cast"
  input: "gradients/cnn/Max_grad/Reshape_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Max_grad/mul"
  op: "Mul"
  input: "gradients/cnn/Max_grad/truediv"
  input: "gradients/cnn/Max_grad/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Shape"
  op: "Shape"
  input: "cnn/doc_cnn_0_3/Relu"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Shape_1"
  op: "Shape"
  input: "cnn/ExpandDims_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/cnn/mul_2_grad/Shape"
  input: "gradients/cnn/mul_2_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/cnn/Max_grad/mul"
  input: "cnn/ExpandDims_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/cnn/mul_2_grad/Mul"
  input: "gradients/cnn/mul_2_grad/BroadcastGradientArgs"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/mul_2_grad/Sum"
  input: "gradients/cnn/mul_2_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Mul_1"
  op: "Mul"
  input: "cnn/doc_cnn_0_3/Relu"
  input: "gradients/cnn/Max_grad/mul"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/cnn/mul_2_grad/Mul_1"
  input: "gradients/cnn/mul_2_grad/BroadcastGradientArgs:1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cnn/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cnn/mul_2_grad/Sum_1"
  input: "gradients/cnn/mul_2_grad/Shape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/doc_cnn_0_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/cnn/mul_2_grad/Reshape"
  input: "cnn/doc_cnn_0_3/Relu"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/cnn/doc_cnn_0_3/Relu_grad/ReluGrad"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "cnn/ExpandDims"
  input: "cnn/doc_cnn_0_3/Conv2D/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/ShapeN"
  input: "cnn/doc_cnn_0_3/Conv2D/ReadVariableOp"
  input: "gradients/cnn/doc_cnn_0_3/Relu_grad/ReluGrad"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "cnn/ExpandDims"
  input: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/ShapeN:1"
  input: "gradients/cnn/doc_cnn_0_3/Relu_grad/ReluGrad"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/cnn/ExpandDims_grad/Shape"
  op: "Shape"
  input: "cnn/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropInput"
  input: "gradients/cnn/ExpandDims_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/Reshape_grad/Shape"
  op: "Shape"
  input: "cnn/embedding_lookup/Identity_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/ExpandDims_grad/Reshape"
  input: "gradients/cnn/Reshape_grad/Shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\'$\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/Size"
  op: "Size"
  input: "IteratorGetNext"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/cnn/embedding_lookup_grad/Size"
  input: "gradients/cnn/embedding_lookup_grad/ExpandDims/dim"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/cnn/embedding_lookup_grad/Const"
  input: "gradients/cnn/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/cnn/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/cnn/embedding_lookup_grad/strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/concat/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/cnn/embedding_lookup_grad/ExpandDims"
  input: "gradients/cnn/embedding_lookup_grad/strided_slice"
  input: "gradients/cnn/embedding_lookup_grad/concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/cnn/Reshape_grad/Reshape"
  input: "gradients/cnn/embedding_lookup_grad/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cnn/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "gradients/cnn/embedding_lookup_grad/ExpandDims"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/cnn/embedding_lookup_grad/Reshape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/mul_grad/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/add_grad/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/scoring/Tensordot/transpose_1_grad/transpose"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/scoring/BiasAdd_grad/BiasAddGrad"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/IsFinite"
  op: "IsFinite"
  input: "global_norm/global_norm"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: nan
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Select"
  op: "Select"
  input: "clip_by_global_norm/IsFinite"
  input: "clip_by_global_norm/mul"
  input: "clip_by_global_norm/Const_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/cnn/embedding_lookup_grad/Reshape"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cnn/doc_cnn_0_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/mul_grad/Reshape_1"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/add_grad/Reshape_1"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/scoring/Tensordot/transpose_1_grad/transpose"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/scoring/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/Select"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/scoring/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\'$\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/Initializer/zeros"
  op: "Fill"
  input: "w_pretrained_embedding/adam_m/Initializer/zeros/shape_as_tensor"
  input: "w_pretrained_embedding/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9255
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_pretrained_embedding/adam_m"
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/Assign"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_m"
  input: "w_pretrained_embedding/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\'$\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/Initializer/zeros"
  op: "Fill"
  input: "w_pretrained_embedding/adam_v/Initializer/zeros/shape_as_tensor"
  input: "w_pretrained_embedding/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_pretrained_embedding/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9255
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_pretrained_embedding/adam_v"
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/Assign"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_v"
  input: "w_pretrained_embedding/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_pretrained_embedding/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_2/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_2"
  op: "Mul"
  input: "Mul_2/x"
  input: "Mul_2/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mul_3/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_3/strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mul_3/strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_3/strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mul_3/strided_slice"
  op: "StridedSlice"
  input: "gradients/cnn/embedding_lookup_grad/Const"
  input: "Mul_3/strided_slice/stack"
  input: "Mul_3/strided_slice/stack_1"
  input: "Mul_3/strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Mul_3/y"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/cnn/embedding_lookup_grad/Reshape_1"
  input: "Mul_3/strided_slice"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mul_3"
  op: "Mul"
  input: "Mul_3/x"
  input: "Mul_3/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "Mul_2"
  input: "Mul_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mul_4/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_4"
  op: "Mul"
  input: "Mul_4/x"
  input: "Mul_4/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square/strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Square/strided_slice"
  op: "StridedSlice"
  input: "gradients/cnn/embedding_lookup_grad/Const"
  input: "Square/strided_slice/stack"
  input: "Square/strided_slice/stack_1"
  input: "Square/strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Square/x"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/cnn/embedding_lookup_grad/Reshape_1"
  input: "Square/strided_slice"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "Square/x"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Mul_5/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_5"
  op: "Mul"
  input: "Mul_5/x"
  input: "Square"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "Mul_4"
  input: "Mul_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "add_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_4/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "Sqrt"
  input: "add_4/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "add_2"
  input: "add_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_6/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "mul_6/x"
  input: "ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "truediv"
  input: "mul_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "ReadVariableOp_1"
  input: "mul_7"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding"
  input: "sub"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding"
  input: "^AssignVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_m"
  input: "add_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_m"
  input: "^AssignVariableOp_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_v"
  input: "add_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "w_pretrained_embedding/adam_v"
  input: "^AssignVariableOp_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9255
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000@\000\000\000\001\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros"
  op: "Fill"
  input: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros/shape_as_tensor"
  input: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/kernel/adam_m"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  input: "cnn/doc_cnn_0_3/kernel/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000@\000\000\000\001\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros"
  op: "Fill"
  input: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros/shape_as_tensor"
  input: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/kernel/adam_v"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  input: "cnn/doc_cnn_0_3/kernel/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/kernel/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_8/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_8"
  op: "Mul"
  input: "Mul_8/x"
  input: "Mul_8/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_9/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_9"
  op: "Mul"
  input: "Mul_9/x"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "Mul_8"
  input: "Mul_9"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_10/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_10"
  op: "Mul"
  input: "Mul_10/x"
  input: "Mul_10/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_11/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_11"
  op: "Mul"
  input: "Mul_11/x"
  input: "Square_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "Mul_10"
  input: "Mul_11"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "add_7"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_8/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_8"
  op: "AddV2"
  input: "Sqrt_1"
  input: "add_8/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "add_6"
  input: "add_8"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_12/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "mul_12/x"
  input: "ReadVariableOp_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_9"
  op: "AddV2"
  input: "truediv_1"
  input: "mul_12"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_9"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "ReadVariableOp_6"
  input: "mul_13"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  input: "sub_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  input: "^AssignVariableOp_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  input: "add_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  input: "^AssignVariableOp_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  input: "add_7"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  input: "^AssignVariableOp_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/bias/adam_m"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_m/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  input: "cnn/doc_cnn_0_3/bias/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cnn/doc_cnn_0_3/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "cnn/doc_cnn_0_3/bias/adam_v"
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_v/Assign"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  input: "cnn/doc_cnn_0_3/bias/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cnn/doc_cnn_0_3/bias/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_14/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_14"
  op: "Mul"
  input: "Mul_14/x"
  input: "Mul_14/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_15/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_15"
  op: "Mul"
  input: "Mul_15/x"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_10"
  op: "AddV2"
  input: "Mul_14"
  input: "Mul_15"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_16/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_16"
  op: "Mul"
  input: "Mul_16/x"
  input: "Mul_16/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Mul_17/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_17"
  op: "Mul"
  input: "Mul_17/x"
  input: "Square_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_11"
  op: "AddV2"
  input: "Mul_16"
  input: "Mul_17"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "add_11"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "add_12/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_12"
  op: "AddV2"
  input: "Sqrt_2"
  input: "add_12/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "add_10"
  input: "add_12"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "mul_18"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "ReadVariableOp_10"
  input: "mul_18"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  input: "sub_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  input: "^AssignVariableOp_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  input: "add_10"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  input: "^AssignVariableOp_7"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  input: "add_11"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  input: "^AssignVariableOp_8"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_w/adam_m"
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_m/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  input: "wide_ftr_norm_w/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_w/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_w/adam_v"
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_v/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  input: "wide_ftr_norm_w/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_w/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_19/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_19"
  op: "Mul"
  input: "Mul_19/x"
  input: "Mul_19/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_20/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_20"
  op: "Mul"
  input: "Mul_20/x"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_13"
  op: "AddV2"
  input: "Mul_19"
  input: "Mul_20"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_21/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_21"
  op: "Mul"
  input: "Mul_21/x"
  input: "Mul_21/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_22/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_22"
  op: "Mul"
  input: "Mul_22/x"
  input: "Square_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_14"
  op: "AddV2"
  input: "Mul_21"
  input: "Mul_22"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_3"
  op: "Sqrt"
  input: "add_14"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_15/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_15"
  op: "AddV2"
  input: "Sqrt_3"
  input: "add_15/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "add_13"
  input: "add_15"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_23/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_23"
  op: "Mul"
  input: "mul_23/x"
  input: "ReadVariableOp_14"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_16"
  op: "AddV2"
  input: "truediv_3"
  input: "mul_23"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_24"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_16"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "ReadVariableOp_15"
  input: "mul_24"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w"
  input: "sub_3"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w"
  input: "^AssignVariableOp_9"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  input: "add_13"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  input: "^AssignVariableOp_10"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  input: "add_14"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  input: "^AssignVariableOp_11"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_b/adam_m"
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_m/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  input: "wide_ftr_norm_b/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@wide_ftr_norm_b/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "wide_ftr_norm_b/adam_v"
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_v/Assign"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  input: "wide_ftr_norm_b/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wide_ftr_norm_b/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_25/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_25"
  op: "Mul"
  input: "Mul_25/x"
  input: "Mul_25/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_26/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_26"
  op: "Mul"
  input: "Mul_26/x"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_17"
  op: "AddV2"
  input: "Mul_25"
  input: "Mul_26"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_27/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_27"
  op: "Mul"
  input: "Mul_27/x"
  input: "Mul_27/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_4"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mul_28/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_28"
  op: "Mul"
  input: "Mul_28/x"
  input: "Square_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_18"
  op: "AddV2"
  input: "Mul_27"
  input: "Mul_28"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_4"
  op: "Sqrt"
  input: "add_18"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_19/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_19"
  op: "AddV2"
  input: "Sqrt_4"
  input: "add_19/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "add_17"
  input: "add_19"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_29/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_29"
  op: "Mul"
  input: "mul_29/x"
  input: "ReadVariableOp_19"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_20"
  op: "AddV2"
  input: "truediv_4"
  input: "mul_29"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_30"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_20"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "ReadVariableOp_20"
  input: "mul_30"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b"
  input: "sub_4"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b"
  input: "^AssignVariableOp_12"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  input: "add_17"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  input: "^AssignVariableOp_13"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  input: "add_18"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  input: "^AssignVariableOp_14"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/kernel/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "scoring/kernel/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 51
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/kernel/adam_m"
    }
  }
}
node {
  name: "scoring/kernel/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/adam_m/Assign"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_m"
  input: "scoring/kernel/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/kernel/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/kernel/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "scoring/kernel/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/kernel/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 51
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/kernel/adam_v"
    }
  }
}
node {
  name: "scoring/kernel/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/kernel/adam_v/Assign"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_v"
  input: "scoring/kernel/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/kernel/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_31/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_31"
  op: "Mul"
  input: "Mul_31/x"
  input: "Mul_31/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_32/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_32"
  op: "Mul"
  input: "Mul_32/x"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_21"
  op: "AddV2"
  input: "Mul_31"
  input: "Mul_32"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_33/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_33"
  op: "Mul"
  input: "Mul_33/x"
  input: "Mul_33/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Square_5"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_34/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_34"
  op: "Mul"
  input: "Mul_34/x"
  input: "Square_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_22"
  op: "AddV2"
  input: "Mul_33"
  input: "Mul_34"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_5"
  op: "Sqrt"
  input: "add_22"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_23/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_23"
  op: "AddV2"
  input: "Sqrt_5"
  input: "add_23/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "add_21"
  input: "add_23"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "scoring/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_35/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_35"
  op: "Mul"
  input: "mul_35/x"
  input: "ReadVariableOp_24"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_24"
  op: "AddV2"
  input: "truediv_5"
  input: "mul_35"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "mul_36"
  op: "Mul"
  input: "PolynomialDecay"
  input: "add_24"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "scoring/kernel"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "ReadVariableOp_25"
  input: "mul_36"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "scoring/kernel"
  input: "sub_5"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "scoring/kernel"
  input: "^AssignVariableOp_15"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_m"
  input: "add_21"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_m"
  input: "^AssignVariableOp_16"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_v"
  input: "add_22"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "scoring/kernel/adam_v"
  input: "^AssignVariableOp_17"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 51
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/adam_m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "scoring/bias/adam_m"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias/adam_m"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/bias/adam_m"
    }
  }
}
node {
  name: "scoring/bias/adam_m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/bias/adam_m/Assign"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_m"
  input: "scoring/bias/adam_m/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/adam_m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/adam_v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "scoring/bias/adam_v"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@scoring/bias/adam_v"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "scoring/bias/adam_v"
    }
  }
}
node {
  name: "scoring/bias/adam_v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "scoring/bias/adam_v/Assign"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_v"
  input: "scoring/bias/adam_v/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "scoring/bias/adam_v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_37/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Mul_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_m"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_37"
  op: "Mul"
  input: "Mul_37/x"
  input: "Mul_37/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_38/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Mul_38"
  op: "Mul"
  input: "Mul_38/x"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_25"
  op: "AddV2"
  input: "Mul_37"
  input: "Mul_38"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_39/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Mul_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_v"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul_39"
  op: "Mul"
  input: "Mul_39/x"
  input: "Mul_39/ReadVariableOp"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Square_6"
  op: "Square"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Mul_40/x"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Mul_40"
  op: "Mul"
  input: "Mul_40/x"
  input: "Square_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_26"
  op: "AddV2"
  input: "Mul_39"
  input: "Mul_40"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_6"
  op: "Sqrt"
  input: "add_26"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "add_27/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "add_27"
  op: "AddV2"
  input: "Sqrt_6"
  input: "add_27/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "add_25"
  input: "add_27"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "mul_41"
  op: "Mul"
  input: "PolynomialDecay"
  input: "truediv_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "scoring/bias"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_6"
  op: "Sub"
  input: "ReadVariableOp_29"
  input: "mul_41"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "scoring/bias"
  input: "sub_6"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "scoring/bias"
  input: "^AssignVariableOp_18"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_m"
  input: "add_25"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_m"
  input: "^AssignVariableOp_19"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_v"
  input: "add_26"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "scoring/bias/adam_v"
  input: "^AssignVariableOp_20"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^AssignVariableOp"
  input: "^AssignVariableOp_1"
  input: "^AssignVariableOp_10"
  input: "^AssignVariableOp_11"
  input: "^AssignVariableOp_12"
  input: "^AssignVariableOp_13"
  input: "^AssignVariableOp_14"
  input: "^AssignVariableOp_15"
  input: "^AssignVariableOp_16"
  input: "^AssignVariableOp_17"
  input: "^AssignVariableOp_18"
  input: "^AssignVariableOp_19"
  input: "^AssignVariableOp_2"
  input: "^AssignVariableOp_20"
  input: "^AssignVariableOp_3"
  input: "^AssignVariableOp_4"
  input: "^AssignVariableOp_5"
  input: "^AssignVariableOp_6"
  input: "^AssignVariableOp_7"
  input: "^AssignVariableOp_8"
  input: "^AssignVariableOp_9"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_28/y"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_28"
  op: "AddV2"
  input: "ReadVariableOp_33"
  input: "add_28/y"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_28"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_21"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "group_deps_2/NoOp"
  op: "NoOp"
  input: "^AssignVariableOp_21"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "group_deps_2/NoOp_1"
  op: "NoOp"
  input: "^group_deps_1"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^group_deps_2/NoOp"
  input: "^group_deps_2/NoOp_1"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "add_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "scoring/kernel"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "scoring/bias"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_m"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_v"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 22
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "global_step"
        string_val: "w_pretrained_embedding"
        string_val: "cnn/doc_cnn_0_3/kernel"
        string_val: "cnn/doc_cnn_0_3/bias"
        string_val: "wide_ftr_norm_w"
        string_val: "wide_ftr_norm_b"
        string_val: "scoring/kernel"
        string_val: "scoring/bias"
        string_val: "w_pretrained_embedding/adam_m"
        string_val: "w_pretrained_embedding/adam_v"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_m"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_v"
        string_val: "cnn/doc_cnn_0_3/bias/adam_m"
        string_val: "cnn/doc_cnn_0_3/bias/adam_v"
        string_val: "wide_ftr_norm_w/adam_m"
        string_val: "wide_ftr_norm_w/adam_v"
        string_val: "wide_ftr_norm_b/adam_m"
        string_val: "wide_ftr_norm_b/adam_v"
        string_val: "scoring/kernel/adam_m"
        string_val: "scoring/kernel/adam_v"
        string_val: "scoring/bias/adam_m"
        string_val: "scoring/bias/adam_v"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/replica:0/task:0/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^group_deps"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^cnn/doc_cnn_0_3/bias/Assign"
  input: "^cnn/doc_cnn_0_3/bias/adam_m/Assign"
  input: "^cnn/doc_cnn_0_3/bias/adam_v/Assign"
  input: "^cnn/doc_cnn_0_3/kernel/Assign"
  input: "^cnn/doc_cnn_0_3/kernel/adam_m/Assign"
  input: "^cnn/doc_cnn_0_3/kernel/adam_v/Assign"
  input: "^global_step/Assign"
  input: "^scoring/bias/Assign"
  input: "^scoring/bias/adam_m/Assign"
  input: "^scoring/bias/adam_v/Assign"
  input: "^scoring/kernel/Assign"
  input: "^scoring/kernel/adam_m/Assign"
  input: "^scoring/kernel/adam_v/Assign"
  input: "^w_pretrained_embedding/Assign"
  input: "^w_pretrained_embedding/adam_m/Assign"
  input: "^w_pretrained_embedding/adam_v/Assign"
  input: "^wide_ftr_norm_b/Assign"
  input: "^wide_ftr_norm_b/adam_m/Assign"
  input: "^wide_ftr_norm_b/adam_v/Assign"
  input: "^wide_ftr_norm_w/Assign"
  input: "^wide_ftr_norm_w/adam_m/Assign"
  input: "^wide_ftr_norm_w/adam_v/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_4/NoOp"
  op: "NoOp"
  input: "^init_1"
}
node {
  name: "group_deps_4/NoOp_1"
  op: "NoOp"
  input: "^init"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_4"
  op: "NoOp"
  input: "^group_deps_4/NoOp"
  input: "^group_deps_4/NoOp_1"
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "scoring/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "scoring/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "w_pretrained_embedding/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_w/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "wide_ftr_norm_b/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "scoring/kernel/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_m"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "scoring/bias/adam_v"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 22
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "global_step"
        string_val: "w_pretrained_embedding"
        string_val: "cnn/doc_cnn_0_3/kernel"
        string_val: "cnn/doc_cnn_0_3/bias"
        string_val: "wide_ftr_norm_w"
        string_val: "wide_ftr_norm_b"
        string_val: "scoring/kernel"
        string_val: "scoring/bias"
        string_val: "w_pretrained_embedding/adam_m"
        string_val: "w_pretrained_embedding/adam_v"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_m"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_v"
        string_val: "cnn/doc_cnn_0_3/bias/adam_m"
        string_val: "cnn/doc_cnn_0_3/bias/adam_v"
        string_val: "wide_ftr_norm_w/adam_m"
        string_val: "wide_ftr_norm_w/adam_v"
        string_val: "wide_ftr_norm_b/adam_m"
        string_val: "wide_ftr_norm_b/adam_v"
        string_val: "scoring/kernel/adam_m"
        string_val: "scoring/kernel/adam_v"
        string_val: "scoring/bias/adam_m"
        string_val: "scoring/bias/adam_v"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 22
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^key_value_init/LookupTableImportV2"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_5/NoOp"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
}
node {
  name: "group_deps_5/NoOp_1"
  op: "NoOp"
  input: "^init_all_tables"
  device: "/replica:0/task:0/device:CPU:0"
}
node {
  name: "group_deps_5"
  op: "NoOp"
  input: "^group_deps_5/NoOp"
  input: "^group_deps_5/NoOp_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_623085bc86854d2cb33e199fa58a4e51/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "cnn/doc_cnn_0_3/bias"
        string_val: "cnn/doc_cnn_0_3/bias/adam_m"
        string_val: "cnn/doc_cnn_0_3/bias/adam_v"
        string_val: "cnn/doc_cnn_0_3/kernel"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_m"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_v"
        string_val: "global_step"
        string_val: "scoring/bias"
        string_val: "scoring/bias/adam_m"
        string_val: "scoring/bias/adam_v"
        string_val: "scoring/kernel"
        string_val: "scoring/kernel/adam_m"
        string_val: "scoring/kernel/adam_v"
        string_val: "w_pretrained_embedding"
        string_val: "w_pretrained_embedding/adam_m"
        string_val: "w_pretrained_embedding/adam_v"
        string_val: "wide_ftr_norm_b"
        string_val: "wide_ftr_norm_b/adam_m"
        string_val: "wide_ftr_norm_b/adam_v"
        string_val: "wide_ftr_norm_w"
        string_val: "wide_ftr_norm_w/adam_m"
        string_val: "wide_ftr_norm_w/adam_v"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "cnn/doc_cnn_0_3/bias/Read/ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m/Read/ReadVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v/Read/ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/Read/ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m/Read/ReadVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "scoring/bias/Read/ReadVariableOp"
  input: "scoring/bias/adam_m/Read/ReadVariableOp"
  input: "scoring/bias/adam_v/Read/ReadVariableOp"
  input: "scoring/kernel/Read/ReadVariableOp"
  input: "scoring/kernel/adam_m/Read/ReadVariableOp"
  input: "scoring/kernel/adam_v/Read/ReadVariableOp"
  input: "w_pretrained_embedding/Read/ReadVariableOp"
  input: "w_pretrained_embedding/adam_m/Read/ReadVariableOp"
  input: "w_pretrained_embedding/adam_v/Read/ReadVariableOp"
  input: "wide_ftr_norm_b/Read/ReadVariableOp"
  input: "wide_ftr_norm_b/adam_m/Read/ReadVariableOp"
  input: "wide_ftr_norm_b/adam_v/Read/ReadVariableOp"
  input: "wide_ftr_norm_w/Read/ReadVariableOp"
  input: "wide_ftr_norm_w/adam_m/Read/ReadVariableOp"
  input: "wide_ftr_norm_w/adam_v/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: "cnn/doc_cnn_0_3/bias"
        string_val: "cnn/doc_cnn_0_3/bias/adam_m"
        string_val: "cnn/doc_cnn_0_3/bias/adam_v"
        string_val: "cnn/doc_cnn_0_3/kernel"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_m"
        string_val: "cnn/doc_cnn_0_3/kernel/adam_v"
        string_val: "global_step"
        string_val: "scoring/bias"
        string_val: "scoring/bias/adam_m"
        string_val: "scoring/bias/adam_v"
        string_val: "scoring/kernel"
        string_val: "scoring/kernel/adam_m"
        string_val: "scoring/kernel/adam_v"
        string_val: "w_pretrained_embedding"
        string_val: "w_pretrained_embedding/adam_m"
        string_val: "w_pretrained_embedding/adam_v"
        string_val: "wide_ftr_norm_b"
        string_val: "wide_ftr_norm_b/adam_m"
        string_val: "wide_ftr_norm_b/adam_v"
        string_val: "wide_ftr_norm_w"
        string_val: "wide_ftr_norm_w/adam_m"
        string_val: "wide_ftr_norm_w/adam_v"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 22
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias"
  input: "save/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_m"
  input: "save/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/bias/adam_v"
  input: "save/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel"
  input: "save/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_m"
  input: "save/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "cnn/doc_cnn_0_3/kernel/adam_v"
  input: "save/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_7"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "scoring/bias"
  input: "save/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_m"
  input: "save/Identity_9"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "scoring/bias/adam_v"
  input: "save/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "scoring/kernel"
  input: "save/Identity_11"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_m"
  input: "save/Identity_12"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "scoring/kernel/adam_v"
  input: "save/Identity_13"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding"
  input: "save/Identity_14"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_m"
  input: "save/Identity_15"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "w_pretrained_embedding/adam_v"
  input: "save/Identity_16"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b"
  input: "save/Identity_17"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_m"
  input: "save/Identity_18"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_b/adam_v"
  input: "save/Identity_19"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w"
  input: "save/Identity_20"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_m"
  input: "save/Identity_21"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "wide_ftr_norm_w/adam_v"
  input: "save/Identity_22"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
  device: "/device:CPU:0"
}
library {
  function {
    signature {
      name: "cond_false_71"
      input_arg {
        name: "shape_strided_slice_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "shape_strided_slice_1"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "strided_slice:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "PadV2/paddings/1/0"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "PadV2/paddings/1"
      op: "Pack"
      input: "PadV2/paddings/1/0:output:0"
      input: "sub:z:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "PadV2/paddings/0_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "PadV2/paddings"
      op: "Pack"
      input: "PadV2/paddings/0_1:output:0"
      input: "PadV2/paddings/1:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "PadV2/constant_values"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "[PAD]"
          }
        }
      }
    }
    node_def {
      name: "PadV2"
      op: "PadV2"
      input: "shape_strided_slice_1"
      input: "PadV2/paddings:output:0"
      input: "PadV2/constant_values:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PadV2:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_<class \'functools.partial\'>_111"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      input_arg {
        name: "hash_table_lookup_lookuptablefindv2_hash_table"
        type: DT_RESOURCE
      }
      input_arg {
        name: "hash_table_lookup_lookuptablefindv2_const_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_INT64
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "hash_table_Lookup/LookupTableFindV2"
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "args_0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 3
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
            s: "doc_query"
            s: "label"
            s: "wide_ftrs"
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
            type: DT_STRING
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "SparseToDense/default_value"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1.0
          }
        }
      }
    }
    node_def {
      name: "SparseToDense"
      op: "SparseToDense"
      input: "ParseSingleExample/ParseSingleExample:sparse_indices:1"
      input: "ParseSingleExample/ParseSingleExample:sparse_shapes:1"
      input: "ParseSingleExample/ParseSingleExample:sparse_values:1"
      input: "SparseToDense/default_value:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "SparseToDense_1/default_value"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "SparseToDense_1"
      op: "SparseToDense"
      input: "ParseSingleExample/ParseSingleExample:sparse_indices:0"
      input: "ParseSingleExample/ParseSingleExample:sparse_shapes:0"
      input: "ParseSingleExample/ParseSingleExample:sparse_values:0"
      input: "SparseToDense_1/default_value:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "SparseToDense_1:dense:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Tile/input"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "[CLS]"
          }
        }
      }
    }
    node_def {
      name: "Tile/multiples"
      op: "Pack"
      input: "strided_slice:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Tile"
      op: "Tile"
      input: "Tile/input:output:0"
      input: "Tile/multiples:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Tile_1/input"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "[SEP]"
          }
        }
      }
    }
    node_def {
      name: "Tile_1/multiples"
      op: "Pack"
      input: "strided_slice:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Tile_1"
      op: "Tile"
      input: "Tile_1/input:output:0"
      input: "Tile_1/multiples:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ReduceJoin/packed"
      op: "Pack"
      input: "Tile:output:0"
      input: "Tile:output:0"
      input: "SparseToDense_1:dense:0"
      input: "Tile_1:output:0"
      input: "Tile_1:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "ReduceJoin/ReduceJoin/reduction_indices"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "ReduceJoin/ReduceJoin"
      op: "ReduceJoin"
      input: "ReduceJoin/packed:output:0"
      input: "ReduceJoin/ReduceJoin/reduction_indices:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      attr {
        key: "separator"
        value {
          s: " "
        }
      }
    }
    node_def {
      name: "StringSplit/Const"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: " "
          }
        }
      }
    }
    node_def {
      name: "StringSplit/StringSplit"
      op: "StringSplit"
      input: "ReduceJoin/ReduceJoin:output:0"
      input: "StringSplit/Const:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "skip_empty"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "SparseToDense_2/default_value"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "[PAD]"
          }
        }
      }
    }
    node_def {
      name: "SparseToDense_2"
      op: "SparseToDense"
      input: "StringSplit/StringSplit:indices:0"
      input: "StringSplit/StringSplit:shape:0"
      input: "StringSplit/StringSplit:values:0"
      input: "SparseToDense_2/default_value:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\020\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "SparseToDense_2:dense:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Shape_1"
      op: "Shape"
      input: "strided_slice_1:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_2"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "Shape_1:output:0"
      input: "strided_slice_2/stack:output:0"
      input: "strided_slice_2/stack_1:output:0"
      input: "strided_slice_2/stack_2:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "GreaterEqual/y"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "GreaterEqual"
      op: "GreaterEqual"
      input: "strided_slice_2:output:0"
      input: "GreaterEqual/y:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "cond"
      op: "StatelessIf"
      input: "GreaterEqual:z:0"
      input: "strided_slice_1:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_false_71"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_true_70"
          }
        }
      }
    }
    node_def {
      name: "cond/Identity"
      op: "Identity"
      input: "cond:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "hash_table_Lookup/LookupTableFindV2"
      op: "LookupTableFindV2"
      input: "hash_table_lookup_lookuptablefindv2_hash_table"
      input: "cond/Identity:output:0"
      input: "hash_table_lookup_lookuptablefindv2_const_2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "SparseToDense_3/default_value"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "SparseToDense_3"
      op: "SparseToDense"
      input: "ParseSingleExample/ParseSingleExample:sparse_indices:2"
      input: "ParseSingleExample/ParseSingleExample:sparse_shapes:2"
      input: "ParseSingleExample/ParseSingleExample:sparse_values:2"
      input: "SparseToDense_3/default_value:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Size"
      op: "Size"
      input: "SparseToDense:dense:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Reshape/shape/1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Pack"
      input: "Size:output:0"
      input: "Reshape/shape/1:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "SparseToDense_3:dense:0"
      input: "Reshape/shape:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "hash_table_Lookup/LookupTableFindV2:values:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Size:output:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "SparseToDense:dense:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "Const_1:output:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "Const:output:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "Reshape:output:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "SparseToDense:dense:0"
      input: "^hash_table_Lookup/LookupTableFindV2"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "hash_table_Lookup/LookupTableFindV2"
      value: "hash_table_Lookup/LookupTableFindV2"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
    arg_attr {
      key: 2
      value {
      }
    }
  }
  function {
    signature {
      name: "cond_true_70"
      input_arg {
        name: "identity_strided_slice_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_strided_slice_1"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference__finalize_func_196"
      input_arg {
        name: "unused_string_handle"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Const:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "unused_string_handle"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_init_func_152"
      input_arg {
        name: "remotecall_const_12"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_multideviceiteratortostringhandle"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_const_12"
      input: "remotecall_multideviceiteratortostringhandle"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__init_func_146"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference__init_func_146"
      input_arg {
        name: "identity_multideviceiteratortostringhandle"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_multideviceiteratortostringhandle"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_next_func_191"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_const_12"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_multideviceiteratorinit"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_INT64
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_const_12"
      input: "string_handle"
      input: "remotecall_multideviceiteratorinit"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__next_func_172"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "RemoteCall:output:1"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "RemoteCall:output:2"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "RemoteCall:output:3"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "RemoteCall:output:4"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "RemoteCall:output:5"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "RemoteCall:output:6"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    attr {
      key: "experimental_ints_on_device"
      value {
        b: true
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
    arg_attr {
      key: 2
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference__next_func_172"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      input_arg {
        name: "multideviceiteratorgetnextfromshard_multideviceiteratorinit"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_INT64
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "MultiDeviceIteratorFromStringHandle"
      control_output: "MultiDeviceIteratorGetNextFromShard"
    }
    node_def {
      name: "MultiDeviceIteratorFromStringHandle"
      op: "MultiDeviceIteratorFromStringHandle"
      input: "string_handle"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "MultiDeviceIteratorGetNextFromShard/shard_num"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "MultiDeviceIteratorGetNextFromShard"
      op: "MultiDeviceIteratorGetNextFromShard"
      input: "MultiDeviceIteratorFromStringHandle:multi_device_iterator:0"
      input: "MultiDeviceIteratorGetNextFromShard/shard_num:output:0"
      input: "multideviceiteratorgetnextfromshard_multideviceiteratorinit"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:0"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:1"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:2"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:3"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:4"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:5"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "MultiDeviceIteratorGetNextFromShard:components:6"
      input: "^MultiDeviceIteratorFromStringHandle"
      input: "^MultiDeviceIteratorGetNextFromShard"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "MultiDeviceIteratorFromStringHandle"
      value: "MultiDeviceIteratorFromStringHandle"
    }
    control_ret {
      key: "MultiDeviceIteratorGetNextFromShard"
      value: "MultiDeviceIteratorGetNextFromShard"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_finalize_func_202"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_const_12"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_const_12"
      input: "string_handle"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__finalize_func_196"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^RemoteCall"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_read_one_file_16"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      device: "/replica:0/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
