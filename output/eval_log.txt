***** Evaluation on dev set during training *****
## Step 30
loss : 0.17903238534927368
[[181   1   3   0   1   0]
 [  2 193   2   0   3   0]
 [  0   1 231   0   2   0]
 [  2   0   0 179   1   2]
 [  6   3   1   0 163  11]
 [  1   0   3   1  13 173]] : 
[[181   1   3   0   1   0]
 [  2 193   2   0   3   0]
 [  0   1 231   0   2   0]
 [  2   0   0 179   1   2]
 [  6   3   1   0 163  11]
 [  1   0   3   1  13 173]]
Checking checkpoint model.ckpt-30
keeping checkpoint model.ckpt-30 with metric/accuracy = 0.9499576091766357

## Step 60
loss : 0.08211014419794083
[[185   0   1   0   0   0]
 [  0 199   0   0   1   0]
 [  0   1 233   0   0   0]
 [  0   0   0 183   1   0]
 [  1   1   1   0 178   3]
 [  0   0   2   1  10 178]] : 
[[185   0   1   0   0   0]
 [  0 199   0   0   1   0]
 [  0   1 233   0   0   0]
 [  0   0   0 183   1   0]
 [  1   1   1   0 178   3]
 [  0   0   2   1  10 178]]
Checking checkpoint model.ckpt-60
keeping checkpoint model.ckpt-60 with metric/accuracy = 0.9804919362068176
removing old checkpoint model.ckpt-30 with metric/accuracy = 0.9499576091766357

## Step 90
loss : 0.06826712936162949
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   0   0 183   1   0]
 [  0   1   1   0 177   5]
 [  0   0   1   1   7 182]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   0   0 183   1   0]
 [  0   1   1   0 177   5]
 [  0   0   1   1   7 182]]
Checking checkpoint model.ckpt-90
keeping checkpoint model.ckpt-90 with metric/accuracy = 0.9838846325874329
removing old checkpoint model.ckpt-60 with metric/accuracy = 0.9804919362068176

## Step 120
loss : 0.06574474275112152
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   5 184]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   5 184]]
Checking checkpoint model.ckpt-120
keeping checkpoint model.ckpt-120 with metric/accuracy = 0.9847328066825867
removing old checkpoint model.ckpt-90 with metric/accuracy = 0.9838846325874329

## Step 150
loss : 0.0632704496383667
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 177   5]
 [  0   0   1   1   7 182]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 177   5]
 [  0   0   1   1   7 182]]
Checking checkpoint model.ckpt-150
skipping checkpoint model.ckpt-150 with metric/accuracy = 0.9838846325874329

## Step 180
loss : 0.06219342350959778
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 175   7]
 [  0   0   1   1   5 184]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 175   7]
 [  0   0   1   1   5 184]]
Checking checkpoint model.ckpt-180
skipping checkpoint model.ckpt-180 with metric/accuracy = 0.9838846325874329

## Step 210
loss : 0.060488417744636536
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 176   6]
 [  0   0   1   1   6 183]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 176   6]
 [  0   0   1   1   6 183]]
Checking checkpoint model.ckpt-210
skipping checkpoint model.ckpt-210 with metric/accuracy = 0.9838846325874329

## Step 240
loss : 0.0606546476483345
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 176   6]
 [  0   0   1   1   6 183]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  0   1   1   0 176   6]
 [  0   0   1   1   6 183]]
Checking checkpoint model.ckpt-240
skipping checkpoint model.ckpt-240 with metric/accuracy = 0.9838846325874329

## Step 270
loss : 0.06005919724702835
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   6 183]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   6 183]]
Checking checkpoint model.ckpt-270
skipping checkpoint model.ckpt-270 with metric/accuracy = 0.9838846325874329

## Step 300
loss : 0.05988726392388344
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   6 183]] : 
[[185   0   1   0   0   0]
 [  0 200   0   0   0   0]
 [  0   1 233   0   0   0]
 [  0   1   0 183   0   0]
 [  1   0   1   0 176   6]
 [  0   0   1   1   6 183]]
Checking checkpoint model.ckpt-300
skipping checkpoint model.ckpt-300 with metric/accuracy = 0.9838846325874329

***** Training finished. *****

***** Evaluation on test set with best exported model: *****
global_step = 120
loss = 0.040486906
metric/accuracy = 0.9866667
metric/confusion_matrix = [[ 99   1   0   0   0   0]
 [  0 100   0   0   0   0]
 [  0   1  97   0   0   2]
 [  0   1   0  99   0   0]
 [  0   0   0   0 100   0]
 [  0   0   1   0   2  97]]
output/export/best_accuracy/1623575946
The given SavedModel SignatureDef contains the following input(s):
  inputs['doc_query'] tensor_info:
      dtype: DT_STRING
      shape: (-1)
      name: doc_query_placeholder:0
  inputs['label'] tensor_info:
      dtype: DT_FLOAT
      shape: (-1)
      name: label_placeholder:0
  inputs['uid'] tensor_info:
      dtype: DT_INT64
      shape: ()
      name: uid_placeholder:0
  inputs['weight'] tensor_info:
      dtype: DT_FLOAT
      shape: ()
      name: weight_placeholder:0
  inputs['wide_ftrs'] tensor_info:
      dtype: DT_FLOAT
      shape: (-1, 1)
      name: wide_ftr_placeholder:0
The given SavedModel SignatureDef contains the following output(s):
  outputs['label'] tensor_info:
      dtype: DT_FLOAT
      shape: (1, -1)
      name: ExpandDims_2:0
  outputs['multiclass_probabilities'] tensor_info:
      dtype: DT_FLOAT
      shape: (-1, 6)
      name: Softmax:0
  outputs['scores'] tensor_info:
      dtype: DT_FLOAT
      shape: (-1, 6)
      name: Squeeze:0
  outputs['uid'] tensor_info:
      dtype: DT_INT64
      shape: (1)
      name: Const_6:0
  outputs['weight'] tensor_info:
      dtype: DT_FLOAT
      shape: (1)
      name: Const_7:0
Method name is: tensorflow/serving/predict
query "how's the weather in Mountain View", predicted intent "GetWeather".
query "I need a table for 4", predicted intent "BookRestaurant".
query "put Jean Philippe Goncalves onto my running to rock 170 to 190 bpm", predicted intent "AddToPlaylist".
query "Find the schedule for The Comedian", predicted intent "SearchScreeningEvent".
query "how's the weather in Mountain View", predicted intent "GetWeather".
query "I need a table for 4", predicted intent "BookRestaurant".
query "put Jean Philippe Goncalves onto my running to rock 170 to 190 bpm", predicted intent "AddToPlaylist".
query "Find the schedule for The Comedian", predicted intent "SearchScreeningEvent".
query "I want to be an Engirneer", predicted intent "BookRestaurant".
query "how's the weather in Mountain View", predicted intent "GetWeather".
query "I need a table for 4", predicted intent "BookRestaurant".
query "put Jean Philippe Goncalves onto my running to rock 170 to 190 bpm", predicted intent "AddToPlaylist".
query "Find the schedule for The Comedian", predicted intent "SearchScreeningEvent".
query "I looking for Engirneer Internship", predicted intent "SearchCreativeWork".
query "how's the weather in Mountain View", predicted intent "GetWeather".
query "I need a table for 4", predicted intent "BookRestaurant".
query "put Jean Philippe Goncalves onto my running to rock 170 to 190 bpm", predicted intent "AddToPlaylist".
query "Find the schedule for The Comedian", predicted intent "SearchScreeningEvent".
query "I looking for